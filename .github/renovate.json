{
  "$schema": "https://docs.renovatebot.com/renovate-schema.json",
  "branchPrefix": "renovate/",
  "dependencyDashboard": true,
  "dependencyDashboardTitle": "Renovate Dashboard",
  "enabled": true,
  "extends": [
    "config:base",
    ":gitSignOff"
  ],
  "gitAuthor": "Renovate Bot <renovate@whitesourcesoftware.com>",
  "platform": "github",
  "rebaseWhen": "conflicted",
  "repositories": [
    "bjw-s/k8s-gitops"
  ],
  "requireConfig": false,
  "suppressNotifications": [
    "prIgnoreNotification"
  ],
  "semanticCommits": "enabled",
  "timezone": "Europe/Amsterdam",
  "helmv3": {
    "fileMatch": [
      "charts/.+/Chart\\.yaml$"
    ]
  },
  "helm-values": {
    "fileMatch": [
      "cluster/.+/helmrelease\\.yaml$"
    ]
  },
  "kubernetes": {
    "fileMatch": [
      "cluster/.+\\.yaml$"
    ],
    "ignorePaths": [
      "cluster/base/"
    ]
  },
  "regexManagers": [
    {
      "fileMatch": [
        "cluster/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?)\n *chart: (?<depName>.*?)\n *version: (?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    {
      "fileMatch": [
        "cluster/crds/cert-manager/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n.*\\/(?<currentValue>.*?)\\/"
      ],
      "datasourceTemplate": "helm"
    },
    {
      "fileMatch": [
        "cluster/crds/kube-prometheus-stack/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?)\n *tag: (?<depName>[a-zA-Z-]+)-(?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    {
      "fileMatch": [
        "cluster/crds/traefik/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n *tag: v(?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    {
      "fileMatch": [
        "cluster/crds/rook-ceph/.+\\.yaml$"
      ],
      "matchStrings": [
        "registryUrl=(?<registryUrl>.*?) chart=(?<depName>.*?)\n *tag: (?<currentValue>.*)\n"
      ],
      "datasourceTemplate": "helm"
    },
    {
      "fileMatch": [
        "cluster/apps/selfhosted/github-actions-runner/.+\\.yaml$"
      ],
      "matchStrings": [
        "image: (?<depName>.*?):(?<currentValue>.*?)\n"
      ],
      "datasourceTemplate": "docker"
    }
  ],
  "packageRules": [
    {
      "matchDatasources": [
        "helm"
      ],
      "semanticCommitScope": "charts",
      "commitMessageTopic": "{{depName}}",
      "commitMessageExtra": "to {{{newValue}}}",
      "separateMinorPatch": true,
      "ignoreDeprecated": true
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "enabled": true,
      "matchUpdateTypes": [
        "major",
        "minor",
        "patch"
      ]
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "semanticCommitScope": "images",
      "commitMessageTopic": "{{depName}}",
      "commitMessageExtra": "to {{{newValue}}}",
      "separateMinorPatch": true
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "commitMessagePrefix": "feat(images)!: ",
      "labels": [
        "renovate/image-release",
        "deps/major"
      ]
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchUpdateTypes": [
        "minor"
      ],
      "semanticCommitType": "feat",
      "labels": [
        "renovate/image-release",
        "deps/minor"
      ]
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchUpdateTypes": [
        "patch"
      ],
      "semanticCommitType": "fix",
      "labels": [
        "renovate/image-release",
        "deps/patch"
      ]
    },
    {
      "matchDatasources": [
        "helm"
      ],
      "matchUpdateTypes": [
        "major"
      ],
      "commitMessagePrefix": "feat(charts)!: ",
      "labels": [
        "renovate/helm-chart",
        "deps/major"
      ]
    },
    {
      "matchDatasources": [
        "helm"
      ],
      "matchUpdateTypes": [
        "minor"
      ],
      "semanticCommitType": "feat",
      "labels": [
        "renovate/helm-chart",
        "deps/minor"
      ]
    },
    {
      "matchDatasources": [
        "helm"
      ],
      "matchUpdateTypes": [
        "patch"
      ],
      "semanticCommitType": "fix",
      "labels": [
        "renovate/helm-chart",
        "deps/patch"
      ]
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "blakeblackshear/frigate"
      ],
      "versioning": "regex:^(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$"
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "xirixiz/dsmr-reader-docker"
      ],
      "versioning": "regex:^latest-(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)-(?<compatibility>.*)$"
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "minio/minio"
      ],
      "versioning": "regex:^RELEASE\\.(?<major>\\d{4})-(?<minor>\\d{2})-(?<patch>\\d{2})"
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "hotio/readarr"
      ],
      "versioning": "regex:^nightly-0\\.(?<major>\\d+)\\.(?<minor>\\d+)\\.(?<patch>\\d+)$"
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "octoprint/octoprint"
      ],
      "allowedVersions": "<2.0"
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "influxdb"
      ],
      "allowedVersions": "<2"
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "matchPackageNames": [
        "ghcr.io/k8s-at-home/plex"
      ],
      "versioning": "loose"
    },
    {
      "matchDatasources": [
        "helm",
        "docker"
      ],
      "matchPackagePatterns": [
        "^rook.ceph"
      ],
      "groupName": "rook-ceph-suite",
      "additionalBranchPrefix": "",
      "separateMinorPatch": true
    },
    {
      "matchPackageNames": [
        "rancher/system-upgrade-controller"
      ],
      "groupName": "rancher/system-upgrade-controller",
      "additionalBranchPrefix": "",
      "separateMinorPatch": true
    },
    {
      "matchDatasources": [
        "docker"
      ],
      "automerge": true,
      "automergeType": "branch",
      "requiredStatusChecks": null,
      "matchUpdateTypes": [
        "minor",
        "patch"
      ],
      "matchPackageNames": [
        "ghcr.io/k8s-at-home/jackett",
        "ghcr.io/k8s-at-home/lidarr",
        "ghcr.io/k8s-at-home/plex",
        "ghcr.io/k8s-at-home/prowlarr",
        "ghcr.io/k8s-at-home/radarr",
        "ghcr.io/k8s-at-home/sonarr",
        "hotio/readarr"
      ]
    }
  ]
}
