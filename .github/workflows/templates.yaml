---
name: Render templates

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
  push:
    branches:
    - main
    paths:
    - "cluster/**/*.tmpl"
    - "_setup/sealedsecret-cert.pem"
    - ".github/workflows/templates.yaml"
    - ".github/scripts/render_templates.sh"

env:
  DEBIAN_FRONTEND: "noninteractive"

jobs:
  render:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
      with:
        token: ${{ secrets.ACCESS_TOKEN }}
        fetch-depth: 1

    - uses: 'lukeshay/setup-task@v1'
      name: Install go-task/task

    - uses: lra/setup-kubeval@v1
      name: Install kubeval
      with:
        version: 0.15.0

    - name: Install git-crypt
      run: |
        sudo apt update -y
        sudo apt install -y --no-install-recommends \
          git-crypt

    - name: Install kubectl
      run: |
        curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
        sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl

    - name: Install gomplate
      run: |
        curl -o ./gomplate -sSL https://github.com/hairyhenderson/gomplate/releases/download/v3.9.0/gomplate_linux-amd64
        sudo install -o root -g root -m 0755 gomplate /usr/local/bin/gomplate

    - name: Install yq
      run: |
        curl -o ./yq -sSL https://github.com/mikefarah/yq/releases/download/v4.6.3/yq_linux_amd64
        sudo install -o root -g root -m 0755 yq /usr/local/bin/yq

    - name: Install kubeseal
      run: |
        curl -o ./kubeseal -sSL https://github.com/bitnami-labs/sealed-secrets/releases/download/v0.15.0/kubeseal-linux-amd64
        sudo install -o root -g root -m 0755 kubeseal /usr/local/bin/kubeseal

    - name: Unlock secrets
      env:
        GIT_CRYPT_KEY: ${{ secrets.GIT_CRYPT_KEY }}
      run: |
        echo "$GIT_CRYPT_KEY" | base64 -d > ./git-crypt-key
        git-crypt unlock ./git-crypt-key
        rm ./git-crypt-key

    - uses: jitterbit/get-changed-files@v1
      id: changed_files
      with:
        format: 'csv'

    - name: Store changed and removed files
      run: |
        mapfile -d ',' -t changed_files < <(printf '%s,' '${{ steps.changed_files.outputs.all }}')
        for changed_file in "${changed_files[@]}"; do
          echo "${changed_file}" >> /tmp/changed_files
        done

    # Regenerate only the new or update secrets, unless the script logic or sealing certificate have changed
    - name: Generate new/updated templates
      if: "!contains(steps.changed_files.outputs.added_modified, '.github/scripts/render_templates.sh') && !contains(steps.changed_files.outputs.added_modified, '_setup/sealedsecret-cert.pem')"
      env:
        INPUT_FILE: /tmp/changed_files
      run: |
        cat /tmp/changed_files
        task render-templates

    # If the script logic or sealing certificate have changed, regenerate all certificates
    - name: Regenerate all templates
      if: "contains(steps.changed_files.outputs.added_modified, '.github/scripts/render_templates.sh') || contains(steps.changed_files.outputs.added_modified, '_setup/sealedsecret-cert.pem')"
      run: |
        task render-templates

    - name: Commit and push rendered templates
      run: |
        if [[ -n $(git status --porcelain) ]]; then
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"
          git pull
          git add "cluster/**/*.yaml"
          git commit -m "Auto-render templates [ci-skip]" || exit 0
          git push
        fi
