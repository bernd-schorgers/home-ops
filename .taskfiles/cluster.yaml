---
version: "3"

tasks:
  rook-ceph-toolbox:
    desc: Exec into the Rook Ceph toolbox
    cmds:
      - kubectl -n rook-ceph exec -it $(kubectl -n rook-ceph get pod -l "app=rook-direct-mount" -o jsonpath='{.items[0].metadata.name}') -- bash
    silent: true

  rook-password:
    desc: Retrieve the rook-ceph password
    silent: true
    cmds:
      - kubectl -n rook-ceph get secret rook-ceph-dashboard-password -o jsonpath="{['data']['password']}" | base64 --decode && echo

  list-dockerhub:
    desc: What dockerhub images are running in my cluster
    silent: true
    cmds:
      - kubectl get pods --all-namespaces -o=jsonpath="{range .items[*]}{'\n'}{range .spec.containers[*]}{.image}{'\n'}{end}{end}" | sort | uniq | grep -Ev 'quay|gcr|ghcr|ecr|us-docker|registry.k8s' | grep -Ev 'bitnami|rook|intel|grafana' |  sed -e 's/docker\.io\///g' | sort | uniq

  debug-volume:
    desc: Attach a volume to a container for debugging, ex. VOLUME=zigbee2mqtt-config-v1 NAMESPACE=home task debug-volume
    interactive: true
    silent: true
    cmds:
      - |
        kubectl run debug-{{.VOLUME}} -n {{.NAMESPACE}} -i --tty --rm --image=null --overrides='
          {
            "spec": {
              "containers": [
                {
                  "name": "debug",
                  "image": "docker.io/library/ubuntu:focal",
                  "command": [
                    "/bin/bash"
                  ],
                  "stdin": true,
                  "stdinOnce": true,
                  "tty": true,
                  "lifecycle": {
                    "postStart": {
                      "exec": {
                        "command": [
                          "/bin/sh",
                          "-c",
                          "apt update -y && apt install -y curl vim"
                        ]
                      }
                    }
                  },
                  "volumeMounts": [
                    {
                      "name": "backups",
                      "mountPath": "/mnt/backups/"
                    },
                    {
                      "name": "debug-volume",
                      "mountPath": "/mnt/volume/"
                    }
                  ]
                }
              ],
              "volumes": [
                {
                  "name": "backups",
                  "nfs": {
                    "server": "nas.bjw-s.tech",
                    "path": "/volume1/Backup/Kubernetes"
                  }
                },
                {
                  "name": "debug-volume",
                  "persistentVolumeClaim": {
                    "claimName": "{{.VOLUME}}"
                  }
                }
              ],
              "restartPolicy": "Never"
            }
          }'

  debug-node:
    desc: Create a privileged container on a node for debugging, ex. NODE=anvil task debug-node
    interactive: true
    silent: true
    cmds:
      - |
        kubectl run debug-{{.NODE}} -i --tty --rm --image="docker.io/library/ubuntu:focal" --privileged --overrides='
          {
            "spec": {
              "nodeSelector": {
                "kubernetes.io/hostname": "{{.NODE}}"
              },
              "restartPolicy": "Never",
              "hostNetwork": true
            }
          }'

  delete-failed-pods:
    desc: Deletes failed pods
    cmds:
      - kubectl delete pods --field-selector status.phase=Failed -A --ignore-not-found=true
