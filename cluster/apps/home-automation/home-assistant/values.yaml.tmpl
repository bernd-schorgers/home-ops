---
podAnnotations:
  secret.reloader.stakater.com/reload: home-assistant-secrets
  backup.velero.io/backup-volumes: config

probes:
  liveness:
    enabled: false
  readiness:
    enabled: false
  startup:
    enabled: false

service:
  type: LoadBalancer
  externalIPs:
  - {{ (datasource "home-assistant").network.advertise_host }}
  externalTrafficPolicy: Local
  additionalPorts:
  - name: sonos
    port: 1400
    targetPort: 1400

ingress:
  enabled: true

  annotations:
    kubernetes.io/ingress.class: external
    external-dns.alpha.kubernetes.io/target: cname--ext.{{ index (datasource "cluster-vars").domains 0 }}
    external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
    cert-manager.io/cluster-issuer: letsencrypt-production

  hosts:
  - host: domo.{{ index (datasource "cluster-vars").domains 1 }}
    paths:
      - path: /
  - host: domo.{{ index (datasource "cluster-vars").domains 2 }}
    paths:
      - path: /

  tls:
  - secretName: tls.home-assistant-frontend
    hosts:
    - domo.{{ index (datasource "cluster-vars").domains 1 }}
    - domo.{{ index (datasource "cluster-vars").domains 2 }}

env:
  TZ: "Europe/Amsterdam"

envFrom:
- secretRef:
    name: home-assistant-secrets

persistence:
  config:
    enabled: true
    existingClaim: home-assistant-data

postgresql:
  enabled: true
  persistence:
    enabled: true
    existingClaim: home-assistant-postgresql

  postgresqlUsername: {{ (datasource "home-assistant").database.username }}
  postgresqlDatabase: {{ (datasource "home-assistant").database.database }}
  postgresqlPassword: {{ (datasource "home-assistant").database.password }}

  primary:
    podAnnotations:
      backup.velero.io/backup-volumes: data

git:
  deployKey: |
    {{- (datasource "home-assistant").git.identity | printf "\n%v" | indent 4 }}

addons:
  codeserver:
    enabled: true
    ingress:
      enabled: true
      annotations:
        kubernetes.io/ingress.class: internal
        cert-manager.io/cluster-issuer: letsencrypt-production
        external-dns.alpha.kubernetes.io/target: cname--int.{{ index (datasource "cluster-vars").domains 0 }}
        nginx.ingress.kubernetes.io/proxy-body-size: "0"
      hosts:
      - host: code-domo.{{ index (datasource "cluster-vars").domains 1 }}
        paths:
          - path: /
      - host: code-domo.{{ index (datasource "cluster-vars").domains 2 }}
        paths:
          - path: /
      tls:
      - secretName: tls.home-assistant-code
        hosts:
        - code-domo.{{ index (datasource "cluster-vars").domains 1 }}
        - code-domo.{{ index (datasource "cluster-vars").domains 2 }}

    args:
    - --auth
    - none
    - --user-data-dir
    - "/config/.vscode"
    - --extensions-dir
    - "/config/.vscode"

    workingDir: "/config"

    volumeMounts:
    - name: config
      mountPath: /config
    - name: deploykey
      mountPath: /root/.ssh/id_rsa
      subPath: id_rsa
