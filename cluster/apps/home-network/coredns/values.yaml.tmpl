---
rbac:
  create: true

replicaCount: 2

isClusterService: false
serviceType: LoadBalancer
service:
  externalIPs:
  - 10.1.10.3
  externalTrafficPolicy: Local

servers:
- port: 53
  zones:
  - zone: {{ index (datasource "cluster-vars").domains 0 }}
    scheme: dns://
  - zone: {{ index (datasource "cluster-vars").domains 1 }}
    scheme: dns://
  - zone: {{ index (datasource "cluster-vars").domains 2 }}
    scheme: dns://
  - zone: unifi
    scheme: dns://

  plugins:
  # Enables console logging
  # - name: log

  - name: errors

  # Serves a /health endpoint on :8080, required for livenessProbe
  - name: health
    configBlock: |-
      lameduck 5s

  # Serves a /ready endpoint on :8181, required for readinessProbe
  - name: ready

  # Serves a /metrics endpoint on :9153, required for serviceMonitor
  - name: prometheus
    parameters: 0.0.0.0:9153

  # Allow automatic reloading of Corefile
  - name: reload

  # Detect forwarding loops
  - name: loop

  # Static hosts
  - name: hosts
    configBlock: |-
      10.1.1.11 minio.{{ index (datasource "cluster-vars").domains 0 }}
      10.1.1.11 nexus.{{ index (datasource "cluster-vars").domains 0 }}
      10.1.1.11 docker.nexus.{{ index (datasource "cluster-vars").domains 0 }}
      10.1.1.11 docker-cache.nexus.{{ index (datasource "cluster-vars").domains 0 }}
      fallthrough

  # Set up local resolution
  - name: etcd
    configBlock: |-
      stubzones
      path /skydns
      endpoint http://etcd:2379

  # Set up cache
  - name: cache
    parameters: 30

prometheus:
  service:
    enabled: true
  monitor:
    enabled: true

affinity:
  podAntiAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
    - labelSelector:
        matchExpressions:
        - key: app.kubernetes.io/name
          operator: In
          values:
          - coredns
      topologyKey: "kubernetes.io/hostname"

resources:
  requests:
    memory: 275Mi
    cpu: 50m
  limits:
    memory: 500Mi
    cpu: 1000m
