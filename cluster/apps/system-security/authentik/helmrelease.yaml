---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: system-security
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io
      chart: authentik
      version: 1.0.0-RC7
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      name: docker.beryju.org/authentik/server
      tag: gh-next
      pullPolicy: Always

    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        # external-dns/is-public: "true"
        external-dns.alpha.kubernetes.io/target: ingress.${DOMAIN_1}
        # external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        traefik.ingress.kubernetes.io/router.entrypoints: websecure

      hosts:
      - host: authentik.${DOMAIN_1}
        paths:
        - path: /

      tls:
      - secretName: tls.authentik
        hosts:
        - authentik.${DOMAIN_1}

    authentik:
      secret_key: ${AUTHENTIK_SECRET_KEY}
      log_level: debug

      image_static: docker.beryju.org/authentik/static
      outposts:
        docker_image_base: "docker.beryju.org/authentik/outpost-%(type)s:gh-next"

      postgresql:
        host: authentik-postgresql
        name: authentik
        user: authentik
        password: ${AUTHENTIK_POSTGRES_PASSWORD}
      redis:
        host: authentik-redis-master
        password: ${AUTHENTIK_REDIS_PASSWORD}

    postgresql:
      enabled: true
      persistence:
        enabled: true
        existingClaim: authentik-postgresql

      postgresqlUsername: authentik
      postgresqlDatabase: authentik
      postgresqlPassword: ${AUTHENTIK_POSTGRES_PASSWORD}

    redis:
      enabled: true
      auth:
        enabled: true
        password: ${AUTHENTIK_REDIS_PASSWORD}
