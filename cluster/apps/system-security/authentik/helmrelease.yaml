---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: authentik
  namespace: system-security
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://charts.goauthentik.io
      chart: authentik
      version: 3.0.0
      sourceRef:
        kind: HelmRepository
        name: authentik-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: ghcr.io/goauthentik/server
      tag: 2021.9.7
      pullPolicy: IfNotPresent

    ingress:
      enabled: true
      ingressClassName: "traefik"
      annotations:
        cert-manager.io/cluster-issuer: letsencrypt-production
        # external-dns/is-public: "true"
        external-dns.alpha.kubernetes.io/target: ingress.${DOMAIN_1}
        # external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
        traefik.ingress.kubernetes.io/router.entrypoints: websecure

      hosts:
        - host: authentik.${DOMAIN_1}
          paths:
            - path: /

      tls:
        - secretName: tls.authentik
          hosts:
            - authentik.${DOMAIN_1}

    authentik:
      secret_key: ${AUTHENTIK_SECRET_KEY}
      log_level: debug

      outposts:
        docker_image_base: ghcr.io/goauthentik/%(type)s:%(version)s

      email:
        host: ${AUTHENTIK_SMTP_SERVER}
        port: 587
        username: ${AUTHENTIK_SMTP_USERNAME}
        password: ${AUTHENTIK_SMTP_PASSWORD}
        use_tls: true
        use_ssl: false
        from: "Authentik <authentik@mg.${DOMAIN_1}>"

      postgresql:
        host: "{{ .Release.Name }}-postgresql"
        name: authentik
        user: authentik
        password: ${AUTHENTIK_POSTGRES_PASSWORD}
      redis:
        host: "{{ .Release.Name }}-redis-master"
        password: ${AUTHENTIK_REDIS_PASSWORD}

    resources:
      server:
        requests:
          memory: 384Mi
        limits:
          memory: 512Mi
      worker:
        requests:
          memory: 384Mi
        limits:
          memory: 512Mi

    postgresql:
      enabled: true
      persistence:
        enabled: true
        existingClaim: authentik-postgresql

      postgresqlUsername: authentik
      postgresqlDatabase: authentik
      postgresqlPassword: ${AUTHENTIK_POSTGRES_PASSWORD}

      resources:
        requests:
          memory: 256Mi
        limits:
          memory: 512Mi

    redis:
      enabled: true
      auth:
        enabled: true
        password: ${AUTHENTIK_REDIS_PASSWORD}

      master:
        resources:
          requests:
            memory: 32Mi
          limits:
            memory: 64Mi
