---
affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
      - matchExpressions:
        - key: feature.node.kubernetes.io/custom-p1reader
          operator: In
          values:
          - "true"

env:
  TZ: Europe/Amsterdam
  DJANGO_TIME_ZONE: Europe/Amsterdam
  DJANGO_DATABASE_USER: "{{ (datasource "dsmr-reader").database.username | base64.Encode }}"
  DJANGO_DATABASE_PASSWORD: "{{ (datasource "dsmr-reader").database.password | base64.Encode }}"
  DJANGO_DATABASE_HOST: "{{ printf "dsmr-reader-postgresql.home-automation" | base64.Encode }}"
  DJANGO_DATABASE_PORT: "{{ printf "5432" | base64.Encode }}"
  DJANGO_DATABASE_NAME: "{{ (datasource "dsmr-reader").database.database | base64.Encode }}"

  DSMRREADER_ADMIN_USER: "{{ (datasource "dsmr-reader").app.admin.username | base64.Encode }}"
  DSMRREADER_ADMIN_PASSWORD: "{{ (datasource "dsmr-reader").app.admin.password | base64.Encode }}"

# Path to your p1 reader device in the container
additionalVolumeMounts:
- name: p1reader
  mountPath: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_A12VWGAF-if00-port0

# Path to your p1 reader device on the host
# additionalVolumes:
- name: p1reader
  hostPath:
    path: /dev/serial/by-id/usb-FTDI_FT232R_USB_UART_A12VWGAF-if00-port0

ingress:
  enabled: true

  annotations:
    kubernetes.io/ingress.class: internal
    cert-manager.io/cluster-issuer: letsencrypt-production
    external-dns.alpha.kubernetes.io/target: _cname_int.{{ index (datasource "cluster-vars").domains 0 }}

  hosts:
  - host: dsmr-reader.{{ index (datasource "cluster-vars").domains 0 }}
    paths:
      - path: /

  tls:
  - secretName: tls.home-assistant-frontend
    hosts:
    - dsmr-reader.{{ index (datasource "cluster-vars").domains 0 }}

postgresql:
  enabled: true

  postgresqlUsername: {{ (datasource "dsmr-reader").database.username }}
  postgresqlDatabase: {{ (datasource "dsmr-reader").database.database }}
  postgresqlPassword: {{ (datasource "dsmr-reader").database.password }}

  persistence:
    enabled: true
    existingClaim: dsmr-reader-postgresql

  primary:
    podAnnotations:
      backup.velero.io/backup-volumes: data
