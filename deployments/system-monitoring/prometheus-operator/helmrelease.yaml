---
apiVersion: helm.fluxcd.io/v1
kind: HelmRelease
metadata:
  name: prometheus-operator
  namespace: system-monitoring
  annotations:
    fluxcd.io/ignore: "false"
    fluxcd.io/automated: "true"
    fluxcd.io/tag.grafana: semver:~7
spec:
  releaseName: prometheus-operator
  chart:
    repository: https://kubernetes-charts.storage.googleapis.com/
    name: prometheus-operator
    version: 9.3.1
  values:
    defaultRules:
      rules:
        kubeApiserverAvailability: true
        kubeApiserver: true

    server:
      resources:
        requests:
          memory: 1000Mi
          cpu: 25m
        limits:
          memory: 2000Mi

    prometheusOperator:
      createCustomResource: false
      prometheusConfigReloaderImage:
        repository: quay.io/coreos/prometheus-config-reloader
        tag: v0.39.0
      configmapReloadImage:
        repository: jimmidyson/configmap-reload
        tag: v0.3.0

    alertmanager:
      config:
        global:
          resolve_timeout: 5m
        route:
          receiver: 'slack-notifications'
        receivers:
        - name: 'null'
        - name: 'slack-notifications'
          slack_configs:
          - channel: '#notifications'
            icon_url: https://avatars3.githubusercontent.com/u/3380462
            username: 'Alertmanager'
            send_resolved: true
            title: |-
              [{{ .Status | toUpper }}{{ if eq .Status "firing" }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }}
              {{- if gt (len .CommonLabels) (len .GroupLabels) -}}
                {{" "}}(
                {{- with .CommonLabels.Remove .GroupLabels.Names }}
                  {{- range $index, $label := .SortedPairs -}}
                    {{ if $index }}, {{ end }}
                    {{- $label.Name }}="{{ $label.Value -}}"
                  {{- end }}
                {{- end -}}
                )
              {{- end }}
            text: >-
              {{ range .Alerts -}}
                *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity
              }}`{{ end }}
              *Message:* {{ .Annotations.message }}
              *Details:*
                {{ range .Labels.SortedPairs }} â€¢ *{{ .Name }}:* `{{ .Value }}`
                {{ end }}
              {{ end }}
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 10Gi

    nodeExporter:
      serviceMonitor:
        relabelings:
        - action: replace
          regex: (.*)
          replacement: $1
          sourceLabels:
          - __meta_kubernetes_pod_node_name
          targetLabel: kubernetes_node

    grafana:
      image:
        repository: grafana/grafana
        tag: 7.2.2
      deploymentStrategy:
        type: Recreate
      persistence:
        enabled: false
      env:
        GF_EXPLORE_ENABLED: true
        GF_PANELS_DISABLE_SANITIZE_HTML: true
        GF_LOG_FILTERS: rendering:debug
        # VAR_BLOCKY_URL: "http://blocky.kube-system.svc.cluster.local:4000"
      sidecar:
        datasources:
          enabled: true
          # Disable for thanos
          defaultDatasourceEnabled: true
        dashboards:
          enabled: true
          searchNamespace: ALL
          provider:
            disableDelete: false
            allowUiUpdates: true
      plugins:
      - natel-discrete-panel
      - pr0ps-trackmap-panel
      - grafana-piechart-panel
      - vonage-status-panel
      - grafana-worldmap-panel
      - grafana-clock-panel
      dashboardProviders:
        dashboardproviders.yaml:
          apiVersion: 1
          providers:
          - name: 'default'
            orgId: 1
            folder: ''
            type: file
            disableDeletion: false
            allowUiUpdates: true
            editable: true
            options:
              path: /var/lib/grafana/dashboards/default
      dashboards:
        default:
          nginx-dashboard:
            url: https://raw.githubusercontent.com/kubernetes/ingress-nginx/master/deploy/grafana/dashboards/nginx.json
            datasource: Prometheus
          flux:
            url: https://raw.githubusercontent.com/fluxcd/flux/master/chart/flux/dashboards/flux-dashboard.json
            datasource: Prometheus
          helm-operator:
            url: https://raw.githubusercontent.com/fluxcd/helm-operator/master/chart/helm-operator/dashboards/helm-operator-dashboard.json
            datasource: Prometheus
      grafana.ini:
        paths:
          data: /var/lib/grafana/data
          logs: /var/log/grafana
          plugins: /var/lib/grafana/plugins
          provisioning: /etc/grafana/provisioning
        analytics:
          check_for_updates: true
        log:
          mode: console
        grafana_net:
          url: https://grafana.net

    kubeEtcd:
      enabled: false

    kubeControllerManager:
      enabled: false

    kubeScheduler:
      enabled: false

    kubeProxy:
      enabled: false

    kubelet:
      serviceMonitor:
        metricRelabelings:
        - action: replace
          sourceLabels:
          - node
          targetLabel: instance

    prometheus:
      prometheusSpec:
        ruleSelector: {}
        ruleNamespaceSelector: {}
        ruleSelectorNilUsesHelmValues: false
        serviceMonitorSelector: {}
        serviceMonitorNamespaceSelector: {}
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelector: {}
        podMonitorNamespaceSelector: {}
        podMonitorSelectorNilUsesHelmValues: false
        retention: 60d
        enableAdminAPI: true
        walCompression: true
        storageSpec:
          volumeClaimTemplate:
            spec:
              resources:
                requests:
                  storage: 50Gi

  valuesFrom:
  - secretKeyRef:
      name: prometheus-operator-helm-values
      key: values
