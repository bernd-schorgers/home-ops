---
prometheus:
  # TODO: Uncomment when ingress is in place
  # ingress:
  #   enabled: false
  #   pathType: Prefix
  #   annotations:
  #     kubernetes.io/ingress.class: traefik
  #     cert-manager.io/cluster-issuer: letsencrypt-production
  #     external-dns.alpha.kubernetes.io/target: ingress.${CLUSTER_NAME}.${INGRESS_DOMAIN}
  #     traefik.ingress.kubernetes.io/router.entrypoints: websecure
  #     traefik.ingress.kubernetes.io/router.middlewares: system-ingress-rfc1918-ips@kubernetescrd
  #   hosts:
  #     - prometheus.${CLUSTER_NAME}.${INGRESS_DOMAIN}
  #   tls:
  #     - secretName: prometheus-${CLUSTER_NAME}-tls
  #       hosts:
  #         - prometheus.${CLUSTER_NAME}.${INGRESS_DOMAIN}

  # TODO: Uncomment when thanos is in place
  # thanosService:
  #   enabled: true

  prometheusSpec:
    replicas: 1
    replicaExternalLabelName: "replica"
    ruleSelectorNilUsesHelmValues: false
    serviceMonitorSelectorNilUsesHelmValues: false
    podMonitorSelectorNilUsesHelmValues: false
    probeSelectorNilUsesHelmValues: false
    retention: 6h
    enableAdminAPI: true
    walCompression: true
    # TODO: Uncomment when storage is in place
    # storageSpec:
    #   volumeClaimTemplate:
    #     spec:
    #       storageClassName: "rook-ceph-block"
    #       resources:
    #         requests:
    #           storage: 10Gi
    resources:
      requests:
        memory: 3072Mi
      limits:
        memory: 4096Mi

    # TODO: Uncomment when thanos is in place
    # thanos:
    #   image: quay.io/thanos/thanos:v0.23.1
    #   version: v0.22.0
    #   objectStorageConfig:
    #     name: thanos-objstore-secret
    #     key: objstore.yml
