---
- name: Ensure crowsnest dependencies are installed
  ansible.builtin.import_tasks: "dependencies.yml"

- name: Check if crowsnest.service exists
  ansible.builtin.stat:
    path: /etc/systemd/system/crowsnest.service
  register: var_crowsnestservice

- name: Stop crowsnest.service if service exists
  ansible.builtin.systemd:
    name: crowsnest.service
    state: stopped
  become: true
  changed_when: false
  when: var_crowsnestservice.stat.exists

- name: git checkout crowsnest
  ansible.builtin.git:
    repo: "https://github.com/mainsail-crew/crowsnest.git"
    dest: "{{crowsnest_install_path}}"
    version: "{{crowsnest_version}}"
  register: var_crowsnest_git

- name: Link crowsnest binary
  become: true
  ansible.builtin.file:
    src: "{{crowsnest_install_path}}/crowsnest"
    dest: /usr/local/bin/crowsnest
    state: link

- name: Check if crowsnest config exists
  ansible.builtin.stat:
    path: "{{klipper_config_folder}}/crowsnest.conf"
  register: var_crowsnestconfig

- name: Create default crownsnest config
  ansible.builtin.template:
    src: templates/crowsnest/crowsnest.conf.j2
    dest: "{{klipper_config_folder}}/crowsnest.conf"
  when: not var_crowsnestconfig.stat.exists

- name: Build runtime dependencies
  community.general.make:
    chdir: "{{crowsnest_install_path}}/bin"
    target: all
  when:
    - var_crowsnest_git.changed

- name: Determine available groups
  getent:
    database: group

- name: Add user to video group
  become: true
  ansible.builtin.user:
    name: "{{ansible_user}}"
    groups: "video"
    append: true
  when:
    - "'video' in ansible_facts.getent_group"

- name: Create crowsnest systemd file
  ansible.builtin.template:
    src: templates/crowsnest/crowsnest.service.j2
    dest: /etc/systemd/system/crowsnest.service
    mode: 0644
    force: true
  become: true

- name: Restart crowsnest
  become: true
  ansible.builtin.systemd:
    name: crowsnest.service
    state: restarted
    enabled: true
    daemon_reload: true
  changed_when: false
