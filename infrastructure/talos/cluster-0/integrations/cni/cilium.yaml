# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - namespaces
      - services
      - pods
      - endpoints
      - nodes
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - list
      - watch
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
      - ciliumbgppeeringpolicies
      - ciliumclusterwideenvoyconfigs
      - ciliumclusterwidenetworkpolicies
      - ciliumegressgatewaypolicies
      - ciliumendpoints
      - ciliumendpointslices
      - ciliumenvoyconfigs
      - ciliumidentities
      - ciliumlocalredirectpolicies
      - ciliumnetworkpolicies
      - ciliumnodes
      - ciliumnodeconfigs
    verbs:
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
      - ciliumendpoints
      - ciliumnodes
    verbs:
      - create
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
    verbs:
      - delete
      - get
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
      - ciliumnodes/status
    verbs:
      - get
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
      - ciliumendpoints/status
      - ciliumendpoints
    verbs:
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - ""
    resources:
      - nodes
    verbs:
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - nodes
      - nodes/status
    verbs:
      - patch
  - apiGroups:
      - discovery.k8s.io
    resources:
      - endpointslices
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services/status
    verbs:
      - update
      - patch
  - apiGroups:
      - ""
    resources:
      - namespaces
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - services
      - endpoints
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies
      - ciliumclusterwidenetworkpolicies
    verbs:
      - create
      - update
      - deletecollection
      - patch
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnetworkpolicies/status
      - ciliumclusterwidenetworkpolicies/status
    verbs:
      - patch
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpoints
      - ciliumidentities
    verbs:
      - delete
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumidentities
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
  - apiGroups:
      - cilium.io
    resources:
      - ciliumnodes/status
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumendpointslices
      - ciliumenvoyconfigs
    verbs:
      - create
      - update
      - get
      - list
      - watch
      - delete
      - patch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - create
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resourceNames:
      - ciliumloadbalancerippools.cilium.io
      - ciliumbgppeeringpolicies.cilium.io
      - ciliumclusterwideenvoyconfigs.cilium.io
      - ciliumclusterwidenetworkpolicies.cilium.io
      - ciliumegressgatewaypolicies.cilium.io
      - ciliumendpoints.cilium.io
      - ciliumendpointslices.cilium.io
      - ciliumenvoyconfigs.cilium.io
      - ciliumexternalworkloads.cilium.io
      - ciliumidentities.cilium.io
      - ciliumlocalredirectpolicies.cilium.io
      - ciliumnetworkpolicies.cilium.io
      - ciliumnodes.cilium.io
      - ciliumnodeconfigs.cilium.io
    resources:
      - customresourcedefinitions
    verbs:
      - update
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - ciliumloadbalancerippools/status
    verbs:
      - patch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - create
      - get
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
  - apiGroups:
      - networking.k8s.io
    resources:
      - networkpolicies
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - ""
    resources:
      - componentstatuses
      - endpoints
      - namespaces
      - nodes
      - pods
      - services
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - apiextensions.k8s.io
    resources:
      - customresourcedefinitions
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - cilium.io
    resources:
      - "*"
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
  - kind: ServiceAccount
    name: cilium
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
  - kind: ServiceAccount
    name: cilium-operator
    namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
  - kind: ServiceAccount
    name: hubble-ui
    namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: cluster-0
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml:
    "cluster-name: cluster-0\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf:
    "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYlhVd0p4ellqa2Q2Vk9HRWtJd0ZDREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFMk1UTXdNVEEyV2hjTk1qWXdOVEUxTVRNdwpNVEEyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHZqZnVWOVpBQkFYMVhIWmdmVU5KbndIVGZObFNsRkxFaHRCMFltZEFVZ0YyR1F5L1cKWXZYYm5vRXBJWFpDN2hyQzdsTnM3TXNudUtMNTlWdkpJUS9xTElwaEUzallZYTA4QVlqMmFhT3dJVEJ1Mi80cApUeXdjUC9reERMaDZJQ0VmTHVqd1B0cTR5d3A1Z09FcjZ6bzBwcEZ1M0xmYzdYakN0QjNwT3ZaTmdZK08vUDdECjNvRmdKalZCU0p2SjZNZ3RLeGpFSmRHdlJacXJoTTc2S2FUejRoSlFBNWo3Z1Z0Wms1M3ROTy93ZGZ6R1p0dXMKVE9hQXNNSk5ZeFdiK3NKOFh0OTY3dDBMbU1CT3BoRjAxOVJ5a3NhNVF0TEFQN3cwM1VVaUE3Q1NjdEZZd2ttbworeVI3WmlyUnFUUU10Uk5JakRqTFpTMHg4M2xDOUdGOTVMcURBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVMeHpUd3lzUHU1YlBnR1ZnNzhVaHRzcHFoN1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDM3pmcERrcTB2RkNPbFVEejVwZUFZOTUvb2hOOHZVMURGYzFwN3ZmS2dESHdVTlVlYkMvRE1VCmJhL1hrVVR2YW1PYnc1Z0Q4ajFMRFExeTFFVG5LREx4S3VpYyt1TlVvSk1HYnJxRlZCMVNWYi82S2M1Y0gzRkYKR1htbGZEWUxUeUlJMElBaXZCekJEN1lmVVJ0NldxM1UrQkxhc21kb0pYL3JyMHg1djhQZ0diSWxPTFZGanprVgp6NXkwaWdGNEsvclNMK1FGWENGVENJeHk2MTVjc25sY3ZQWUM2cUpuR3A1dU1HTkJKNW9hMEZBM1NVN2FpWGlPCkIwbzFzeE9oRWdiYkFIdVZOOCtMSjVwWFhNTWIrM2svOFF4SEw0c1FyaGo4RWZMeVdqVG5kUUdGSWVpbjhQYUMKVDhCK05yeVVvaloyUE9kZ2R3VzlXdXgwM2x3Y1dzdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNzQzN2xmV1FBUUY5VngyWUgxRFNaOEIwM3paVXBSU3hJYlFkR0puUUZJQmRoa012CjFtTDEyNTZCS1NGMlF1NGF3dTVUYk96TEo3aWkrZlZieVNFUDZpeUtZUk40MkdHdFBBR0k5bW1qc0NFd2J0disKS1U4c0hELzVNUXk0ZWlBaEh5N284RDdhdU1zS2VZRGhLK3M2TkthUmJ0eTMzTzE0d3JRZDZUcjJUWUdQanZ6Kwp3OTZCWUNZMVFVaWJ5ZWpJTFNzWXhDWFJyMFdhcTRUTytpbWs4K0lTVUFPWSs0RmJXWk9kN1RUdjhIWDh4bWJiCnJFem1nTERDVFdNVm0vckNmRjdmZXU3ZEM1akFUcVlSZE5mVWNwTEd1VUxTd0QrOE5OMUZJZ093a25MUldNSkoKcVBza2UyWXEwYWswRExVVFNJdzR5MlV0TWZONVF2UmhmZVM2Z3dJREFRQUJBb0lCQUFiRUVOWUVjSVBHd2Y2Qwo1SGdGOVZ0ZTBTNDR2NTFGLzFhL1dvOEdVUjB6SHZFYTFyQU1iWHM5ZDlKc2tvV0RhaGdWV1IvYmRFVno3bzUyCndwZmtxaWxvQnFTRlEwV0JSTDVNSU0wczRLV3AyazlYUVU5ellBQ1FRZjZEcUhZeWtCenNXMEhsMUpHaGtuTXEKRTdJRTI4ais1MTZsTjBBektOVCs5MVZPQ0FUYVZPK2ZuZHdBeUNQcW4rdkEzYVdWd2YxWVdlb2t0dHpQcnZubwpiTG9EbmdZS2FmWll2MDVaaEsxNk5sdTFEa2JVZ1lqcmZrUzR3K0VudzBLR2VCc2RoS254S2VwQU9uMS9MYVMyCkJhVTZCcnlZL1JtRmQ1cFBsRjBFeTBWcllNTTIyWTBMdExYQkZVRG5oOWJHZ1ByajFZZ3pyN203aFV2YmVKeVEKR0wzbTAra0NnWUVBNzZqdERSVnhhWDJMNnZvL2c2RW9SWkpiempvZWdZdkdnVUZLbkpGMEw1TnhUSkNHWDFUWQpGdWZ4UkN2WXZRbVYwTkg1aU10RXNiWXFFZ2w5RWhGaEs1UDl5OXZEVm1yL3pDTVhzc2FIWHMzbEpCckdoMXZzClkxaWhQNnBGYkxqVDM1Nmp0OVBqeFpKUm01Uk1aS3ArWlYxclBVdnRMMnlaaWo3eW5oU0xrcmNDZ1lFQS8rTTQKUXc1MVh5YzcyZXd6RlZTdE5OMGwrTHU3RzE5T2NoL0R1S1FodnJtVitjaUU0VUwzOVZXMlNmLzBWY1VvM25JawpJcFRTZGhUWU92R2xNMUJKcmplbXFjTWI3dkkrRWFUbENYT1VwZmFYakd1QzZuakU4SDhpWlNUeXFDMDF1a2dmCktCclRMNXpFUFprbUUxL2pYTHF4UGoyYUpmY0kwcWlnNkoyTVdwVUNnWUVBNmZER3ZQL1NmanY4S2JwdjUyaVgKN0JtckhncmpubWMzdFJKcjU1dWdnNVIwZzEyTW5XQXZzMlJqd2J6ZlMrQWdhditjaXFpSS9NUXFHd05DSURIdwozVjRQMzBBOVZJMEw5MVBHSFUvbjhtWWZwL2V2RlpCb2xxMThjYTRmS0xyZXJ5bW0vSm1NZkY2UTVNS0ZNN3F0CnVQclE1THZKNG9JcStxVHBwZCsrUXM4Q2dZQmtURlBKTk9tY21teERSdW5lK29uSnBzVXpjYUl0WUhZSEZaeEoKeTB2T3pqK1M0SjMxRGFMVGJ2MDhsQzdaVDZadFNxQVBUZllRZ3FzZXI0anBUQmNWU29yeEQ2RHJUOWcwWWtYRQpKcUdsUzdxck41amcvdVZ5dnVKa2NzOEtURzQ2emZvb1podFJGa2wxTzRwSkhkU29qQ1RkR0poTE9VRWtFU1RCCkNML3k0UUtCZ1FDckFqd2dmZi9mbHdVeHpyUGxCY2xpTFhuMVRWSldJR1BKcjdXck53YUt2eloySVMzd2dyaTAKcUVqNmZoVElrQ1ZnRFFEeEVwbHoyTU1PY1hERzU2UDFsQWRpMVdNeHVrOTgyY2pDczF5N0RrcGZZK05UNERKUApDK0Zqc3dLSEtvdnFBT0RZdlJRRlo1UUJXWVFwRVVZWHBLTEhtL1UzKzRxZ05heU9pNS9qckE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYlhVd0p4ellqa2Q2Vk9HRWtJd0ZDREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFMk1UTXdNVEEyV2hjTk1qWXdOVEUxTVRNdwpNVEEyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHZqZnVWOVpBQkFYMVhIWmdmVU5KbndIVGZObFNsRkxFaHRCMFltZEFVZ0YyR1F5L1cKWXZYYm5vRXBJWFpDN2hyQzdsTnM3TXNudUtMNTlWdkpJUS9xTElwaEUzallZYTA4QVlqMmFhT3dJVEJ1Mi80cApUeXdjUC9reERMaDZJQ0VmTHVqd1B0cTR5d3A1Z09FcjZ6bzBwcEZ1M0xmYzdYakN0QjNwT3ZaTmdZK08vUDdECjNvRmdKalZCU0p2SjZNZ3RLeGpFSmRHdlJacXJoTTc2S2FUejRoSlFBNWo3Z1Z0Wms1M3ROTy93ZGZ6R1p0dXMKVE9hQXNNSk5ZeFdiK3NKOFh0OTY3dDBMbU1CT3BoRjAxOVJ5a3NhNVF0TEFQN3cwM1VVaUE3Q1NjdEZZd2ttbworeVI3WmlyUnFUUU10Uk5JakRqTFpTMHg4M2xDOUdGOTVMcURBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVMeHpUd3lzUHU1YlBnR1ZnNzhVaHRzcHFoN1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDM3pmcERrcTB2RkNPbFVEejVwZUFZOTUvb2hOOHZVMURGYzFwN3ZmS2dESHdVTlVlYkMvRE1VCmJhL1hrVVR2YW1PYnc1Z0Q4ajFMRFExeTFFVG5LREx4S3VpYyt1TlVvSk1HYnJxRlZCMVNWYi82S2M1Y0gzRkYKR1htbGZEWUxUeUlJMElBaXZCekJEN1lmVVJ0NldxM1UrQkxhc21kb0pYL3JyMHg1djhQZ0diSWxPTFZGanprVgp6NXkwaWdGNEsvclNMK1FGWENGVENJeHk2MTVjc25sY3ZQWUM2cUpuR3A1dU1HTkJKNW9hMEZBM1NVN2FpWGlPCkIwbzFzeE9oRWdiYkFIdVZOOCtMSjVwWFhNTWIrM2svOFF4SEw0c1FyaGo4RWZMeVdqVG5kUUdGSWVpbjhQYUMKVDhCK05yeVVvaloyUE9kZ2R3VzlXdXgwM2x3Y1dzdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBNzQzN2xmV1FBUUY5VngyWUgxRFNaOEIwM3paVXBSU3hJYlFkR0puUUZJQmRoa012CjFtTDEyNTZCS1NGMlF1NGF3dTVUYk96TEo3aWkrZlZieVNFUDZpeUtZUk40MkdHdFBBR0k5bW1qc0NFd2J0disKS1U4c0hELzVNUXk0ZWlBaEh5N284RDdhdU1zS2VZRGhLK3M2TkthUmJ0eTMzTzE0d3JRZDZUcjJUWUdQanZ6Kwp3OTZCWUNZMVFVaWJ5ZWpJTFNzWXhDWFJyMFdhcTRUTytpbWs4K0lTVUFPWSs0RmJXWk9kN1RUdjhIWDh4bWJiCnJFem1nTERDVFdNVm0vckNmRjdmZXU3ZEM1akFUcVlSZE5mVWNwTEd1VUxTd0QrOE5OMUZJZ093a25MUldNSkoKcVBza2UyWXEwYWswRExVVFNJdzR5MlV0TWZONVF2UmhmZVM2Z3dJREFRQUJBb0lCQUFiRUVOWUVjSVBHd2Y2Qwo1SGdGOVZ0ZTBTNDR2NTFGLzFhL1dvOEdVUjB6SHZFYTFyQU1iWHM5ZDlKc2tvV0RhaGdWV1IvYmRFVno3bzUyCndwZmtxaWxvQnFTRlEwV0JSTDVNSU0wczRLV3AyazlYUVU5ellBQ1FRZjZEcUhZeWtCenNXMEhsMUpHaGtuTXEKRTdJRTI4ais1MTZsTjBBektOVCs5MVZPQ0FUYVZPK2ZuZHdBeUNQcW4rdkEzYVdWd2YxWVdlb2t0dHpQcnZubwpiTG9EbmdZS2FmWll2MDVaaEsxNk5sdTFEa2JVZ1lqcmZrUzR3K0VudzBLR2VCc2RoS254S2VwQU9uMS9MYVMyCkJhVTZCcnlZL1JtRmQ1cFBsRjBFeTBWcllNTTIyWTBMdExYQkZVRG5oOWJHZ1ByajFZZ3pyN203aFV2YmVKeVEKR0wzbTAra0NnWUVBNzZqdERSVnhhWDJMNnZvL2c2RW9SWkpiempvZWdZdkdnVUZLbkpGMEw1TnhUSkNHWDFUWQpGdWZ4UkN2WXZRbVYwTkg1aU10RXNiWXFFZ2w5RWhGaEs1UDl5OXZEVm1yL3pDTVhzc2FIWHMzbEpCckdoMXZzClkxaWhQNnBGYkxqVDM1Nmp0OVBqeFpKUm01Uk1aS3ArWlYxclBVdnRMMnlaaWo3eW5oU0xrcmNDZ1lFQS8rTTQKUXc1MVh5YzcyZXd6RlZTdE5OMGwrTHU3RzE5T2NoL0R1S1FodnJtVitjaUU0VUwzOVZXMlNmLzBWY1VvM25JawpJcFRTZGhUWU92R2xNMUJKcmplbXFjTWI3dkkrRWFUbENYT1VwZmFYakd1QzZuakU4SDhpWlNUeXFDMDF1a2dmCktCclRMNXpFUFprbUUxL2pYTHF4UGoyYUpmY0kwcWlnNkoyTVdwVUNnWUVBNmZER3ZQL1NmanY4S2JwdjUyaVgKN0JtckhncmpubWMzdFJKcjU1dWdnNVIwZzEyTW5XQXZzMlJqd2J6ZlMrQWdhditjaXFpSS9NUXFHd05DSURIdwozVjRQMzBBOVZJMEw5MVBHSFUvbjhtWWZwL2V2RlpCb2xxMThjYTRmS0xyZXJ5bW0vSm1NZkY2UTVNS0ZNN3F0CnVQclE1THZKNG9JcStxVHBwZCsrUXM4Q2dZQmtURlBKTk9tY21teERSdW5lK29uSnBzVXpjYUl0WUhZSEZaeEoKeTB2T3pqK1M0SjMxRGFMVGJ2MDhsQzdaVDZadFNxQVBUZllRZ3FzZXI0anBUQmNWU29yeEQ2RHJUOWcwWWtYRQpKcUdsUzdxck41amcvdVZ5dnVKa2NzOEtURzQ2emZvb1podFJGa2wxTzRwSkhkU29qQ1RkR0poTE9VRWtFU1RCCkNML3k0UUtCZ1FDckFqd2dmZi9mbHdVeHpyUGxCY2xpTFhuMVRWSldJR1BKcjdXck53YUt2eloySVMzd2dyaTAKcUVqNmZoVElrQ1ZnRFFEeEVwbHoyTU1PY1hERzU2UDFsQWRpMVdNeHVrOTgyY2pDczF5N0RrcGZZK05UNERKUApDK0Zqc3dLSEtvdnFBT0RZdlJRRlo1UUJXWVFwRVVZWHBLTEhtL1UzKzRxZ05heU9pNS9qckE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYlhVd0p4ellqa2Q2Vk9HRWtJd0ZDREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFMk1UTXdNVEEyV2hjTk1qWXdOVEUxTVRNdwpNVEEyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHZqZnVWOVpBQkFYMVhIWmdmVU5KbndIVGZObFNsRkxFaHRCMFltZEFVZ0YyR1F5L1cKWXZYYm5vRXBJWFpDN2hyQzdsTnM3TXNudUtMNTlWdkpJUS9xTElwaEUzallZYTA4QVlqMmFhT3dJVEJ1Mi80cApUeXdjUC9reERMaDZJQ0VmTHVqd1B0cTR5d3A1Z09FcjZ6bzBwcEZ1M0xmYzdYakN0QjNwT3ZaTmdZK08vUDdECjNvRmdKalZCU0p2SjZNZ3RLeGpFSmRHdlJacXJoTTc2S2FUejRoSlFBNWo3Z1Z0Wms1M3ROTy93ZGZ6R1p0dXMKVE9hQXNNSk5ZeFdiK3NKOFh0OTY3dDBMbU1CT3BoRjAxOVJ5a3NhNVF0TEFQN3cwM1VVaUE3Q1NjdEZZd2ttbworeVI3WmlyUnFUUU10Uk5JakRqTFpTMHg4M2xDOUdGOTVMcURBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVMeHpUd3lzUHU1YlBnR1ZnNzhVaHRzcHFoN1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDM3pmcERrcTB2RkNPbFVEejVwZUFZOTUvb2hOOHZVMURGYzFwN3ZmS2dESHdVTlVlYkMvRE1VCmJhL1hrVVR2YW1PYnc1Z0Q4ajFMRFExeTFFVG5LREx4S3VpYyt1TlVvSk1HYnJxRlZCMVNWYi82S2M1Y0gzRkYKR1htbGZEWUxUeUlJMElBaXZCekJEN1lmVVJ0NldxM1UrQkxhc21kb0pYL3JyMHg1djhQZ0diSWxPTFZGanprVgp6NXkwaWdGNEsvclNMK1FGWENGVENJeHk2MTVjc25sY3ZQWUM2cUpuR3A1dU1HTkJKNW9hMEZBM1NVN2FpWGlPCkIwbzFzeE9oRWdiYkFIdVZOOCtMSjVwWFhNTWIrM2svOFF4SEw0c1FyaGo4RWZMeVdqVG5kUUdGSWVpbjhQYUMKVDhCK05yeVVvaloyUE9kZ2R3VzlXdXgwM2x3Y1dzdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRQkZqM0N2a2wxbGJnN3JUM0RHQ09UekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFMk1UTXdNVEEyV2hjTk1qWXdOVEUxTVRNdwpNVEEyV2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEV1Q3Z2RMN1VJS252YXpTOEsvQWNxR2hTYUE1enQKbmJYTHUzci9GOTRzcVk0UWgyRUcxd0lwczRQZkpKckZWZk1lTGloRE9zLzd6UGxCa0t5Rzh0eWE0Rjh4bGhnZgpmbTlTMjRsRVZLTU5PWXBLMUljSmpzaHV2T2FMdlZWejUvRWI0SzFzSy9RSWpkL0g2eXk1MmU5cFI3b3kzYW8rCmFLODlhaElIS0lKRUl2RDBKMUduaTFnQnk3UFlsVHpTaTE1aWJnV0ZHK1dhbG9SUDZGajNjNkd0UkRxeUFveE8KUTJCb3hXZjJYU3pua2FvclpOUWpROUFjT2xCbVpTcTkzdFBGdGhYR1hCdy9pcGxZMUF2Wlo1VmVCTDc0SFBZMgprTUYwT1lMMHJNOVhaSHVVTy9WaUhablBVeGhCRTNTbEJPNEs5MVdYVTd5a3QyOEl1Z2M4V2MwaEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZDOGMwOE1yRDd1V3o0QmxZTy9GSWJiSwphb2UwTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFBM1lrUWs3amRLR1V1WDhWQ0hRclROaGZYbUdSOEhmZ2J0akl4clNLdHpybUs5aWYKbTdEdGtaY2xyeEgrTUVkWUQ3VEtaY3pEdER2eHFCd3Zra09mTVovV253ZU4zdTlmRk1tTGlaSFJUUGZTc0x6RApEL1gvSHZJZVRnTUFEYU4zTWliNGtmQXoxZ1hwN0JLS2dVQ2pRcXFNRU5GRFg1THYvbEZjYm80b3F3d1hZT2tGCjZBZ3FYOWEvWWg2Nnl5am5xSjVtNEJOcnphaStyaUxKMGh6eXZwdE56L3U0c01yb2FRRWVqbFQ3L1VNaDREdlMKckdIMWx3alhIbmJmWElMeXZyUm1rQ1RCUjVpTlNxemI2SXZDUkI0Y2FmSE1SeUFBSlVoVmZxUHdNTFdFcFhmNQpzd21Jd2JqNnlUTmhRYXRyRFRIbnoyNHhMaytobG9tSUxvOFB4QT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBMWsrNEhTKzFDQ3A3MnMwdkN2d0hLaG9VbWdPYzdaMjF5N3Q2L3hmZUxLbU9FSWRoCkJ0Y0NLYk9EM3lTYXhWWHpIaTRvUXpyUCs4ejVRWkNzaHZMY211QmZNWllZSDM1dlV0dUpSRlNqRFRtS1N0U0gKQ1k3SWJyem1pNzFWYytmeEcrQ3RiQ3YwQ0kzZngrc3N1ZG52YVVlNk10MnFQbWl2UFdvU0J5aUNSQ0x3OUNkUgpwNHRZQWN1ejJKVTgwb3RlWW00RmhSdmxtcGFFVCtoWTkzT2hyVVE2c2dLTVRrTmdhTVZuOWwwczU1R3FLMlRVCkkwUFFIRHBRWm1VcXZkN1R4YllWeGx3Y1A0cVpXTlFMMldlVlhnUysrQnoyTnBEQmREbUM5S3pQVjJSN2xEdjEKWWgyWnoxTVlRUk4wcFFUdUN2ZFZsMU84cExkdkNMb0hQRm5OSVFJREFRQUJBb0lCQVFDb3llQ1lIQnJZYzUxWQpsb0dXaFNpZllDc1pvZjdXcG4rb0ZlQ3BTSU1UYWZjWnpZWDlmUm1XL211K00zWXlOWjlsQmJWd1BjSFE3MzdnCnhMRWRGK25ua1E5b1htNWhYNU1PRHhudFZ6dVVEdDE4VWlhSXdJdmJxNnRvSTVaSjAwTnlVV0pFNzlralk1bjgKT3B6ZlEyWHI1VEloSGJRWHN4dFJvMWpQaW5nT2NJVnpyV3FYNXpPby9vc081NkxZMERWeUcyUm5sSDk3MEkxbgovMXVSWUxXeEsxaEprRWZoWEYwaE8yM0RodXdwOFRSRGZrajhUUFN1UEk2dTY1d1NWUnIyaTA3ZnpacTNqMjdVCkVHRFd6UTdXRkhjRXFIYjBNbUhnRXVtUXB2bXU1amdsKzk2VEdKNG81UEdxSW1GYkM2ZzV4UFRlc3RlLzF4Ry8KSFJCM1FRQ0JBb0dCQVBHTzhOdGtPdWg4SE9yNGxlSUFGNEwrSUVIUHVyQkMyeGs4SzRFL1VtY28rR3UyMERvYQpTYmkzYU5JaFBGbWlPMDhPbE5nZTdObGJHdmtRTDNBWHBEa3E2aXRFMjF3UzRia3JIcUtwVVEvUS9XbUhsS0pnCmFjTGkrZmh3eCtFQmo2ekNZQ21QNXNSZHNIOHNnUWllblVOQU53czNPOUhaSnVsRGxiYjNQenlMQW9HQkFPTWYKd3o4cC9iQ3NBQnFMVCtSRFhDTnZWSG8xK0d5bTJWNXF6bkViK2lhVzNEQXF4R2d0SVM1ekx4NmxhWmgyM2ppUgoyVWxWOTM2aVorTWFrQ081MHVacEZzenVQTERwb2kyY3ByU3l5K1paUmN6N2tNTEtyY254VXRzZldUYnFpeUdiCktiTk9OZlJpaXRHQnFsU01jMlUvK1FsSk0ydmtrVHFYQ3RlMU9iYURBb0dCQUw2TTFhOGJaK1RSVXphQUZpd0wKaW9DSTJ3VlBTcU9VZWFWMGM1VW5VR2VVU0RNZ0tTNU1ZbTlXTDFmalkrb0pNZVB4U3JVWjRCaXQ1NThsaDJaVApIL2NBeFd5UWlzSWRHdmFvN3llOWpQWi9GQWhWTFlqUnFWeFZGSDlJNkVPMHFaUE1XWE12MHdpQUo2U0toTmM1CjJEQ2V6VTBKcXlTa3VpODBZenZMMnBSMUFvR0JBTFJ0eEM3R2pmbXUram9jRi9DUExvQWI3akZUOUxGajd1U1oKMXJ4MmJFZ0JxcFE5TldCSkVjWVR6UWY4Z2lHVHRMK2Q1YzdqazBTdmdmWWhZUVp3bGNGakZMRGlSYWFKUThRVwpZVHpGbVVPNkFjQnd6TFJpVEtOVHFlM1hQb2xvMC9SempqSWFYTFJ6SURLRlhxbmlGYjRHanpFNFRMaFdrS1RKCjN0d3o1TkEvQW9HQkFOU3ZWQnovc2pjWWxnMmNvZUR2K1AzbjdkbTR2NDg1cnhVQ0xrUXhqTk9HME5lSkNjbmgKZEdOWWdidXZkMTNxQ3pCeVZqZFZiRCtIV3krY0d4WjNpUVRXQnhiYUFidGRkVWlHeng4dEF4bHNzTHNtM2l2KwpYaFJubXdxeXJMOWVjdUYzazRRSEVsSGlEU3h0Mnp2VmE2THpwUGhFUU45WkhFT2tpcmRid2hkeAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRYlhVd0p4ellqa2Q2Vk9HRWtJd0ZDREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFMk1UTXdNVEEyV2hjTk1qWXdOVEUxTVRNdwpNVEEyV2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRHZqZnVWOVpBQkFYMVhIWmdmVU5KbndIVGZObFNsRkxFaHRCMFltZEFVZ0YyR1F5L1cKWXZYYm5vRXBJWFpDN2hyQzdsTnM3TXNudUtMNTlWdkpJUS9xTElwaEUzallZYTA4QVlqMmFhT3dJVEJ1Mi80cApUeXdjUC9reERMaDZJQ0VmTHVqd1B0cTR5d3A1Z09FcjZ6bzBwcEZ1M0xmYzdYakN0QjNwT3ZaTmdZK08vUDdECjNvRmdKalZCU0p2SjZNZ3RLeGpFSmRHdlJacXJoTTc2S2FUejRoSlFBNWo3Z1Z0Wms1M3ROTy93ZGZ6R1p0dXMKVE9hQXNNSk5ZeFdiK3NKOFh0OTY3dDBMbU1CT3BoRjAxOVJ5a3NhNVF0TEFQN3cwM1VVaUE3Q1NjdEZZd2ttbworeVI3WmlyUnFUUU10Uk5JakRqTFpTMHg4M2xDOUdGOTVMcURBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVMeHpUd3lzUHU1YlBnR1ZnNzhVaHRzcHFoN1F3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDM3pmcERrcTB2RkNPbFVEejVwZUFZOTUvb2hOOHZVMURGYzFwN3ZmS2dESHdVTlVlYkMvRE1VCmJhL1hrVVR2YW1PYnc1Z0Q4ajFMRFExeTFFVG5LREx4S3VpYyt1TlVvSk1HYnJxRlZCMVNWYi82S2M1Y0gzRkYKR1htbGZEWUxUeUlJMElBaXZCekJEN1lmVVJ0NldxM1UrQkxhc21kb0pYL3JyMHg1djhQZ0diSWxPTFZGanprVgp6NXkwaWdGNEsvclNMK1FGWENGVENJeHk2MTVjc25sY3ZQWUM2cUpuR3A1dU1HTkJKNW9hMEZBM1NVN2FpWGlPCkIwbzFzeE9oRWdiYkFIdVZOOCtMSjVwWFhNTWIrM2svOFF4SEw0c1FyaGo4RWZMeVdqVG5kUUdGSWVpbjhQYUMKVDhCK05yeVVvaloyUE9kZ2R3VzlXdXgwM2x3Y1dzdz0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXakNDQWtLZ0F3SUJBZ0lRUWhqWkR3T0ZzZnFtUzUwQ1F0YzhtREFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFMk1UTXdNVEEyV2hjTk1qWXdOVEUxTVRNdwpNVEEyV2pBc01Tb3dLQVlEVlFRRERDRXFMbU5zZFhOMFpYSXRNQzVvZFdKaWJHVXRaM0p3WXk1amFXeHBkVzB1CmFXOHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFEUFhYcEtSanB5YTFtVlhvbXgKeXZIcVJ5K2pSZWVSb1JSWkJkZXF6RTYxMG12ZElnUHlmc0h1YUdpbStRTWV5U2ZFT3pPWG10N2MxYldMQTN3awpsVCtIdkJFcDR6dTFMMWhHcXJmandhNmFUWVpnTEI2MzRQQXZIbkF1OWZjaEdoVHZRUFV3WEhwTXA0OVhSQ0Y0CldyNm1ZWVVJdFk5NzEwcUhhS0puOUtuQTJYTmRRTFpHVVI5Mno1by9wV1BsV3FLZTFybSs2MXdjcjNLQ0w5RHQKamhNSzVOc2RrTHorN2xTWEExM2lJck1VWTNIZ1RYYVRuN0hneWMzRGpBamdidU9VeDUvS3dJRmdJRSsrcTJvNQpabVMyWmNBbUhtWFIwNkdVSVNVQzdMQXU1Nk1vWW9Pbm40RHIrbERvaVRIcFlPRVFRdFNWMTIrV1lZaHFCVzZWClFsOEZBZ01CQUFHamdZOHdnWXd3RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUYKQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZDOGMwOE1yRDd1Vwp6NEJsWU8vRkliYkthb2UwTUN3R0ExVWRFUVFsTUNPQ0lTb3VZMngxYzNSbGNpMHdMbWgxWW1Kc1pTMW5jbkJqCkxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFnODNYNW1SbERGbU12TlB6bXIxL3JqNlkKY2NpZG1CWFVrd2Nyb2t4VFBXcGZBN1N6NDNJSFVVNk5EUFpVYjJRQ2lyTktCMEtJYTZVSUlsdkVwTjIrNnJtUApQc3pKWWh1SHVhTWk1VWJ2ZDBaSGpHa1FoS21tTUtmVFJOdkF5WGpQRXNEZ0ZRaEdRUVF6aUhpYXczeVlTd0ZlCkhSaitnSTlkNjlJTXh4ZEdncWhEOCt6cnQ5ZUlzQkkwVHJHOWVYVXZJc2VVMEdmM0hQek4zL0NCUDNjV24wYkoKS3Z2QkVRbnNBRGxlQ0pYeXdIbllLL1oxQVpVZGJyTjdaNDg4L3JmTlgzRTdFNDNEWXI2V1l6OWlXNklObnBVZwpLc3lKc2NPNE1XN3cxVkc4S040Yis2Mkd3dWtYTUZLSTFLR3dFOUZKVGdnOXc5Z1RVL1V5ZVEwV2pudWduQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBejExNlNrWTZjbXRabFY2SnNjcng2a2N2bzBYbmthRVVXUVhYcXN4T3RkSnIzU0lECjhuN0I3bWhvcHZrREhza254RHN6bDVyZTNOVzFpd044SkpVL2g3d1JLZU03dFM5WVJxcTM0OEd1bWsyR1lDd2UKdCtEd0x4NXdMdlgzSVJvVTcwRDFNRng2VEtlUFYwUWhlRnErcG1HRkNMV1BlOWRLaDJpaVovU3B3Tmx6WFVDMgpSbEVmZHMrYVA2Vmo1VnFpbnRhNXZ1dGNISzl5Z2kvUTdZNFRDdVRiSFpDOC91NVVsd05kNGlLekZHTng0RTEyCms1K3g0TW5OdzR3STRHN2psTWVmeXNDQllDQlB2cXRxT1daa3RtWEFKaDVsMGRPaGxDRWxBdXl3THVlaktHS0QKcDUrQTYvcFE2SWt4NldEaEVFTFVsZGR2bG1HSWFnVnVsVUpmQlFJREFRQUJBb0lCQVFEQXVtSEJqSm9mNUJSRAoxclRsY1BqOHhLTEsvbHFtcUc2UCt2VWlnbmNaV0hQMTkvcHhORXlzZDQva3VJV2s1Rks0ZUVtUU8xbXRLRmR0CjE1UlhML3YyL04xNjcvNTdmSUJ3VlpWSjhxYUVOVStTTFE5ejJYV0NaYWpnakt6ZXNDNEszSFhHTi8xWEoxajcKUTVCVUd3c2Mrb0E1d3YyVG5WcGdsZWh6OUJxZDZCQmxSR29zR1E4NURJdkdSNEh1UGpneDYxUGpjSXpqeHZkSwppN0lhVHZFZlVZRWF5dzF5RGE3VjJOWlZSQlVyeXZGNnh1d3piOExoZTJKSW9HWmV4R0phSUUwUnFIMkJRRFhhCjIxYytqUHZlOVZQNEFqMTdZSitSaUxuUW94Zlc3L2FXNkRYWFJQMVJRbml2cXJ0ZjlVY0tNV1Uzcy93MmVGa2QKamM3Wlc5WGhBb0dCQU8zOVRTZE8rS0puK3RJcWNxbEhWZUlEWTNNZE9xWnB0VHFSTGtxMmZrak1iaFRLdU54Qgp3YU9pd3lsdzhZdUlhVHhRempqMTNBOGFxaDh3d2FFQ3dWVXNkSHlYU0RVQWxPOEkwV2Roa2lZd3FhNVJwTENkCmVYRkZFWG9GVHdDUUVVVHcwU2NrOTJ5Z1VxOGt4aDVHeGd0ZXJoUHc3aXVvNFNJazkzK1FhcEpaQW9HQkFOOE8KMy96MkM4YlVoWkkySEFseFhOUnBGZGJBcS84NkJ6OUFrdzNDNC9MQUFHM1JsR1JFVGQ1NEFlYW53cGFTOTF2SgpZcXlLYVFSTHdKc2djdnR3cFBUczhuOEwwbkhVZytlWG5ZNk04empBaTFtNCtyNzRKbktXVUswYmZwTVNBazF0ClhYeVNhZXpOOGJRRmRIN3JJNTNhUTBxRXRERXJJbER2dktDMTdXU05Bb0dCQUxjSVA2VkNyQ0FqZmhqU3dwcUUKSFg0VWd4RE9Zd1FIZW5VUG9SMmUydUxjTHJGWTgvR1p0UFpId0hjSHdRMUNIVVZoRkNsa2xSa2N0Y2dGTkhYRAphN000M0dIUjY1dXYxZHM4MmVmN2QyNWRzTEk3WWtEZTY3NThreU5ZSDlsYjg1d2s1WWFJZks0VFkyUUdFVVRKCnc1aU0rYTZtZGxZbnJQWVluaXlDZ2lRSkFvR0JBTG04L1M3N0F4dHg1RGUzN3VpK0NQcW05cFI0bzhCSFpibDUKMy9uWmkwNmNLcjlIZ1RWczJ4cWcrNVJCcFhzVXJmMDBXSUlzVHY1UXhmVm1zOWhFR0ZnSzVuSjhPYVNudlo2ZgpWWWRhUHozR3QwTGpFWWpyd2JneENzVGEzQzlERTcrOWpkY3BaQ0xYNnFobzBuVE5BRDkxZkFzVkxhYXpzRU9OCkhaa0ZaTVFSQW9HQUFXclEydHYybGhjeGJ3dUxLdkxPd1BGczRNeWFtNFFncVNuT3dEK0llN1k3aGJVSDJjVXcKZXdVZHkxbXU3UUxWeEZTcUNxcEZna1JKUGpUYlNwVWZNT3lobnNIUjl3Z1FhZUNjZlJ0bFhYU3NLeEtCUTEvUApGMWMxZlcrd3l2SUxUSWhqODRWTGU5UXRzRlg4Z29Cb1dRd0pqSWg1Rk80T0dibExpS0ZQV1VZPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
    - name: hubble-metrics
      port: 9965
      protocol: TCP
      targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
    - name: peer-service
      port: 443
      protocol: TCP
      targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
    - port: 80
      protocol: TCP
      targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
    - name: http
      port: 80
      targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: a5c21ec6fb86efcc5b013c71c5ff1afe28335a058efe2244778e83dd7fb28dd4
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  io.cilium/app: operator
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
            - --debug=$(CILIUM_DEBUG)
          command:
            - cilium-operator-generic
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_DEBUG
              valueFrom:
                configMapKeyRef:
                  key: debug
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: cluster-0.bjw-s.tech
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/operator-generic:v1.13.2@sha256:a1982c0a22297aaac3563e428c330e17668305a41865a842dec53d241c5490ab
          imagePullPolicy: IfNotPresent
          livenessProbe:
            httpGet:
              host: 127.0.0.1
              path: /healthz
              port: 9234
              scheme: HTTP
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 3
          name: cilium-operator
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp/cilium/config-map
              name: cilium-config-path
              readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
        - operator: Exists
      volumes:
        - configMap:
            name: cilium-config
          name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 5d81f166d35c295bfcc150b5cb4e6c391c44f887cfe07c06a8ec28d81a7f9c25
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
        - args:
            - serve
          command:
            - hubble-relay
          image: quay.io/cilium/hubble-relay:v1.13.2@sha256:51b772cab0724511583c3da3286439791dc67d7c35077fa30eaba3b5d555f8f4
          imagePullPolicy: IfNotPresent
          livenessProbe:
            tcpSocket:
              port: grpc
          name: hubble-relay
          ports:
            - containerPort: 4245
              name: grpc
          readinessProbe:
            tcpSocket:
              port: grpc
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/hubble-relay
              name: config
              readOnly: true
            - mountPath: /var/lib/hubble-relay/tls
              name: tls
              readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
        - configMap:
            items:
              - key: config.yaml
                path: config.yaml
            name: hubble-relay-config
          name: config
        - name: tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: ca.crt
                      path: hubble-server-ca.crt
                    - key: tls.crt
                      path: client.crt
                    - key: tls.key
                      path: client.key
                  name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
        - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
          imagePullPolicy: IfNotPresent
          name: frontend
          ports:
            - containerPort: 8081
              name: http
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /etc/nginx/conf.d/default.conf
              name: hubble-ui-nginx-conf
              subPath: nginx.conf
            - mountPath: /tmp
              name: tmp-dir
        - env:
            - name: EVENTS_SERVER_PORT
              value: "8090"
            - name: FLOWS_API_ADDR
              value: hubble-relay:80
          image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
          imagePullPolicy: IfNotPresent
          name: backend
          ports:
            - containerPort: 8090
              name: grpc
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
        - configMap:
            defaultMode: 420
            name: hubble-ui-nginx
          name: hubble-ui-nginx-conf
        - emptyDir: {}
          name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchLabels:
                  k8s-app: cilium
              topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
        - args:
            - --config-dir=/tmp/cilium/config-map
          command:
            - cilium-agent
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: CILIUM_CLUSTERMESH_CONFIG
              value: /var/lib/cilium/clustermesh/
            - name: CILIUM_CNI_CHAINING_MODE
              valueFrom:
                configMapKeyRef:
                  key: cni-chaining-mode
                  name: cilium-config
                  optional: true
            - name: CILIUM_CUSTOM_CNI_CONF
              valueFrom:
                configMapKeyRef:
                  key: custom-cni-conf
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: cluster-0.bjw-s.tech
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
          imagePullPolicy: IfNotPresent
          lifecycle:
            postStart:
              exec:
                command:
                  - bash
                  - -c
                  - |
                    /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
            preStop:
              exec:
                command:
                  - /cni-uninstall.sh
          livenessProbe:
            failureThreshold: 10
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          name: cilium-agent
          ports:
            - containerPort: 4244
              hostPort: 4244
              name: peer-service
              protocol: TCP
            - containerPort: 9965
              hostPort: 9965
              name: hubble-metrics
              protocol: TCP
          readinessProbe:
            failureThreshold: 3
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 30
            successThreshold: 1
            timeoutSeconds: 5
          securityContext:
            capabilities:
              add:
                - CHOWN
                - KILL
                - NET_ADMIN
                - NET_RAW
                - IPC_LOCK
                - SYS_ADMIN
                - SYS_RESOURCE
                - DAC_OVERRIDE
                - FOWNER
                - SETGID
                - SETUID
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          startupProbe:
            failureThreshold: 105
            httpGet:
              host: 127.0.0.1
              httpHeaders:
                - name: brief
                  value: "true"
              path: /healthz
              port: 9879
              scheme: HTTP
            periodSeconds: 2
            successThreshold: 1
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/proc/sys/net
              name: host-proc-sys-net
            - mountPath: /host/proc/sys/kernel
              name: host-proc-sys-kernel
            - mountPath: /sys/fs/bpf
              mountPropagation: HostToContainer
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
            - mountPath: /host/etc/cni/net.d
              name: etc-cni-netd
            - mountPath: /var/lib/cilium/clustermesh
              name: clustermesh-secrets
              readOnly: true
            - mountPath: /lib/modules
              name: lib-modules
              readOnly: true
            - mountPath: /run/xtables.lock
              name: xtables-lock
            - mountPath: /var/lib/cilium/tls/hubble
              name: hubble-tls
              readOnly: true
            - mountPath: /tmp
              name: tmp
      hostNetwork: true
      initContainers:
        - command:
            - cilium
            - build-config
          env:
            - name: K8S_NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
            - name: CILIUM_K8S_NAMESPACE
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: metadata.namespace
            - name: KUBERNETES_SERVICE_HOST
              value: cluster-0.bjw-s.tech
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
          imagePullPolicy: IfNotPresent
          name: config
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /tmp
              name: tmp
        - args:
            - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
          command:
            - /bin/bash
            - -c
            - --
          image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
          imagePullPolicy: IfNotPresent
          name: mount-bpf-fs
          securityContext:
            privileged: true
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              mountPropagation: Bidirectional
              name: bpf-maps
        - command:
            - /init-container.sh
          env:
            - name: CILIUM_ALL_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-state
                  name: cilium-config
                  optional: true
            - name: CILIUM_BPF_STATE
              valueFrom:
                configMapKeyRef:
                  key: clean-cilium-bpf-state
                  name: cilium-config
                  optional: true
            - name: KUBERNETES_SERVICE_HOST
              value: cluster-0.bjw-s.tech
            - name: KUBERNETES_SERVICE_PORT
              value: "6443"
          image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
          imagePullPolicy: IfNotPresent
          name: clean-cilium-state
          resources:
            requests:
              cpu: 100m
              memory: 100Mi
          securityContext:
            capabilities:
              add:
                - NET_ADMIN
                - SYS_ADMIN
                - SYS_RESOURCE
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /sys/fs/bpf
              name: bpf-maps
            - mountPath: /sys/fs/cgroup
              mountPropagation: HostToContainer
              name: cilium-cgroup
            - mountPath: /var/run/cilium
              name: cilium-run
        - command:
            - /install-plugin.sh
          image: quay.io/cilium/cilium:v1.13.2@sha256:85708b11d45647c35b9288e0de0706d24a5ce8a378166cadc700f756cc1a38d6
          imagePullPolicy: IfNotPresent
          name: install-cni-binaries
          resources:
            requests:
              cpu: 100m
              memory: 10Mi
          securityContext:
            capabilities:
              drop:
                - ALL
            seLinuxOptions:
              level: s0
              type: spc_t
          terminationMessagePolicy: FallbackToLogsOnError
          volumeMounts:
            - mountPath: /host/opt/cni/bin
              name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
        - operator: Exists
      volumes:
        - emptyDir: {}
          name: tmp
        - hostPath:
            path: /var/run/cilium
            type: DirectoryOrCreate
          name: cilium-run
        - hostPath:
            path: /sys/fs/bpf
            type: DirectoryOrCreate
          name: bpf-maps
        - hostPath:
            path: /sys/fs/cgroup
            type: DirectoryOrCreate
          name: cilium-cgroup
        - hostPath:
            path: /opt/cni/bin
            type: DirectoryOrCreate
          name: cni-path
        - hostPath:
            path: /etc/cni/net.d
            type: DirectoryOrCreate
          name: etc-cni-netd
        - hostPath:
            path: /lib/modules
          name: lib-modules
        - hostPath:
            path: /run/xtables.lock
            type: FileOrCreate
          name: xtables-lock
        - name: clustermesh-secrets
          secret:
            defaultMode: 256
            optional: true
            secretName: cilium-clustermesh
        - hostPath:
            path: /proc/sys/net
            type: Directory
          name: host-proc-sys-net
        - hostPath:
            path: /proc/sys/kernel
            type: Directory
          name: host-proc-sys-kernel
        - name: hubble-tls
          projected:
            defaultMode: 256
            sources:
              - secret:
                  items:
                    - key: ca.crt
                      path: client-ca.crt
                    - key: tls.crt
                      path: server.crt
                    - key: tls.key
                      path: server.key
                  name: hubble-server-certs
                  optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
