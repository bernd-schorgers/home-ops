# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: cluster-0
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  cnp-node-status-gc-interval: 0s
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: cluster-0\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVm5tS3M3K0paUmZpd0cyMFc4VWs0VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBNE1EZ3lOREk1V2hjTk1qWXdOVEEzTURneQpOREk1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGNKMHNpclFqaTcyYzVpNGpFekNqcGdrck53SWJnWGhDRmhrVnU5NTBUQTBML1g5aFAKQ0FVdGxtazR3bWxxNlhUR3MvSDBQdFdIRDI5bU9mVERzUFcvVGpvSDRQREZNNWF4NXB0R3BKbGp1RzVjQXk3QwpxdDZYMDBvT3RrYWVCL2E4R2pxaXZSdlpkZ2pVNk1iTTJucjVuWFkxVXNKTHVySmZveTBkU2FWVjlwaGJaSU95Cno5ejdFMjZPdWl5UmZXZVMvbG1hd2M0MVBlSWpvSHlIRTNjeG5mL3p6S295dUZMQWJWcjJnUERkYjZ6aVhBVkEKSWxVa0xCd2QxZERBRnVDYlQwSXlRV1Z4VXFXa0ZJbC95ZkJmUkNieHlvY2ljTHFST2pnaEJMbWw4KzB0NGxkcApjQVJTUjhBeTRvVGlMdHkwczhjcWxMVk9WM0tiNnRSL1NuTFpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVmVDBrTVhoUHBVSElUV0R6L3ViVk5aTHdNSUF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMVnV3dkYrTVNXc25NN0NvT1JqVWlMa0o3d0N4SEVtdDZJN0Vpc1BoMGNPS3hodHdyaXNpNVdwClpKWFJYSFJ4aG1zZG9HQTYwQ2Q5MmRlcFVCbTQzRGY4TEN1QUFRR2NSMGVlQkw1d25QQXA5SHlSKys5YkdjUzcKcXRjcVlvVWx1dnJHV0ZUTTNXay9rZG5NbkN2SmY5c2tzLzlBeForREE0NlpzakdiUVpyY01ScDNoZzlPWWVSbAp0bUxvSEJ3cXNGSUJ3SjAyRUVZNWwxYXhua3Q3djBDbTBqTjc0YngyVnJ5MmUrNTk3TkRnWmpadWVETW1NZDU3CldNdUU3eFp5SjVXMzRTLytUY2hHcUNUMmNlZmp6Ykt5UndJb3pPU3gwaTNoczdjcTJIanNQSVNTMkZ4ekVvSUwKVmdXdFI2djVOMU9EeGIvbFdqOWhNRFMvdVBlaE5QND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM0NkTElxMEk0dTluT1l1SXhNd282WUpLemNDRzRGNFFoWVpGYnZlZEV3TkMvMS9ZClR3Z0ZMWlpwT01KcGF1bDB4clB4OUQ3Vmh3OXZaam4wdzdEMXYwNDZCK0R3eFRPV3NlYWJScVNaWTdodVhBTXUKd3FyZWw5TktEclpHbmdmMnZCbzZvcjBiMlhZSTFPakd6TnA2K1oxMk5WTENTN3F5WDZNdEhVbWxWZmFZVzJTRApzcy9jK3hOdWpyb3NrWDFua3Y1Wm1zSE9OVDNpSTZCOGh4TjNNWjMvODh5cU1yaFN3RzFhOW9EdzNXK3M0bHdGClFDSlZKQ3djSGRYUXdCYmdtMDlDTWtGbGNWS2xwQlNKZjhud1gwUW04Y3FISW5DNmtUbzRJUVM1cGZQdExlSlgKYVhBRVVrZkFNdUtFNGk3Y3RMUEhLcFMxVGxkeW0rclVmMHB5MlFJREFRQUJBb0lCQVFDNzI1L0dxQ2FrRnl0YgpORkR4dFZEWDZRRlJ6dzZJbUZ1NnhKZXRHQWZsdUd2TUpJb2M3amdVN1hzK0hzNzdsdGk1MGNVTjZTd2x3cXNKCmJUMEtXNDludmlYUW9VWnkwQkd3SHBxelRqTkJuNWcwVmRicDhBcGZQY0c5Q2hiNk5NdDdPVnA5a2FjWkNocUIKSzF5d1kySjZhNzM1eEhQZFVTTnlibmhKdkpVajR1R01CbjlBVXBKRkpsTnhxeDRlQnM3Y3ZEWmZYVW5VMXlxLwpJYjF4WG5aUkJlaTdjajRLVUczdHBXUEswNU5zNnVMQlI4elJMbVFKZkwrbHhmeFpRTytHa1NqTzhzMm9IcE5KClRIQm1PQ0UxWFBXb2VudkhjMm9rZGFRZjVmd2phTzgvcTJJOGR4OGx0Q1hHTE80VGhNeklzTmpBalBLVTFkclMKV3dmaEkwQXhBb0dCQU4zaFJLNzJxKzhvaitySDgwWFdjU0M3NlFhcTRPZzEwNTZkaVV2cExIK0kzM2pLUHcrZwo3K3NWeDhpTlNOM1pHaUZ0L0pnMTAzY29obnJaWUl4cU9za1ZxRmRzVk1CVnlERk5WTVZzLy9nOHp4am1sSHVDClFNTlpPbVdLNUFRaHdJM1ptaWFTODBYbFNJZzNqOTFRQXpxUFNKY01PN3hhcUxjeG80ZVJVclRsQW9HQkFQNEMKRDBOUXNvcG93SHBuNlFVaGNvZWlwbFBTalBPRkRFajE5RVMyWnhKbE9mUWpVWUtCbzc3VXBvYlM1T01DRWtOTAprSHdsbHlGTFhVdjJ0MTVpMkc1RFZ5OW00UUJEbmlReFVxaEN2aVNmakI0SlRsN0k4azlwNm5Fa2ZwUmxFQXNICkZ1dlIrTlYrWkJVQWVvNno1bER0QzdWWG1qMjBxTGJGdW5ZUm0vcmxBb0dCQUpVUjV6SmgyaXdwSldBSkRLSHMKTEQ5ZzRIT3hWTC9PZ2lvOEQyVm4rSlNLNGhGbVdDM280NmdmRHdYb0huK21nQTdidFd5U0pVd1dkeHVNZG5pQQpXcFNGTDMvazhaL3pRamdWaTVIRTVNamtHZ1BSendxWC9Xa0J4dUU0Q20vWU9XVlVRR1FRTU0vUjl3UkZ5Q3RaCnVZR2JpSnFyQm10S3diV3E3UUtGR1hzZEFvR0FEVkkwVkxadHRwNkp3YUdqY2Rad09EYktmRWpsaFh2cnlnUEUKSExwb0sybk5vVVVjNkRnK1N5ckIxUDVJYkxOV0c5dGhwM0VkUE96RDV0RDRpdVdxTGhZd0ExZGs0MnVvWm9PRApyemxZMlhqWWsxYXZtbjcxWGo3U3diNUZPU2tYcjB4ZTRsMHZySnFsU3dpc1pNR0FpYXYwMmp6TzVQK05mWkJmCkdBUVNaeFVDZ1lCOTMwT1dBRVl0YWlOTlkyZkN6Y0RINWsxai9xWUV5b1VUNHh3SzlhRlpFWkhVS3JseW9mS2kKMUM5RC92T3NlZ25pRU44QjNENnJHYkMySFlOOFE2bElYaHJNTlN6VTJXUVlRdlJXZVdqb1Y0WVp5dUZmK1pBTwo5bXU0WUZ4TU52VzhDR3h3R2hLTWVtT1BMWXZVT1BHL2FhekUwK0Z2WGdZSUMzRVVOQlA1YlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVm5tS3M3K0paUmZpd0cyMFc4VWs0VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBNE1EZ3lOREk1V2hjTk1qWXdOVEEzTURneQpOREk1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGNKMHNpclFqaTcyYzVpNGpFekNqcGdrck53SWJnWGhDRmhrVnU5NTBUQTBML1g5aFAKQ0FVdGxtazR3bWxxNlhUR3MvSDBQdFdIRDI5bU9mVERzUFcvVGpvSDRQREZNNWF4NXB0R3BKbGp1RzVjQXk3QwpxdDZYMDBvT3RrYWVCL2E4R2pxaXZSdlpkZ2pVNk1iTTJucjVuWFkxVXNKTHVySmZveTBkU2FWVjlwaGJaSU95Cno5ejdFMjZPdWl5UmZXZVMvbG1hd2M0MVBlSWpvSHlIRTNjeG5mL3p6S295dUZMQWJWcjJnUERkYjZ6aVhBVkEKSWxVa0xCd2QxZERBRnVDYlQwSXlRV1Z4VXFXa0ZJbC95ZkJmUkNieHlvY2ljTHFST2pnaEJMbWw4KzB0NGxkcApjQVJTUjhBeTRvVGlMdHkwczhjcWxMVk9WM0tiNnRSL1NuTFpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVmVDBrTVhoUHBVSElUV0R6L3ViVk5aTHdNSUF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMVnV3dkYrTVNXc25NN0NvT1JqVWlMa0o3d0N4SEVtdDZJN0Vpc1BoMGNPS3hodHdyaXNpNVdwClpKWFJYSFJ4aG1zZG9HQTYwQ2Q5MmRlcFVCbTQzRGY4TEN1QUFRR2NSMGVlQkw1d25QQXA5SHlSKys5YkdjUzcKcXRjcVlvVWx1dnJHV0ZUTTNXay9rZG5NbkN2SmY5c2tzLzlBeForREE0NlpzakdiUVpyY01ScDNoZzlPWWVSbAp0bUxvSEJ3cXNGSUJ3SjAyRUVZNWwxYXhua3Q3djBDbTBqTjc0YngyVnJ5MmUrNTk3TkRnWmpadWVETW1NZDU3CldNdUU3eFp5SjVXMzRTLytUY2hHcUNUMmNlZmp6Ykt5UndJb3pPU3gwaTNoczdjcTJIanNQSVNTMkZ4ekVvSUwKVmdXdFI2djVOMU9EeGIvbFdqOWhNRFMvdVBlaE5QND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBM0NkTElxMEk0dTluT1l1SXhNd282WUpLemNDRzRGNFFoWVpGYnZlZEV3TkMvMS9ZClR3Z0ZMWlpwT01KcGF1bDB4clB4OUQ3Vmh3OXZaam4wdzdEMXYwNDZCK0R3eFRPV3NlYWJScVNaWTdodVhBTXUKd3FyZWw5TktEclpHbmdmMnZCbzZvcjBiMlhZSTFPakd6TnA2K1oxMk5WTENTN3F5WDZNdEhVbWxWZmFZVzJTRApzcy9jK3hOdWpyb3NrWDFua3Y1Wm1zSE9OVDNpSTZCOGh4TjNNWjMvODh5cU1yaFN3RzFhOW9EdzNXK3M0bHdGClFDSlZKQ3djSGRYUXdCYmdtMDlDTWtGbGNWS2xwQlNKZjhud1gwUW04Y3FISW5DNmtUbzRJUVM1cGZQdExlSlgKYVhBRVVrZkFNdUtFNGk3Y3RMUEhLcFMxVGxkeW0rclVmMHB5MlFJREFRQUJBb0lCQVFDNzI1L0dxQ2FrRnl0YgpORkR4dFZEWDZRRlJ6dzZJbUZ1NnhKZXRHQWZsdUd2TUpJb2M3amdVN1hzK0hzNzdsdGk1MGNVTjZTd2x3cXNKCmJUMEtXNDludmlYUW9VWnkwQkd3SHBxelRqTkJuNWcwVmRicDhBcGZQY0c5Q2hiNk5NdDdPVnA5a2FjWkNocUIKSzF5d1kySjZhNzM1eEhQZFVTTnlibmhKdkpVajR1R01CbjlBVXBKRkpsTnhxeDRlQnM3Y3ZEWmZYVW5VMXlxLwpJYjF4WG5aUkJlaTdjajRLVUczdHBXUEswNU5zNnVMQlI4elJMbVFKZkwrbHhmeFpRTytHa1NqTzhzMm9IcE5KClRIQm1PQ0UxWFBXb2VudkhjMm9rZGFRZjVmd2phTzgvcTJJOGR4OGx0Q1hHTE80VGhNeklzTmpBalBLVTFkclMKV3dmaEkwQXhBb0dCQU4zaFJLNzJxKzhvaitySDgwWFdjU0M3NlFhcTRPZzEwNTZkaVV2cExIK0kzM2pLUHcrZwo3K3NWeDhpTlNOM1pHaUZ0L0pnMTAzY29obnJaWUl4cU9za1ZxRmRzVk1CVnlERk5WTVZzLy9nOHp4am1sSHVDClFNTlpPbVdLNUFRaHdJM1ptaWFTODBYbFNJZzNqOTFRQXpxUFNKY01PN3hhcUxjeG80ZVJVclRsQW9HQkFQNEMKRDBOUXNvcG93SHBuNlFVaGNvZWlwbFBTalBPRkRFajE5RVMyWnhKbE9mUWpVWUtCbzc3VXBvYlM1T01DRWtOTAprSHdsbHlGTFhVdjJ0MTVpMkc1RFZ5OW00UUJEbmlReFVxaEN2aVNmakI0SlRsN0k4azlwNm5Fa2ZwUmxFQXNICkZ1dlIrTlYrWkJVQWVvNno1bER0QzdWWG1qMjBxTGJGdW5ZUm0vcmxBb0dCQUpVUjV6SmgyaXdwSldBSkRLSHMKTEQ5ZzRIT3hWTC9PZ2lvOEQyVm4rSlNLNGhGbVdDM280NmdmRHdYb0huK21nQTdidFd5U0pVd1dkeHVNZG5pQQpXcFNGTDMvazhaL3pRamdWaTVIRTVNamtHZ1BSendxWC9Xa0J4dUU0Q20vWU9XVlVRR1FRTU0vUjl3UkZ5Q3RaCnVZR2JpSnFyQm10S3diV3E3UUtGR1hzZEFvR0FEVkkwVkxadHRwNkp3YUdqY2Rad09EYktmRWpsaFh2cnlnUEUKSExwb0sybk5vVVVjNkRnK1N5ckIxUDVJYkxOV0c5dGhwM0VkUE96RDV0RDRpdVdxTGhZd0ExZGs0MnVvWm9PRApyemxZMlhqWWsxYXZtbjcxWGo3U3diNUZPU2tYcjB4ZTRsMHZySnFsU3dpc1pNR0FpYXYwMmp6TzVQK05mWkJmCkdBUVNaeFVDZ1lCOTMwT1dBRVl0YWlOTlkyZkN6Y0RINWsxai9xWUV5b1VUNHh3SzlhRlpFWkhVS3JseW9mS2kKMUM5RC92T3NlZ25pRU44QjNENnJHYkMySFlOOFE2bElYaHJNTlN6VTJXUVlRdlJXZVdqb1Y0WVp5dUZmK1pBTwo5bXU0WUZ4TU52VzhDR3h3R2hLTWVtT1BMWXZVT1BHL2FhekUwK0Z2WGdZSUMzRVVOQlA1YlE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVm5tS3M3K0paUmZpd0cyMFc4VWs0VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBNE1EZ3lOREk1V2hjTk1qWXdOVEEzTURneQpOREk1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGNKMHNpclFqaTcyYzVpNGpFekNqcGdrck53SWJnWGhDRmhrVnU5NTBUQTBML1g5aFAKQ0FVdGxtazR3bWxxNlhUR3MvSDBQdFdIRDI5bU9mVERzUFcvVGpvSDRQREZNNWF4NXB0R3BKbGp1RzVjQXk3QwpxdDZYMDBvT3RrYWVCL2E4R2pxaXZSdlpkZ2pVNk1iTTJucjVuWFkxVXNKTHVySmZveTBkU2FWVjlwaGJaSU95Cno5ejdFMjZPdWl5UmZXZVMvbG1hd2M0MVBlSWpvSHlIRTNjeG5mL3p6S295dUZMQWJWcjJnUERkYjZ6aVhBVkEKSWxVa0xCd2QxZERBRnVDYlQwSXlRV1Z4VXFXa0ZJbC95ZkJmUkNieHlvY2ljTHFST2pnaEJMbWw4KzB0NGxkcApjQVJTUjhBeTRvVGlMdHkwczhjcWxMVk9WM0tiNnRSL1NuTFpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVmVDBrTVhoUHBVSElUV0R6L3ViVk5aTHdNSUF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMVnV3dkYrTVNXc25NN0NvT1JqVWlMa0o3d0N4SEVtdDZJN0Vpc1BoMGNPS3hodHdyaXNpNVdwClpKWFJYSFJ4aG1zZG9HQTYwQ2Q5MmRlcFVCbTQzRGY4TEN1QUFRR2NSMGVlQkw1d25QQXA5SHlSKys5YkdjUzcKcXRjcVlvVWx1dnJHV0ZUTTNXay9rZG5NbkN2SmY5c2tzLzlBeForREE0NlpzakdiUVpyY01ScDNoZzlPWWVSbAp0bUxvSEJ3cXNGSUJ3SjAyRUVZNWwxYXhua3Q3djBDbTBqTjc0YngyVnJ5MmUrNTk3TkRnWmpadWVETW1NZDU3CldNdUU3eFp5SjVXMzRTLytUY2hHcUNUMmNlZmp6Ykt5UndJb3pPU3gwaTNoczdjcTJIanNQSVNTMkZ4ekVvSUwKVmdXdFI2djVOMU9EeGIvbFdqOWhNRFMvdVBlaE5QND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTRENDQWpDZ0F3SUJBZ0lRRzRSaXZlc1oyUE5ORUZ1dXRzSnlKekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBNE1EZ3lOREk1V2hjTk1qWXdOVEEzTURneQpOREk1V2pBak1TRXdId1lEVlFRRERCZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d2dnRWlNQTBHCkNTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDZmZjUlZSeGxSbld5K3lscDJYWGpxSWQ2VmJzWmgKSE85WVpuRUpDWWF3blI4VmU0WnNTNjlvWWp2dTRLWngyUGg1Z1A0OVJ1UjFUMDZlbGwvdHhLckZlK3d3VDBGVgpOUUlvbGltWVNLWHNPdWlvYjcwbG1DN2RYNWV1UzZhSWxCdS9WZWQraXR0QS9BdFZxcCs1bzdUK3dqREdkZjFqCmQ2RjdVTEVmN3RuMHVSZXB5RGdoaHZOYndtck9rczdMZnZocG1tRUt1UXY2ZEQzNGUyQ1ZhRzVqVDdzbDk2dDQKU1EzZ2I2aVFaOHRjMjVwbkMxSjNQeTR4QythNDlTYnR0WXFwVmFBQ1Iwb0h1Zk5EckloejNOSXNuY0pRdGhZOQo5OWs3MlJaTUF0VFNpMHVVZXJFRDVIR3hxT0FQczc4QlNBUkJNSHhsY29mQWl6TG04cmg4NFR5dEFnTUJBQUdqCmdZWXdnWU13RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUZCd01CQmdnckJnRUYKQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZIMDlKREY0VDZWQnlFMWc4LzdtMVRXUwo4RENBTUNNR0ExVWRFUVFjTUJxQ0dDb3VhSFZpWW14bExYSmxiR0Y1TG1OcGJHbDFiUzVwYnpBTkJna3Foa2lHCjl3MEJBUXNGQUFPQ0FRRUFtSTdmTGxGNUNzSGhvSGFhQVNha1RhZVZicUthS3hsdE1FWmlWdHh0NjlVNktoQTUKSzB0bDBPUUgza1Fqd0dRS2k0bG04UmZFT05wOGVRS05Bd3VlRWEyM3JWd0JRdXd2cE9uNFBYU0JBOU14aVRiLwp2bUw5ZzVFMyt2WlJGdytCMDFScmNTdk9XVVhDUHpTOGIwZFNnSGgrbWxyOExRWTdCWmVFZkFHUDZidkRqbFZvCml5WWRzQTN6MTcrT3FVZDhsMFV5TTZNazFrNkZoa0VvQmhLci91T1FCRlhLRFJ6dktadW5ka2thaUxzZmJQKy8KRlpHNUN0NStrWmJRaWl6T3VISmxkcTVYSjVDNkdpc3FZNjgwZk9CaXNOTWZQMW54bkVLcTZWSmYwa0dUek5xaApLVnMxdTByZnFPN3ZnWk9LQnUzUzkrWTFCRDNWL3NjSCtXWE5SQT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBbjMzRVZVY1pVWjFzdnNwYWRsMTQ2aUhlbFc3R1lSenZXR1p4Q1FtR3NKMGZGWHVHCmJFdXZhR0k3N3VDbWNkajRlWUQrUFVia2RVOU9ucFpmN2NTcXhYdnNNRTlCVlRVQ0tKWXBtRWlsN0Ryb3FHKzkKSlpndTNWK1hya3VtaUpRYnYxWG5mb3JiUVB3TFZhcWZ1YU8wL3NJd3huWDlZM2VoZTFDeEgrN1o5TGtYcWNnNApJWWJ6VzhKcXpwTE95Mzc0YVpwaENya0wrblE5K0h0Z2xXaHVZMCs3SmZlcmVFa040Rytva0dmTFhOdWFad3RTCmR6OHVNUXZtdVBVbTdiV0txVldnQWtkS0I3bnpRNnlJYzl6U0xKM0NVTFlXUGZmWk85a1dUQUxVMG90TGxIcXgKQStSeHNhamdEN08vQVVnRVFUQjhaWEtId0lzeTV2SzRmT0U4clFJREFRQUJBb0lCQUFIVnZwYUVsT1A5ZmF6TQpRekl0YlNDMGR3MGRFeWMyNEFJU1c2YVE5MzI4c1FqY1BQV3VBVHlnTkxSUTNWbGQ5NjNlTUE2Z2JDeDFWeUEzCjlxNlRucXRhKzZLcXBzUEdNbG9wTUIxU2FLWkpIemdnNFBvM3dBSklBVVMrRmhKb01kR0h1WHdaT09DTWhjemMKZzYzdEZqNEFHZk9Pay9XN0FKNmNsUTBiQUdMeVlZOEZCZ3o2d0FRbW9WLytINGY3NC9XOUM3VTV2SHpFNytFbwpMZE5pTTZ1QWo3VThBWEUraXZ5bStWRVpUaHhCSVlJdWE1ajdFNFVoMktwQ2RnNDc5bW1PSGpBT283anNHN0FSCm4vNmpjVVIxSEhJQW50WEc1WlJjcE00Yjh0MnRTVXVyTlBtQmRmSUFHejFjY0owZUdkNitFb0VXbzladDhjRUIKUHFKN3Q3a0NnWUVBeXdJckora25RU3hxYk9BTGFMQ3NYZ0g4N1JRNGtKL2I5dHpRU0JDL1hUaW1UU3lEdTVhcgpHTStuWkQ5blYxcSttUXZEVTB3Y3c4QnBIWmpPUnRkSEJJSDVab0VOMTdIWHVQcnFkYnhRb3BjTFFocmpFa2VyCmt2REpkR0RWemlKaW9Rc2dySDRVejlYOEhHWSt1c2tCT0IrcHNxUW9zeTZJWUVreVZxbHNhVmNDZ1lFQXlSK2IKVjRUVmd3WmhxTmJ1eG40bzNHWHFYMy9ia2tVUGtjVm81UTh0SDRidTlkcFFaWnhjQXV0eXQ3cTR2aXg0d2NLRgpMNVdFQnpxSEEzek1kSS81Z2o1RWk1d2E5dVhtR0VXWW9Ub2RpSks2UWdvQTUveUFHYnBaUUk4L3RWUnZvcjRsCmcwTWQ2S2xvY0ZINEZLcks0RGRHaU5vR1NseHd4QWl6bWtkMEU1c0NnWUVBeE5hSWM3MU5NNU5XYWRUZkd4WmIKT3hlZ1gxd0E4TElmL1AvajhFeFUwSlhTSWZnc2p1SXJhZlpHYnh4UEhsTTloWFh6WVR2bWxDTm5pS3dXTG5nawpRd21uZ2kxVjk3Tlg0T05pSE9DSUt1NWJtekFveGh1NkQ5THE4cTNHQVlZenJjVDFYR3N2ME1uQ0Z1TklwYUdxClRmbmRkL3BXQUU3NUtxc3VaUHNIeENjQ2dZQVZtNWl6NldpTEFDZUQzVHVnQmJQY0lmTHhPYXBjWjZFSmx6enkKeHhPZy9IMDEyck9paHc3M25WWWcyU1c2QU1za2ZnS1RIeXdsSHF1Y3UwNjRBelBhUTFoWDYzaVdLQkwxYnB5OApUYU1ZcGpMdW4yYURoZ1E1UDJVUlk1S0RwOE9xcDJVZVdocWZnWHZmL1Y1NjBmS2o3aXhjelplNWEzOE9BS1ZUCklQUWVtd0tCZ0hyVjBZVUdENDdXUVJjdnNpVXpFdkNYR0YxMlVaM0wrbWEyU0FCSnpxVGRxMUpIZmRwUm1lR1cKczlSZXlEQjdrUURBa3FrcHRHMlBiczRpdXljWHJ3NUhiZkwyeXJKYS9veWt1RG1oSENFNGR3RWdLUCtWeDVCQQpTcElUMFdsNzR0RHg1M0Y1UlVCNmh0ekdnNUhmMCtFTGhpTEZkN0dLYWJJbjJJYXp0MU5iCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRVm5tS3M3K0paUmZpd0cyMFc4VWs0VEFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRBNE1EZ3lOREk1V2hjTk1qWXdOVEEzTURneQpOREk1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRGNKMHNpclFqaTcyYzVpNGpFekNqcGdrck53SWJnWGhDRmhrVnU5NTBUQTBML1g5aFAKQ0FVdGxtazR3bWxxNlhUR3MvSDBQdFdIRDI5bU9mVERzUFcvVGpvSDRQREZNNWF4NXB0R3BKbGp1RzVjQXk3QwpxdDZYMDBvT3RrYWVCL2E4R2pxaXZSdlpkZ2pVNk1iTTJucjVuWFkxVXNKTHVySmZveTBkU2FWVjlwaGJaSU95Cno5ejdFMjZPdWl5UmZXZVMvbG1hd2M0MVBlSWpvSHlIRTNjeG5mL3p6S295dUZMQWJWcjJnUERkYjZ6aVhBVkEKSWxVa0xCd2QxZERBRnVDYlQwSXlRV1Z4VXFXa0ZJbC95ZkJmUkNieHlvY2ljTHFST2pnaEJMbWw4KzB0NGxkcApjQVJTUjhBeTRvVGlMdHkwczhjcWxMVk9WM0tiNnRSL1NuTFpBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVmVDBrTVhoUHBVSElUV0R6L3ViVk5aTHdNSUF3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFMVnV3dkYrTVNXc25NN0NvT1JqVWlMa0o3d0N4SEVtdDZJN0Vpc1BoMGNPS3hodHdyaXNpNVdwClpKWFJYSFJ4aG1zZG9HQTYwQ2Q5MmRlcFVCbTQzRGY4TEN1QUFRR2NSMGVlQkw1d25QQXA5SHlSKys5YkdjUzcKcXRjcVlvVWx1dnJHV0ZUTTNXay9rZG5NbkN2SmY5c2tzLzlBeForREE0NlpzakdiUVpyY01ScDNoZzlPWWVSbAp0bUxvSEJ3cXNGSUJ3SjAyRUVZNWwxYXhua3Q3djBDbTBqTjc0YngyVnJ5MmUrNTk3TkRnWmpadWVETW1NZDU3CldNdUU3eFp5SjVXMzRTLytUY2hHcUNUMmNlZmp6Ykt5UndJb3pPU3gwaTNoczdjcTJIanNQSVNTMkZ4ekVvSUwKVmdXdFI2djVOMU9EeGIvbFdqOWhNRFMvdVBlaE5QND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lSQU16TGNJOG81QXFSUjlLNTE5ZXRCMDR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVd09EQTRNalF5T1ZvWERUSTJNRFV3TnpBNApNalF5T1Zvd0xERXFNQ2dHQTFVRUF3d2hLaTVqYkhWemRHVnlMVEF1YUhWaVlteGxMV2R5Y0dNdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXd0VTE1UGo3RmExTWZTbUkKbEVSWkltZkQ1dFVwc0MzTEtlOTBrbmNuQXRkYXB0a3kvLzcrWkh2WEhUVmhST3ZGOUtWTDg0SnVQSGxOblN2cQo3dk1PdjZ0SEVwZEpKUHBnVWxBMjNHS3RDWmtmUk9RTmhNclZxVmRXVHA0U20ra0szNDkyVXpmUDMyLzNCMXNaCnBBclBlTTh4RjU3TnZBa2VRL1BOUGgvTmtOeHJTUGRtNDRPR0VDdzg1MmQzcndJU3JMRkVwNTVNaHJQRlJEam0KTmJFdVVxMW9wZUkzUDEzWUZEZHNZcmRsQkE5a1R6SGlBT1dBRmxoYlA2MkpyMDdtZis0bnQ2R0NOdHpaK3lZZAo4VnhXZWFEVVdmVDh0YjNNWkw5Y3JpZDBnODl4U1lYbTZocnFtdWNTbmdnSUNzOXgwYWxQNUk4RWpwZmpIUThqClVpaVdnd0lEQVFBQm80R1BNSUdNTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUjlQU1F4ZUUrbApRY2hOWVBQKzV0VTFrdkF3Z0RBc0JnTlZIUkVFSlRBamdpRXFMbU5zZFhOMFpYSXRNQzVvZFdKaWJHVXRaM0p3Cll5NWphV3hwZFcwdWFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSlR6amxJaXMwbjBUai9WNkp0QnpDS0sKemkxNGpVNDNOWkZiellNN3l0Ynl2YWUwOWpqTmdOYnM0M2IrQ01QVDJTb011R2pYeHFWL3JsbjhJMUdhYm5DVQphaGsyQWMxZXdUTTdJWWxHYXBZWGVYSU1aR2pEVldaVDBuNWwxVXFsTHR3MTF1Q0lTeVhZT1kwc1EyRXNsck9pClZ6VCtGT2xYQkVWc0FFV0FDZ2ZIS1lMOEs2Z0lDUEhBN2Zid3VYdDZyN2J0cFdBd1pJbG5qOTNMM21tbE9tV0IKaUVQdzVkbkRLSVhXbjJGckVqN3R3cC9idDhyODJDaUFmc0M1aUlBTStPQ0MrY1Jxdmg0K0xub3cyWDN5bE00ago1azZUbGpxT0Y4SzFYOStoUlpFUkhEaWlaSnl4TUZhcE1QVWVTSEdUcG1jWGRuLzBFdDJBNVpUTHJ6WXBnQnM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd3RVMTVQajdGYTFNZlNtSWxFUlpJbWZENXRVcHNDM0xLZTkwa25jbkF0ZGFwdGt5Ci8vNytaSHZYSFRWaFJPdkY5S1ZMODRKdVBIbE5uU3ZxN3ZNT3Y2dEhFcGRKSlBwZ1VsQTIzR0t0Q1prZlJPUU4KaE1yVnFWZFdUcDRTbStrSzM0OTJVemZQMzIvM0Ixc1pwQXJQZU04eEY1N052QWtlUS9QTlBoL05rTnhyU1BkbQo0NE9HRUN3ODUyZDNyd0lTckxGRXA1NU1oclBGUkRqbU5iRXVVcTFvcGVJM1AxM1lGRGRzWXJkbEJBOWtUekhpCkFPV0FGbGhiUDYySnIwN21mKzRudDZHQ050eloreVlkOFZ4V2VhRFVXZlQ4dGIzTVpMOWNyaWQwZzg5eFNZWG0KNmhycW11Y1NuZ2dJQ3M5eDBhbFA1SThFanBmakhROGpVaWlXZ3dJREFRQUJBb0lCQVFDR2pWQm5EVHY1d0hEdQpqMXh2YUxSVittdGtZeG9qUGJ6cy9SMzRlS2xNWVFXTjdMbzM2Ull1dHdmY2VCend5Qk14M1dZU2lhVXZ4bVkvCmdURUNUSUdIQlBaVWRINWpOemFHSWplQkEvU1VpRmI3OExNVlhpOG9mOVJ1L3VQRElMSU5xcm9BeHE2Y2xHcDUKZmdTN01Xd085cWZrdEJ0SkhOTDJBczFmZGY4MVpvOXd5TUZmR29KaC9ZRmJ2RjB6NHIzQjlpSVNVTUFOdFd4TgpBTExWTUlOWU13UCtTSWVIREhHRHdaaXFiRnRrNllVazhNWHpyWG52UitlUkZKbE4xMFFSTnpIRklxRHRaOWZ1CklXcHZyTGZIVjVVTXlRalhXRWVKenB2QTFGMk91ZW1kVmpPdXA3cTM1YmUyLzJ1d3U3YTNWMXFFM1BRSmwyemoKckg5b2w0eEJBb0dCQU5uellkSldma2hoYW9Yam9Tc0JkU0tIdVRTOUJ4cWVCTW1qL3JwYXVGQWh6TFFsUHY3agpTc25QZGFTbG02ai9FeGp6NmpSN3V0TU9uNWpQV3JFcE1sajRLVmIyelUvdDRLSUxTbysvdU5QQXpwUWVvMjJQCnB0YkpIbUZrMkZJYS9PZnNBMWJuY3dHZzVwaGhJYUgzLzlMTG4waVZoQjZIOExsYTJFM1VPWHU1QW9HQkFPVFkKcGh0WnRVRDEzZi9ucWpHMUxPaXlaYjlIWjRMUzlKREhGMDZ2MmxnUkh5dlJpb0RyZmxFZnM5ZElKNS8xSHM3bgo4MHNmU2xHazZKNFpBM0VYaW01T0s0K0FXSXBBRVJJd0E1a2pYZ0tlcTZ4Z1YvbTFxUmw2cHYyd0VnaXE0OUh0Clo2MndkcFNGS2kxZ2xaRlBCT0lXeFJTRk8yYXQxTGNyUU9Kekpkb2JBb0dBQ3E5bzgxUDBPdjR6cDc3Q0x3YVMKUkpBYzMxNEpGQi85SWhtZEttdTZMNHVJcXFoTXoxZzdXV3VIVy93V2hwR0MwUzFjSlJpUHp6c2ZUZkdVZzZ6KwpYK2hDdHBYQStSTXplUjVPbUgrUXd5am50OUZNdDlsY0Y1bWltS25HQlRoM2Y3Tk5jcHhFUWljdVJ2ZzBHdW02CnJBMzVrQ2hzWXNiTllYajNzOUVjeEZrQ2dZRUEwYU0xNTNBeWZxTzlEcVNtWUlyYjdQOGYvaTNuUVEwSFJXbGMKakpURHJGRmpBTDBmNkNIU3dYWU5SWFd2OXZTUm1IRWJpd0hMRHlmR2dLM2hYVVIzWjd6c1lyVHNaeGx4aWZ1NgpFQnM2RDZSVEY4SGFWY0o0ZWdMRjN6ZmdEVmlmQXJ3OGNmeHBaSHpvdWxEME12ejBPRGtycVRTenljZ01TUSt5CmpMOTNPV2tDZ1lBN2JZWWpGajRic2RwckZaWjgyVlBYeDc1OVJNZ2hUUGxCV1NidFAreGlpUHlLMGlDR2phaW8KZFZBcFdTQVhYeDNJbldtc01MK09GcDg3SG9NOVl2clRUQWh0TWlUVDhnWXFtMWh6TkJHNDFMTE0wNG5tQjNrcwp0SURJUndjT0NaRFoxcU1GU0QvcG5qK1JLakw4ZlRnd0R4Tm1RbHlyZXVJNmdtY3pDOGZFY2c9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 6b3235d1cca394f374a6bc69ed4d7d59e9c47ce47dd6779d7ebf0439c89adcfb
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 2b2e9759f6b7b7c4ec466b4ce0a8881cc8c204694d803033b246fd49aabe6b03
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
