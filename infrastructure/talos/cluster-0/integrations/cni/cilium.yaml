# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: dsr
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: cluster-0
  cni-exclusive: "false"
  cni-log-file: /var/run/cilium/cilium-cni.log
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "false"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bandwidth-manager: "true"
  enable-bbr: "true"
  enable-bgp-control-plane: "true"
  enable-bpf-clock-probe: "true"
  enable-bpf-masquerade: "true"
  enable-bpf-tproxy: "true"
  enable-endpoint-health-checking: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "true"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  endpoint-status: policy
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA drop tcp flow port-distribution icmp http
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: cluster-0\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUoycjdXS2NqMHRlZlpISzQwaWZrYjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05UQTNNVGMwT1ZvWERUSTJNRFl3TkRBMwpNVGMwT1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3Wmt0ejliYUxteFZFU3o2TzJuTGRDRmlrMHBFZVA2cTluN0dsZWowdzNQSzVRek8KZ1JCcDNUYkI3a2hOWGI3bGtuYUluczJSOVJpRFk2Y0lteUFyS093NGUzY3lRU3gwSCt6SFF5OHMvSDhqRnBTMwpsc3RjaU5IYjd1U2t1WnRIUnZXUSt0YUpnNlFjN3dmZjJmQWVCMXhEWmkvTEQ0R0NaMzc0RVdUeDN2QXBUYzd4Cjl6cm9ZOUVDMzV1MHIrWlpNU2cxcmw1bjdRdlV1YndGbmZPQmcxenFua0lJeStpNVlhdS9CWTg1VVBMd3BqZ2UKek5KMEE5aWxEZHZ3YytITXhoVTdvb1VCUmtFSkNRcmYwZWFsWU5wcm1iSjdobGlSK092SWxvazRDQmR5cFBtcAplMmtLZ0RzQThnY05yZnpaUXRDaCsvSWpDYWx0VHBMN1Y5aVFJd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRldwM3E3NnZNVksvdWwvWm9SdnR3MGU3TndqTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0dCQjFSTWU5Sk1RMVZBVUlBQlgxUTl5Vkw4TEc5dUpoVkFyeDI1Z2djSXNLZmJiRGpXQm9nClczR0RvdklQZzVaanFvVlAyb0VrbndhdnRpMGRhU2hXR2Z2R3RLU09NMFVqYlp4MDJPaVUzd2FENDhMeUw1bDIKUXBIRmpUZnNEdWNjQzQrcHNYYitjYUZiUlcrOUJoNDNNd0ppUzhyeHNhVjJKU2FUUlo0NmdSc3E2MEtWUjRjKwp2RS9VR2plRjRadVorcm81QlNnR3FzdW1VR3BDeDNmQ1MzcnBHTzNSZFNybDQwekxKSC9zTHJ6ZmVwY21VN0pKCmpFRjJqNldxMThmeTN1KzVkZzdNOXJoWjJWM1p4ZURGS3I0MTFpK3B6SW1vcENqR3dLTVJGNnErL0lHMndiUlQKVzBRY2tVYlFWS2lqL1RVb1hlNjRXU2drcjdOQ0JRcGoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd1prdHo5YmFMbXhWRVN6Nk8ybkxkQ0ZpazBwRWVQNnE5bjdHbGVqMHczUEs1UXpPCmdSQnAzVGJCN2toTlhiN2xrbmFJbnMyUjlSaURZNmNJbXlBcktPdzRlM2N5UVN4MEgrekhReThzL0g4akZwUzMKbHN0Y2lOSGI3dVNrdVp0SFJ2V1ErdGFKZzZRYzd3ZmYyZkFlQjF4RFppL0xENEdDWjM3NEVXVHgzdkFwVGM3eAo5enJvWTlFQzM1dTByK1paTVNnMXJsNW43UXZVdWJ3Rm5mT0JnMXpxbmtJSXkraTVZYXUvQlk4NVVQTHdwamdlCnpOSjBBOWlsRGR2d2MrSE14aFU3b29VQlJrRUpDUXJmMGVhbFlOcHJtYko3aGxpUitPdklsb2s0Q0JkeXBQbXAKZTJrS2dEc0E4Z2NOcmZ6WlF0Q2grL0lqQ2FsdFRwTDdWOWlRSXdJREFRQUJBb0lCQUhJYU4vZ0JaNEpvOHhJMgpjaDFHVTFWVXYrYVRwUnV5N1V4dWw5aU8vb09iNFg5eU50dTJzczVna1poQklPZ1p0UERIeituWXV5ZTdsT1RNCjg3T0tHQ1g4WTZYUk1OdGN1ZXgrLzBwSHFibi9yTXlJUmxRbjg1Zm9LRG42cEdPSWMxQU5ONisvZGprU0pzTnkKM3FweWJTQmxib3Z4cXpxdVdBOXJ0QVY4ZTFtcktCN3VWcld6dStxaThlTU92TGlKS3lhMS9YNU5VL2NKdjNjWApBdDdwaVJmcTRDK1JLZGNudE1aSXFMdFVIVGIrbURkSnRzQmF2UlpSSnVDUDVEMDFlcUJaTDdWK0hkN3hyR3plCnEyNERSaVpBSTZMMXdoNUswM1hjRVpUVEhDRUcrbUFmaVBPLzJudXNKQkRSdzFXVE9oRnZKYTBhVXNZZi9HdG4KdTBIRjQzRUNnWUVBM1Bjc1lWZU5peHhXaG55cWttM01KUmFSREdMUW1BOTBvRW1reDVmQnNUZ1pqTjNkZCtKTwpkZlFmTFZwZXVkU0oxV0JKWkVaeW5mYnZhM2RUN2Y1ejVoUVBxYUlON01na0RtRGdGVVdTdXRITUtOM0J5UEd0CjJGTEpDV0szaUM3d3lYd0g5c1poMi8xR3BZR1V6WXNWTnIra0lwWW1PNjJjdm9DYzZFQlgzRlVDZ1lFQTRFc3gKVUZreUd3MmMvOUFmTXBFcnk2QlEybzU4NVh1Sy9rd3QwUHlIWFFyb3BXZ29Eemhva2RWTlg4bjlQRzdubUJLaQppV25hTDdxYmIxQlFFUnllMnFra1ZlWFBVeTdxYWcwUE5IUWgxaWw2Y0NjZ2N3ak53cmxzNHpsMkZobFFERC9aCmxGdHhlWHlkUlg3TmpWcGNnbVB2ck1UWnRBNzZZd3FKZTR3Sk1wY0NnWUVBa3htbG5PUDVZYXVxMm5zeDNxdGoKcFNraHhOb2Z2YXRFVzlUSzh1alBWRmhoZ2dyTmZoclZXdWI2dm1tVCtDaEszaGJzcE9uVk1kNExRMEs4U0FzRwpReHdGMVVzQjlDakZBQ0Z6N0JWVitqTGl0QzMwN1A0ZldveTZNeHBaempwWnAvaC9JTVN1cnhJc3JzL1dMUU96ClNyQkg1NUtIdjJEem9VcmpxaVh6bDhVQ2dZQTdzWWRrWFBqSzNtcWtZcDJLOWJ2MEs2eVpIa2I3UkZBUHNmS1gKcGozWWMyakxiTmNNaGZTK3EwZzJjQ21uaGRTNVVteFRxZ3Bablk1MHA2bEhoSmg2bFgySUp1dHd0aEhKTzhTSwpMMFk2R3p2czBWei9nSjVTYnNzZUJsTDVPcTlsTXpFVEhPc3NiQS9uU1FJbjFwNjhUU0NpbUpsZ0pJUmJDNWpmCmVydVA3UUtCZ0UydncybE0vSmFaeGtUSmhReGVTRkNTSHV6eUZYekF4dE9YaUlpdUZJN29nSWJuVkFjaWIrenYKNGo1dUtHeDJDRC9iT2x6NXVrZ2hqdXB0RXNWTGFRU0JoRmIvNkJhN1dlRVU3Z2c0MG9UQ1BaREtFSnVOTUZKMwpSWGRzWER2bnEwTUVENzlvMmxLd1BGZjRjMTNzcXFRZHAxanI0UFg4MFhGWmU0WDRzRk5XCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUoycjdXS2NqMHRlZlpISzQwaWZrYjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05UQTNNVGMwT1ZvWERUSTJNRFl3TkRBMwpNVGMwT1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3Wmt0ejliYUxteFZFU3o2TzJuTGRDRmlrMHBFZVA2cTluN0dsZWowdzNQSzVRek8KZ1JCcDNUYkI3a2hOWGI3bGtuYUluczJSOVJpRFk2Y0lteUFyS093NGUzY3lRU3gwSCt6SFF5OHMvSDhqRnBTMwpsc3RjaU5IYjd1U2t1WnRIUnZXUSt0YUpnNlFjN3dmZjJmQWVCMXhEWmkvTEQ0R0NaMzc0RVdUeDN2QXBUYzd4Cjl6cm9ZOUVDMzV1MHIrWlpNU2cxcmw1bjdRdlV1YndGbmZPQmcxenFua0lJeStpNVlhdS9CWTg1VVBMd3BqZ2UKek5KMEE5aWxEZHZ3YytITXhoVTdvb1VCUmtFSkNRcmYwZWFsWU5wcm1iSjdobGlSK092SWxvazRDQmR5cFBtcAplMmtLZ0RzQThnY05yZnpaUXRDaCsvSWpDYWx0VHBMN1Y5aVFJd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRldwM3E3NnZNVksvdWwvWm9SdnR3MGU3TndqTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0dCQjFSTWU5Sk1RMVZBVUlBQlgxUTl5Vkw4TEc5dUpoVkFyeDI1Z2djSXNLZmJiRGpXQm9nClczR0RvdklQZzVaanFvVlAyb0VrbndhdnRpMGRhU2hXR2Z2R3RLU09NMFVqYlp4MDJPaVUzd2FENDhMeUw1bDIKUXBIRmpUZnNEdWNjQzQrcHNYYitjYUZiUlcrOUJoNDNNd0ppUzhyeHNhVjJKU2FUUlo0NmdSc3E2MEtWUjRjKwp2RS9VR2plRjRadVorcm81QlNnR3FzdW1VR3BDeDNmQ1MzcnBHTzNSZFNybDQwekxKSC9zTHJ6ZmVwY21VN0pKCmpFRjJqNldxMThmeTN1KzVkZzdNOXJoWjJWM1p4ZURGS3I0MTFpK3B6SW1vcENqR3dLTVJGNnErL0lHMndiUlQKVzBRY2tVYlFWS2lqL1RVb1hlNjRXU2drcjdOQ0JRcGoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd1prdHo5YmFMbXhWRVN6Nk8ybkxkQ0ZpazBwRWVQNnE5bjdHbGVqMHczUEs1UXpPCmdSQnAzVGJCN2toTlhiN2xrbmFJbnMyUjlSaURZNmNJbXlBcktPdzRlM2N5UVN4MEgrekhReThzL0g4akZwUzMKbHN0Y2lOSGI3dVNrdVp0SFJ2V1ErdGFKZzZRYzd3ZmYyZkFlQjF4RFppL0xENEdDWjM3NEVXVHgzdkFwVGM3eAo5enJvWTlFQzM1dTByK1paTVNnMXJsNW43UXZVdWJ3Rm5mT0JnMXpxbmtJSXkraTVZYXUvQlk4NVVQTHdwamdlCnpOSjBBOWlsRGR2d2MrSE14aFU3b29VQlJrRUpDUXJmMGVhbFlOcHJtYko3aGxpUitPdklsb2s0Q0JkeXBQbXAKZTJrS2dEc0E4Z2NOcmZ6WlF0Q2grL0lqQ2FsdFRwTDdWOWlRSXdJREFRQUJBb0lCQUhJYU4vZ0JaNEpvOHhJMgpjaDFHVTFWVXYrYVRwUnV5N1V4dWw5aU8vb09iNFg5eU50dTJzczVna1poQklPZ1p0UERIeituWXV5ZTdsT1RNCjg3T0tHQ1g4WTZYUk1OdGN1ZXgrLzBwSHFibi9yTXlJUmxRbjg1Zm9LRG42cEdPSWMxQU5ONisvZGprU0pzTnkKM3FweWJTQmxib3Z4cXpxdVdBOXJ0QVY4ZTFtcktCN3VWcld6dStxaThlTU92TGlKS3lhMS9YNU5VL2NKdjNjWApBdDdwaVJmcTRDK1JLZGNudE1aSXFMdFVIVGIrbURkSnRzQmF2UlpSSnVDUDVEMDFlcUJaTDdWK0hkN3hyR3plCnEyNERSaVpBSTZMMXdoNUswM1hjRVpUVEhDRUcrbUFmaVBPLzJudXNKQkRSdzFXVE9oRnZKYTBhVXNZZi9HdG4KdTBIRjQzRUNnWUVBM1Bjc1lWZU5peHhXaG55cWttM01KUmFSREdMUW1BOTBvRW1reDVmQnNUZ1pqTjNkZCtKTwpkZlFmTFZwZXVkU0oxV0JKWkVaeW5mYnZhM2RUN2Y1ejVoUVBxYUlON01na0RtRGdGVVdTdXRITUtOM0J5UEd0CjJGTEpDV0szaUM3d3lYd0g5c1poMi8xR3BZR1V6WXNWTnIra0lwWW1PNjJjdm9DYzZFQlgzRlVDZ1lFQTRFc3gKVUZreUd3MmMvOUFmTXBFcnk2QlEybzU4NVh1Sy9rd3QwUHlIWFFyb3BXZ29Eemhva2RWTlg4bjlQRzdubUJLaQppV25hTDdxYmIxQlFFUnllMnFra1ZlWFBVeTdxYWcwUE5IUWgxaWw2Y0NjZ2N3ak53cmxzNHpsMkZobFFERC9aCmxGdHhlWHlkUlg3TmpWcGNnbVB2ck1UWnRBNzZZd3FKZTR3Sk1wY0NnWUVBa3htbG5PUDVZYXVxMm5zeDNxdGoKcFNraHhOb2Z2YXRFVzlUSzh1alBWRmhoZ2dyTmZoclZXdWI2dm1tVCtDaEszaGJzcE9uVk1kNExRMEs4U0FzRwpReHdGMVVzQjlDakZBQ0Z6N0JWVitqTGl0QzMwN1A0ZldveTZNeHBaempwWnAvaC9JTVN1cnhJc3JzL1dMUU96ClNyQkg1NUtIdjJEem9VcmpxaVh6bDhVQ2dZQTdzWWRrWFBqSzNtcWtZcDJLOWJ2MEs2eVpIa2I3UkZBUHNmS1gKcGozWWMyakxiTmNNaGZTK3EwZzJjQ21uaGRTNVVteFRxZ3Bablk1MHA2bEhoSmg2bFgySUp1dHd0aEhKTzhTSwpMMFk2R3p2czBWei9nSjVTYnNzZUJsTDVPcTlsTXpFVEhPc3NiQS9uU1FJbjFwNjhUU0NpbUpsZ0pJUmJDNWpmCmVydVA3UUtCZ0UydncybE0vSmFaeGtUSmhReGVTRkNTSHV6eUZYekF4dE9YaUlpdUZJN29nSWJuVkFjaWIrenYKNGo1dUtHeDJDRC9iT2x6NXVrZ2hqdXB0RXNWTGFRU0JoRmIvNkJhN1dlRVU3Z2c0MG9UQ1BaREtFSnVOTUZKMwpSWGRzWER2bnEwTUVENzlvMmxLd1BGZjRjMTNzcXFRZHAxanI0UFg4MFhGWmU0WDRzRk5XCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUoycjdXS2NqMHRlZlpISzQwaWZrYjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05UQTNNVGMwT1ZvWERUSTJNRFl3TkRBMwpNVGMwT1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3Wmt0ejliYUxteFZFU3o2TzJuTGRDRmlrMHBFZVA2cTluN0dsZWowdzNQSzVRek8KZ1JCcDNUYkI3a2hOWGI3bGtuYUluczJSOVJpRFk2Y0lteUFyS093NGUzY3lRU3gwSCt6SFF5OHMvSDhqRnBTMwpsc3RjaU5IYjd1U2t1WnRIUnZXUSt0YUpnNlFjN3dmZjJmQWVCMXhEWmkvTEQ0R0NaMzc0RVdUeDN2QXBUYzd4Cjl6cm9ZOUVDMzV1MHIrWlpNU2cxcmw1bjdRdlV1YndGbmZPQmcxenFua0lJeStpNVlhdS9CWTg1VVBMd3BqZ2UKek5KMEE5aWxEZHZ3YytITXhoVTdvb1VCUmtFSkNRcmYwZWFsWU5wcm1iSjdobGlSK092SWxvazRDQmR5cFBtcAplMmtLZ0RzQThnY05yZnpaUXRDaCsvSWpDYWx0VHBMN1Y5aVFJd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRldwM3E3NnZNVksvdWwvWm9SdnR3MGU3TndqTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0dCQjFSTWU5Sk1RMVZBVUlBQlgxUTl5Vkw4TEc5dUpoVkFyeDI1Z2djSXNLZmJiRGpXQm9nClczR0RvdklQZzVaanFvVlAyb0VrbndhdnRpMGRhU2hXR2Z2R3RLU09NMFVqYlp4MDJPaVUzd2FENDhMeUw1bDIKUXBIRmpUZnNEdWNjQzQrcHNYYitjYUZiUlcrOUJoNDNNd0ppUzhyeHNhVjJKU2FUUlo0NmdSc3E2MEtWUjRjKwp2RS9VR2plRjRadVorcm81QlNnR3FzdW1VR3BDeDNmQ1MzcnBHTzNSZFNybDQwekxKSC9zTHJ6ZmVwY21VN0pKCmpFRjJqNldxMThmeTN1KzVkZzdNOXJoWjJWM1p4ZURGS3I0MTFpK3B6SW1vcENqR3dLTVJGNnErL0lHMndiUlQKVzBRY2tVYlFWS2lqL1RVb1hlNjRXU2drcjdOQ0JRcGoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUszY3gwbk4yWUdxdktpQXRRNTBFUXN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05UQTNNVGMxTUZvWERUSTJNRFl3TkRBMwpNVGMxTUZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQW5URVZjS3Q0M3QwSVVuQkxkQWpaQ1Bad21VdjEKRE50OTJTRmJhY0I0S3NCVEMvdHZnWEE0Z0t6eDBZZ1BnK0czQXc3KzNKNWxhbUxzNmhVSlJYRnJlaTNZZFh1eAp3ZGRSR3BkRHBENHRtVWh0WXJKUDJyZ0JYNDlDV0pyZW1zL3F1NXBtYzZzS2lZS2VsUkRLTTYxSlBYZC9oT0VUCjRoUUpsY2lMZnBXTGFNQ0hwU3Vhem5yMU0xeTJkUzdnTHVHSE5WdStsViszVGYyYVBJTHAxSTRDZDFTQUU3cGcKSUJHSEVnYkNtVTBZcjVjb01KRUlqZ1FlSG9NTnBUNW1LTFZLME9ZdHZKM1o0U3dRVkx5V2s1Z0lmdWJ0aE1MSwpOWGlYRHdSUG1JY3FaU3dQZy9JNnRZK2tCdXIrdEhWQzNsRS91UEN0cTN1dEZOcEI2bGFYMlgxWitRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUlZxZDZ1K3J6RlN2N3BmMmFFYjdjTgpIdXpjSXpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSXkxb1dCUG4xTnZQdlpyMjFQUGp0OFdpSCs2dGR4WURpRkN5NDJ6S3lZOC81aFIKQzg3cVBsSVU5eTlqMEg0RHVDenJuZ3BoZ0VjM2tsMndySTlkMzFzQ3B1UG5IK3Fvb3JLdFZGODd4SkFqSTBsSgpmdEo2b2JqcSs2cnhYT1lqTncwYTQwcGRNUDJQMUZwd3RVdXhwLzlBWFFRSVJoZGpGRjRYZXY1a1ZBM3g0bWN6CnN1VWVjWEhuWmlCVFp6cEVMM2ozNnQwTk9KWDE5Q0NjRlZnS0Y4dUxHbDd2aXZIclFiQzRNNDBhMkVDQlpLRCsKSnM5RVhYbERYUUxYRDF5UjFOUVZjRnlIS0hXMW42ZWtaQ2lUMWI2cmhrdkliT1pIZmtuTWR6QTNuaTRQMXdYbApwVGF1elU1YUIrQ05WKzhUd2JYalhyNUFaZDJWUVFlOWZIVEQvWnM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBblRFVmNLdDQzdDBJVW5CTGRBalpDUFp3bVV2MUROdDkyU0ZiYWNCNEtzQlRDL3R2CmdYQTRnS3p4MFlnUGcrRzNBdzcrM0o1bGFtTHM2aFVKUlhGcmVpM1lkWHV4d2RkUkdwZERwRDR0bVVodFlySlAKMnJnQlg0OUNXSnJlbXMvcXU1cG1jNnNLaVlLZWxSREtNNjFKUFhkL2hPRVQ0aFFKbGNpTGZwV0xhTUNIcFN1YQp6bnIxTTF5MmRTN2dMdUdITlZ1K2xWKzNUZjJhUElMcDFJNENkMVNBRTdwZ0lCR0hFZ2JDbVUwWXI1Y29NSkVJCmpnUWVIb01OcFQ1bUtMVkswT1l0dkozWjRTd1FWTHlXazVnSWZ1YnRoTUxLTlhpWER3UlBtSWNxWlN3UGcvSTYKdFkra0J1cit0SFZDM2xFL3VQQ3RxM3V0Rk5wQjZsYVgyWDFaK1FJREFRQUJBb0lCQUMwMGMyVCtldmtrZVlNegp0Zzg5aUNUU3NsanpoaHBYZU42YmdDMXVZMkJ3QkxINmNmdTRhUmRnSlA3TDhTSk5KQk5tR1pjYW1qRzVGMGJPCkcrZHprYVFHVVN5Z0VPT2M1ejhOWnk5eGppMTVyYk5uY2gyRk15Zm5DLzV0TXowME05NFZyZ2J2bGswcldpMm0KTVhBaEVtSHgzcU01RXoyOTQyL0d4NDcwdEsyLzFSRitSMWVoZy9iSDBXd3J5MzNVZDY0N0k0b28yVUlZUmxOZgplQXpxdnFCT0czeVdBR3hKTXFybkx0cndjWkRJSG1jU2dWRXFqNW90TUpVOW0rRVhCMXQzb21hOFBZYm1WZnRaCklkZU9ZcSthYTNqREJPMGRiSlpTd3poandmcFZKQjZidVNxeHZuckVlK0QzN043QVdnUGtpbGJoYzdiZGtheHUKTDJZWWNIRUNnWUVBejA3NzVCL2E3ZkI5dGxPL1QyNFdKaHVkSzA5WDVjSGhzaGlmalBWUHAyRE1kbGhYWFRNWQovVTk1Y3pXdEpUNUdhQ1NDWVY3aTJ1UGljaDVUNUVKUFdXQWZFdE1lcytiUUJueWRDMExraG9CWnVobWdvVERJCkkxWUFRYkZjbmlpWWF5MXk4U1pRektGK080cWhPZk5yQnUzVGxMVlJ3V2pwWGF5K0YybHp2cVVDZ1lFQXdoeXYKUDBuSlVCTjBvUGZDa0FMWmRUK1RZbDdYYmhSTWxURjEzU3dqM0lpdjVML2N6NFlBdHp3VTZjSk82ODVQTXY5NwpCdXdJQUZLSlVOcmx3K3J6SllaY2djeDg5VG40aTB1TThJcGJ0QjJ5TXpuUis4L2pHM29ib0lzdWx5N3dEaEprCjFLR0FtRHBkOWl6Y0pXZll6aEZtQWh2dzZ3QnpjZFNadlhacEFjVUNnWUVBbituemtLT3FBOFZ4azhYQ1c0azEKK0t0d2I4cENxVzhIcEpRdDcxUUQzNzlodVNDb003S0k0azMrQjRzdVJ2NWszVXpjYmpQOWxwQVhTNlJ0WGpSdwpkU2Nha1REZUREUk4zOU1jYVdWdVZ2cUhQSEVzWVdyNTE1Z3RsbjgwVEtSUC9zME9UMHNaSk9DbU9WUFV6cGtnCnhEV004cmR6bTFoTVBBQldta1MwRGlrQ2dZRUFpVDIrcWdDQlZSeHNXV0xUTFA3V3dROHlKVnJvOWV0a09oZSsKUGFIM3VQVHJaOUEvVG5wd0J4MXpxOUsxK2dMai9DcWwwVDhRYVNueDdEallPcXpqUEtUQ3d3TFJWcENtS2RaQQp6OUVEQlZYNXFENDVPTkRDd2FxVDNlNktBbG90WDhXaGhMU3JOdllOZVFBK3BqUEdGZXczTTBhT0Q1bENCamxLCmVhbytsQUVDZ1lFQWp0VVBUVDl0UGM1ZlIxNHQxZG5BTU5DU3JzOVI4UXRjVmRIWkhCaC8yT3hNUnBYTy9kRDEKL0lNWVV3TWN5Z3AwMTI4dUd1Zk1mcGRJcXdCRHlqMzJhWGpvRHF2dC9hY1lDQm9uK0ZSRE1USnU0V1JtR2dZLwptK1AyZnRtdTVVZlFMaCs0dUlOeXdRcDMyYXdpYnRuWVpHazRXL01SZ0g5WEFzWFNYN29ET0xRPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUoycjdXS2NqMHRlZlpISzQwaWZrYjB3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05UQTNNVGMwT1ZvWERUSTJNRFl3TkRBMwpNVGMwT1Zvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUF3Wmt0ejliYUxteFZFU3o2TzJuTGRDRmlrMHBFZVA2cTluN0dsZWowdzNQSzVRek8KZ1JCcDNUYkI3a2hOWGI3bGtuYUluczJSOVJpRFk2Y0lteUFyS093NGUzY3lRU3gwSCt6SFF5OHMvSDhqRnBTMwpsc3RjaU5IYjd1U2t1WnRIUnZXUSt0YUpnNlFjN3dmZjJmQWVCMXhEWmkvTEQ0R0NaMzc0RVdUeDN2QXBUYzd4Cjl6cm9ZOUVDMzV1MHIrWlpNU2cxcmw1bjdRdlV1YndGbmZPQmcxenFua0lJeStpNVlhdS9CWTg1VVBMd3BqZ2UKek5KMEE5aWxEZHZ3YytITXhoVTdvb1VCUmtFSkNRcmYwZWFsWU5wcm1iSjdobGlSK092SWxvazRDQmR5cFBtcAplMmtLZ0RzQThnY05yZnpaUXRDaCsvSWpDYWx0VHBMN1Y5aVFJd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRldwM3E3NnZNVksvdWwvWm9SdnR3MGU3TndqTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ0dCQjFSTWU5Sk1RMVZBVUlBQlgxUTl5Vkw4TEc5dUpoVkFyeDI1Z2djSXNLZmJiRGpXQm9nClczR0RvdklQZzVaanFvVlAyb0VrbndhdnRpMGRhU2hXR2Z2R3RLU09NMFVqYlp4MDJPaVUzd2FENDhMeUw1bDIKUXBIRmpUZnNEdWNjQzQrcHNYYitjYUZiUlcrOUJoNDNNd0ppUzhyeHNhVjJKU2FUUlo0NmdSc3E2MEtWUjRjKwp2RS9VR2plRjRadVorcm81QlNnR3FzdW1VR3BDeDNmQ1MzcnBHTzNSZFNybDQwekxKSC9zTHJ6ZmVwY21VN0pKCmpFRjJqNldxMThmeTN1KzVkZzdNOXJoWjJWM1p4ZURGS3I0MTFpK3B6SW1vcENqR3dLTVJGNnErL0lHMndiUlQKVzBRY2tVYlFWS2lqL1RVb1hlNjRXU2drcjdOQ0JRcGoKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXakNDQWtLZ0F3SUJBZ0lRYVI5QXNPRHQwSUtOektLQ2tXcjBoekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpBMU1EY3hOelV3V2hjTk1qWXdOakEwTURjeApOelV3V2pBc01Tb3dLQVlEVlFRRERDRXFMbU5zZFhOMFpYSXRNQzVvZFdKaWJHVXRaM0p3WXk1amFXeHBkVzB1CmFXOHdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCRHdBd2dnRUtBb0lCQVFDOWt4em9hbzNqOWtYV0Nxa20KYmExRkRMSWovUHlIdDlpR3dhclNnUm4waDU3Y0psMXFsV1oxSTdJanJGWlFvNEVRcmI4NlpxVUVHWFhMNnBkeAp0QWR4Vk5RUFhQQ0pNRjRPWHI5VTNIM1VVUThzNCs1UkRMTTdGeEpBUStob2w5L3lSQXpEYTJOYWtiZVhyNm44CkhTbnE1Q0pBRkhzOWYrRmwraGMzNjFGM0M2R1pRamZQOGRneTlHZE5UdW9ZTjBWd08xZmlQRDA0NENwMzVUZnQKMU0yWVZWcE1qZGJaUm12V0hpQUJKTE5ObW5HaXNTTmRjOU1pdkxudVNzYXFLNDVEN2FNTklDYmc5TzBjU2lZSgpuZjI4anBwWEVwcFJPTHpYWkZLVFY1c01KQVVvekh2bXVSNUJha042YlJFYnI1V0tCblFJYlNrQ0ppeWt0Z1VsCklBcTdBZ01CQUFHamdZOHdnWXd3RGdZRFZSMFBBUUgvQkFRREFnV2dNQjBHQTFVZEpRUVdNQlFHQ0NzR0FRVUYKQndNQkJnZ3JCZ0VGQlFjREFqQU1CZ05WSFJNQkFmOEVBakFBTUI4R0ExVWRJd1FZTUJhQUZGV3AzcTc2dk1WSwovdWwvWm9SdnR3MGU3TndqTUN3R0ExVWRFUVFsTUNPQ0lTb3VZMngxYzNSbGNpMHdMbWgxWW1Kc1pTMW5jbkJqCkxtTnBiR2wxYlM1cGJ6QU5CZ2txaGtpRzl3MEJBUXNGQUFPQ0FRRUFURFpSV0pQQUVPU0wzOHV3NnpaSTJXVlIKbkhNWjNCQ3hRMkRQY05YQ2FJZFdPUyt4OVVDSlViMEVhT0UrT205aDNjbUtMUkxqbmZGQjYvVTJ6RTc2bGQ3cApRUlprVWZWYTFWakljL2JUVXBrN3Y5dERvNE43UDZRMGRPQU0ycy9HSTZhdzFCNEF2SkthWVJsczNKb3RUUE1RCjVrbi96VjE4c2VsUGF4Vk5ZM1ltdjJjemUzdFBKektPajhXNDY1TXRFMWZoQ01DeFd5MXcrcS92WENZUHBibDEKN0lKTXlDcWpqdWEwTm1xcVlud055QkdMREV3blRYN2lLNzg0bDJiS1kzZmgzRjhZNkRtclFkcWpkT25kbUR1OQp3Nm4ycVp4Mkl3Z3hLdFNZRWNxczRUTmxaOWJmK1BMS0xYRzRLOHF2MVdlTVZVQ1V4SDZzV1VnOTJuNUQxUT09Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdlpNYzZHcU40L1pGMWdxcEptMnRSUXl5SS96OGg3Zlloc0dxMG9FWjlJZWUzQ1pkCmFwVm1kU095STZ4V1VLT0JFSzIvT21hbEJCbDF5K3FYY2JRSGNWVFVEMXp3aVRCZURsNi9WTng5MUZFUExPUHUKVVF5ek94Y1NRRVBvYUpmZjhrUU13MnRqV3BHM2w2K3AvQjBwNnVRaVFCUjdQWC9oWmZvWE4rdFJkd3VobVVJMwp6L0hZTXZSblRVN3FHRGRGY0R0WDRqdzlPT0FxZCtVMzdkVE5tRlZhVEkzVzJVWnIxaDRnQVNTelRacHhvckVqClhYUFRJcnk1N2tyR3FpdU9RKzJqRFNBbTRQVHRIRW9tQ1ozOXZJNmFWeEthVVRpODEyUlNrMWViRENRRktNeDcKNXJrZVFXcERlbTBSRzYrVmlnWjBDRzBwQWlZc3BMWUZKU0FLdXdJREFRQUJBb0lCQUJYb3FKQ2JyK1pHa2UrWQpyOC9ISVIwM3lHYXNXQ3IvTGtEMHBOOUxHRXJRV2FXcnNXUWQvQWRScHNiRXBmMFB5Rnk3Rjd5U0hFUUxCVGdaCjFvTEhnWXl4ZHdpSGZ5ejdzQU1OSkNPVWo5NDN0LzlDSUVxeG93MFRMNExKMWxRd0tTdUFmZEVmMmcyZmhZNDgKT1BMd0UrWVhrM1hBYURYRlQ3RlBZOXVNa0krblQ0TGEybFliVVRZVys4NVZJNXVsVldIY3FjUlQvbVkxL3FrYgpVK2p3WW9HZ2VjTHVmWlc1cVpOc2xPK3RyanByS21KTTFQR0dzeW8wOGowZVhPT2F6L1J4RkliMkpIbkwvcm00CjF2STJTZHMwa0RFVE4xUlE2NmRkU09IVzhpRkRRbStVMEdlTG5RRG81TnlzSCtJUE5mVWZOOUdhb24zU2loQmwKYkErZHh3RUNnWUVBNU5qbVRsQkhxVjZ0MklENTl2R1JTUk56NkNDamZ6VmJxOFdHRjhwMjNyQ0VOeGdzaDByaApwd0d6ZzNoeXhwbWdNSXVFaStYWFlZRW5TUlNjRTJ4dGFVNmtXa3lpQnUrcnhXcnd2RE5LQlhjRWw1MU9VN01wCitOMHJ6TDJSK0lLL0owQmJZQWdTUjhlNTI1ZHlLMktxdFJpYmZHcCtMRzNGSjhyMXRPeTNHZnNDZ1lFQTFCRlUKeGh5VFNpaldFMUVRejdQRHd6TkZkSFJuNlNLcTdmOEhyMDRseHRHTEgvcllJakNGNnBUTXdRZHNiMi8rSmQycwpZWEZuYkIvOXpMZFNTb2ZHUlc1ajBXL2tKdGI1UEF6Q1BPcGRCcDZ3WEN3WkNEMGNmVUl1eDdUc3BCV2R5OE5KCmtFT2xJUloweW1UZmtYekFNZU93Yll6ellKeVhYM2hiZ2J4ZXRrRUNnWUVBek51cGx4TmdneXFoUHoxK0JtU0wKSlRxSHVKVjNKc255TFJ0ZUJYQVY1eFZtMWhjS3pYWG4rR09hZWlkWnY1VUloRXh3cy9kbFRnQ2ExVjNndGJhTApYd2lxTWJlR0YrVjNBL3ZPVXZzcTJTZUk4ZHc4b01xeTJQZk1YTFNhdGpiOHZUdHNVTlFJNFQ3V2pzL013Uy9MCkZ1QlhXQkhRcng3NHJiMlBKSTMrL3Y4Q2dZQStTK2tQV1kyYkYydnJ1TUNyZ3k5YXhGRCs2TU10cFZWNUhKWHgKVlkrYlhDcjJkZ1hQNVZreGxBeWlGOEF1N0VOSWRGb1ROZkVmdmpZY1VTNEhYdU5MdWlYd2ZHSVZWc2xZYnBjUQp0ZmdsM2JBSkk1c201R3plRHZjWEMzc0lxS0QySHFRWmtRV05OcitRUlJtMzcyRzJSaUNwemVJZzIxOU1XRnJwClBhREZBUUtCZ0Y4VnBTVUFyeWRPc2REUmRUdGNsNEZpSCtjbVZ0RjhHSkpvSm1FaVhpUkUxTUtheEZiRHVxMisKV2VKZHdRK2wrRDJmbERsQkk0OGllWjBQWHh1SlUvTTh0OUNDSHdMbkhOS2dMeWVFaW5GeE9kU1JUQStYZXdtWgptREpMVjVaTmxmd3JjOFI2dyttNERtcHgzck5zQzhPQURoWFJydG5UcE00TTlIak9LQm0zCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: bdf58ced5f2d481ea9569196e1236cf0a0de8669ac59449e6d4c5508ae5a095c
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 2b2e9759f6b7b7c4ec466b4ce0a8881cc8c204694d803033b246fd49aabe6b03
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: bdf58ced5f2d481ea9569196e1236cf0a0de8669ac59449e6d4c5508ae5a095c
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
