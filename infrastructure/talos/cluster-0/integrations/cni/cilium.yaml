# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: cluster-0
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: cluster-0\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRY0RVbVJwQ3lsbjdGWnpTUXI5Y25tekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpBME1EWXdPRE15V2hjTk1qWXdOakF6TURZdwpPRE15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRENkUmRpRWZCQzJyeitrV0MwRlNGZThzTC94RVV3OHQ5Z2JRTDNOQ0NZZDZsc01wRFkKSUJHaWloaFZ6aTI0Z3lzZkRtajNwb2RLalZsUTZneEdFWXcxY2hSbnRWZmRFRXp4LzFRUEFtbHpwWFFYc3d1aApyQnRWRU9oQ1o4bElRY2JCN2ZzQkNBUUJOdHc0WkJxTkppRW5GaW5yOFNJTzlXeEx4TVM0RHEzZDBvYkpJZjdFCkJNczV1c1N1aldrSGhVcU5OTGtOL0VLUTRna0RvMWcrUWFmMjRvYS83WGtLaCtXMzRUMzUyN09MNTZ4ckk0OWEKbWhZYjJ1ZUllYldQcGc5Y1M4MzRNeGJjcmxJczFyTnNHbTc3SjMvaWFlMVhhRTRaVHBYWWt3QmhWYXREZGVPWgpoSDdEdlY2N1NwR2YyVXA2Sk1XckMvUVkxbmkwYmptUlpsU1JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVQdUFpK08zazlleDQzZDFaM3ZzVjYwOFBTZ1l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDblUyQ2c2dGFna2hQdGZ4Wk1WQzdvcGwyUHNrbnlya2VnMDRaWEpXbno5MU5HRUNrVTd2U002CkozV2pzTnJURFM0V3F5UkUyY05rL3g4WWpRYUVicjdkdmJmNExhc3grTTNKN2kxSjBtTTZKZGRHaHJwaU05cVcKejNnY3h0VngzQm01YVF4Z0FNOFVXdXF2T08yR2RUVE0wY1ZGUzZLanNLL1VTMENTSjFMeFRKeXQ3aGVBUnA5KwpvY2dUc2ZudjFNQ2d5WHpyb1pPakVrT2ZobW5lSTlPRUVZVm5QWVlzcTEvc3JLZjJsN2laL3VoVW5JYWVLRnZvCkw0MERxN2NXYnd3eFZlSlBNbXVyRU41LzFNRkdmaEVhOWw2M0RiMXdxSE9oYjgzVm10Mzk0a3ZOVDgrNERpUFQKZU4zamhER2RMTm5vWWJPVk5FUU10M1Q2K3FoN1hGND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd25VWFloSHdRdHE4L3BGZ3RCVWhYdkxDLzhSRk1QTGZZRzBDOXpRZ21IZXBiREtRCjJDQVJvb29ZVmM0dHVJTXJIdzVvOTZhSFNvMVpVT29NUmhHTU5YSVVaN1ZYM1JCTThmOVVEd0pwYzZWMEY3TUwKb2F3YlZSRG9RbWZKU0VIR3dlMzdBUWdFQVRiY09HUWFqU1loSnhZcDYvRWlEdlZzUzhURXVBNnQzZEtHeVNIKwp4QVRMT2JyRXJvMXBCNFZLalRTNURmeENrT0lKQTZOWVBrR245dUtHdisxNUNvZmx0K0U5K2R1emkrZXNheU9QCldwb1dHOXJuaUhtMWo2WVBYRXZOK0RNVzNLNVNMTmF6YkJwdSt5ZC80bW50VjJoT0dVNlYySk1BWVZXclEzWGoKbVlSK3c3MWV1MHFSbjlsS2VpVEZxd3YwR05aNHRHNDVrV1pVa1FJREFRQUJBb0lCQVFDaWdkb3R3aElJdk9adQoxQzE5c1o3MnkyZjgrUmhkeE1xNnViOWR1YmwzMGFETDVDSTZDK3JRN0JsVU0vN3ZrT2JMaUc1ZWNGUG1FT1JRCmc1Z0lRb2ZxN2xCeEx4S2prd2pLd0hlT0o1VGE2YTF3Vk5mbW4zOGtBd0ltNUxkSTVIZG5BQ3ZnKzhMbEJPVGIKVjRUODZwMlFIYXloR2g0OVpBckI4MG4zQzRWdnR4ZllFalBqS1hRWG44OTcraW9HQXZYZ1NWamZBRytBNTZ6ZQprRWp1L3ZqaGpQYTgvSC8zcXZlWnpNMDRYaHR2NmRROVd1WmlhbzQ0Mk1OMlNoRFhtYmJSM1liL3hvZDRnaVJQCnZJWXJRYzgrRjh2YnR1UTY2SlpWZVQ5cDBZMEloa29mMG1hSlJ1akc0LzV0amRGaHV1RUZ0TXB6RHB5SUEzV2kKNVJuWXc0enhBb0dCQU83Q1JkWnJUZXNsZnF5dVV2Z01yTnJMRUo0MWJsOE55RW5rY25uZ25ZQTlrT0t1WGlDZQoyMFBBdlBMQ1ZRemZRRVE5S3ZtZWFVMDkzVEpIbE9IVzhZYUV3bFRqdjJTSEJjck9FNnFDR1hDaldtNHEzWnkyCjE0UXdVZlFQOWpLYXVWMGFCckIzZHd2QkNtRE1kRWdjaG5KUk9zNURVQ2tKSFUzNTdKTy9ZZ2wxQW9HQkFOQi8KMndNN1crTDNva2UwMzNMNWxDNFpXdjltOWdJaGpMYXoyUUt0bTRTUzhLRzFWNHpLRDNCWWJaOUpMY2IxZU1EVwpxQ0VuclovT3EwNDJCTzI5VWhsZFlwYlF5bThsMXEvbnV1TmZRcWlnM09rRU85dk5RR2F0VXF1SjBLdE8zdVAvCkt3TGNFR0puZFBJR2QvTFQ2MUpsYXRlVVZzV3JUdG1HN3N1dnY1OHRBb0dBVUZzd09BY3JWVTNzUVYvMmFxZVIKY1ozUWZQN01vODgycnEvbFcyR2VnSyszMktNSTZQK3VHakovSlZFRVlPMnVhb2tQc3ExL0VWRVY1anN6UDRNaApETDRYell4Tk9SODhjdEpDeWlzNU5yQ3oyY294aGZIL3ZPeXFXSE1hMEZORXViSHR1R3lzczFjSUVDWWZxTGw1CkFuYVdUUjlZbGtjTUJ0ZHJxUnBMZTVVQ2dZQTFjQitWQTNpNGdsbVFZVlpINUpuSyt1cXN2Um5lVC9UOXVyaXIKREEzbys3UTY3ZnlEZENKaTIvYzB0US9MaDR5c2VCZmRiNHI3ZzMrNmF2UDJidWlFNGI5c0FoVndTVlZ0L2ttVApEdzVKby9rYXErQWZwTXFWeG1TQzNLNmp5WEl0STNCRnFsdDByU2wzQXB0cG5GRWE3QzFuRlhqcjdzMGx5WVNZCnBmSEovUUtCZ0Zha29RTUpOOXBzaHoxVkZTZGJaVmRaVHJ5cW01aXFWN2JxUzV5V3RBNVBLaWtDR0I4c1NuOTEKMFpjZzMvVDJ1N2Rjdml0bXhEWVpINy9xV1FwcS8wOW5SNWRkeGVmWmsySzI2UXozN0NXbGtBUTRtaWlkS2VGOQpwVE8wc2s2R1FtcG9la2M4b0s3bkRGc3BOdjIvbnlpQXdzLzkzenZnZlhSSXFYeUJ1a2xVCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRY0RVbVJwQ3lsbjdGWnpTUXI5Y25tekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpBME1EWXdPRE15V2hjTk1qWXdOakF6TURZdwpPRE15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRENkUmRpRWZCQzJyeitrV0MwRlNGZThzTC94RVV3OHQ5Z2JRTDNOQ0NZZDZsc01wRFkKSUJHaWloaFZ6aTI0Z3lzZkRtajNwb2RLalZsUTZneEdFWXcxY2hSbnRWZmRFRXp4LzFRUEFtbHpwWFFYc3d1aApyQnRWRU9oQ1o4bElRY2JCN2ZzQkNBUUJOdHc0WkJxTkppRW5GaW5yOFNJTzlXeEx4TVM0RHEzZDBvYkpJZjdFCkJNczV1c1N1aldrSGhVcU5OTGtOL0VLUTRna0RvMWcrUWFmMjRvYS83WGtLaCtXMzRUMzUyN09MNTZ4ckk0OWEKbWhZYjJ1ZUllYldQcGc5Y1M4MzRNeGJjcmxJczFyTnNHbTc3SjMvaWFlMVhhRTRaVHBYWWt3QmhWYXREZGVPWgpoSDdEdlY2N1NwR2YyVXA2Sk1XckMvUVkxbmkwYmptUlpsU1JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVQdUFpK08zazlleDQzZDFaM3ZzVjYwOFBTZ1l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDblUyQ2c2dGFna2hQdGZ4Wk1WQzdvcGwyUHNrbnlya2VnMDRaWEpXbno5MU5HRUNrVTd2U002CkozV2pzTnJURFM0V3F5UkUyY05rL3g4WWpRYUVicjdkdmJmNExhc3grTTNKN2kxSjBtTTZKZGRHaHJwaU05cVcKejNnY3h0VngzQm01YVF4Z0FNOFVXdXF2T08yR2RUVE0wY1ZGUzZLanNLL1VTMENTSjFMeFRKeXQ3aGVBUnA5KwpvY2dUc2ZudjFNQ2d5WHpyb1pPakVrT2ZobW5lSTlPRUVZVm5QWVlzcTEvc3JLZjJsN2laL3VoVW5JYWVLRnZvCkw0MERxN2NXYnd3eFZlSlBNbXVyRU41LzFNRkdmaEVhOWw2M0RiMXdxSE9oYjgzVm10Mzk0a3ZOVDgrNERpUFQKZU4zamhER2RMTm5vWWJPVk5FUU10M1Q2K3FoN1hGND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBd25VWFloSHdRdHE4L3BGZ3RCVWhYdkxDLzhSRk1QTGZZRzBDOXpRZ21IZXBiREtRCjJDQVJvb29ZVmM0dHVJTXJIdzVvOTZhSFNvMVpVT29NUmhHTU5YSVVaN1ZYM1JCTThmOVVEd0pwYzZWMEY3TUwKb2F3YlZSRG9RbWZKU0VIR3dlMzdBUWdFQVRiY09HUWFqU1loSnhZcDYvRWlEdlZzUzhURXVBNnQzZEtHeVNIKwp4QVRMT2JyRXJvMXBCNFZLalRTNURmeENrT0lKQTZOWVBrR245dUtHdisxNUNvZmx0K0U5K2R1emkrZXNheU9QCldwb1dHOXJuaUhtMWo2WVBYRXZOK0RNVzNLNVNMTmF6YkJwdSt5ZC80bW50VjJoT0dVNlYySk1BWVZXclEzWGoKbVlSK3c3MWV1MHFSbjlsS2VpVEZxd3YwR05aNHRHNDVrV1pVa1FJREFRQUJBb0lCQVFDaWdkb3R3aElJdk9adQoxQzE5c1o3MnkyZjgrUmhkeE1xNnViOWR1YmwzMGFETDVDSTZDK3JRN0JsVU0vN3ZrT2JMaUc1ZWNGUG1FT1JRCmc1Z0lRb2ZxN2xCeEx4S2prd2pLd0hlT0o1VGE2YTF3Vk5mbW4zOGtBd0ltNUxkSTVIZG5BQ3ZnKzhMbEJPVGIKVjRUODZwMlFIYXloR2g0OVpBckI4MG4zQzRWdnR4ZllFalBqS1hRWG44OTcraW9HQXZYZ1NWamZBRytBNTZ6ZQprRWp1L3ZqaGpQYTgvSC8zcXZlWnpNMDRYaHR2NmRROVd1WmlhbzQ0Mk1OMlNoRFhtYmJSM1liL3hvZDRnaVJQCnZJWXJRYzgrRjh2YnR1UTY2SlpWZVQ5cDBZMEloa29mMG1hSlJ1akc0LzV0amRGaHV1RUZ0TXB6RHB5SUEzV2kKNVJuWXc0enhBb0dCQU83Q1JkWnJUZXNsZnF5dVV2Z01yTnJMRUo0MWJsOE55RW5rY25uZ25ZQTlrT0t1WGlDZQoyMFBBdlBMQ1ZRemZRRVE5S3ZtZWFVMDkzVEpIbE9IVzhZYUV3bFRqdjJTSEJjck9FNnFDR1hDaldtNHEzWnkyCjE0UXdVZlFQOWpLYXVWMGFCckIzZHd2QkNtRE1kRWdjaG5KUk9zNURVQ2tKSFUzNTdKTy9ZZ2wxQW9HQkFOQi8KMndNN1crTDNva2UwMzNMNWxDNFpXdjltOWdJaGpMYXoyUUt0bTRTUzhLRzFWNHpLRDNCWWJaOUpMY2IxZU1EVwpxQ0VuclovT3EwNDJCTzI5VWhsZFlwYlF5bThsMXEvbnV1TmZRcWlnM09rRU85dk5RR2F0VXF1SjBLdE8zdVAvCkt3TGNFR0puZFBJR2QvTFQ2MUpsYXRlVVZzV3JUdG1HN3N1dnY1OHRBb0dBVUZzd09BY3JWVTNzUVYvMmFxZVIKY1ozUWZQN01vODgycnEvbFcyR2VnSyszMktNSTZQK3VHakovSlZFRVlPMnVhb2tQc3ExL0VWRVY1anN6UDRNaApETDRYell4Tk9SODhjdEpDeWlzNU5yQ3oyY294aGZIL3ZPeXFXSE1hMEZORXViSHR1R3lzczFjSUVDWWZxTGw1CkFuYVdUUjlZbGtjTUJ0ZHJxUnBMZTVVQ2dZQTFjQitWQTNpNGdsbVFZVlpINUpuSyt1cXN2Um5lVC9UOXVyaXIKREEzbys3UTY3ZnlEZENKaTIvYzB0US9MaDR5c2VCZmRiNHI3ZzMrNmF2UDJidWlFNGI5c0FoVndTVlZ0L2ttVApEdzVKby9rYXErQWZwTXFWeG1TQzNLNmp5WEl0STNCRnFsdDByU2wzQXB0cG5GRWE3QzFuRlhqcjdzMGx5WVNZCnBmSEovUUtCZ0Zha29RTUpOOXBzaHoxVkZTZGJaVmRaVHJ5cW01aXFWN2JxUzV5V3RBNVBLaWtDR0I4c1NuOTEKMFpjZzMvVDJ1N2Rjdml0bXhEWVpINy9xV1FwcS8wOW5SNWRkeGVmWmsySzI2UXozN0NXbGtBUTRtaWlkS2VGOQpwVE8wc2s2R1FtcG9la2M4b0s3bkRGc3BOdjIvbnlpQXdzLzkzenZnZlhSSXFYeUJ1a2xVCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRY0RVbVJwQ3lsbjdGWnpTUXI5Y25tekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpBME1EWXdPRE15V2hjTk1qWXdOakF6TURZdwpPRE15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRENkUmRpRWZCQzJyeitrV0MwRlNGZThzTC94RVV3OHQ5Z2JRTDNOQ0NZZDZsc01wRFkKSUJHaWloaFZ6aTI0Z3lzZkRtajNwb2RLalZsUTZneEdFWXcxY2hSbnRWZmRFRXp4LzFRUEFtbHpwWFFYc3d1aApyQnRWRU9oQ1o4bElRY2JCN2ZzQkNBUUJOdHc0WkJxTkppRW5GaW5yOFNJTzlXeEx4TVM0RHEzZDBvYkpJZjdFCkJNczV1c1N1aldrSGhVcU5OTGtOL0VLUTRna0RvMWcrUWFmMjRvYS83WGtLaCtXMzRUMzUyN09MNTZ4ckk0OWEKbWhZYjJ1ZUllYldQcGc5Y1M4MzRNeGJjcmxJczFyTnNHbTc3SjMvaWFlMVhhRTRaVHBYWWt3QmhWYXREZGVPWgpoSDdEdlY2N1NwR2YyVXA2Sk1XckMvUVkxbmkwYmptUlpsU1JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVQdUFpK08zazlleDQzZDFaM3ZzVjYwOFBTZ1l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDblUyQ2c2dGFna2hQdGZ4Wk1WQzdvcGwyUHNrbnlya2VnMDRaWEpXbno5MU5HRUNrVTd2U002CkozV2pzTnJURFM0V3F5UkUyY05rL3g4WWpRYUVicjdkdmJmNExhc3grTTNKN2kxSjBtTTZKZGRHaHJwaU05cVcKejNnY3h0VngzQm01YVF4Z0FNOFVXdXF2T08yR2RUVE0wY1ZGUzZLanNLL1VTMENTSjFMeFRKeXQ3aGVBUnA5KwpvY2dUc2ZudjFNQ2d5WHpyb1pPakVrT2ZobW5lSTlPRUVZVm5QWVlzcTEvc3JLZjJsN2laL3VoVW5JYWVLRnZvCkw0MERxN2NXYnd3eFZlSlBNbXVyRU41LzFNRkdmaEVhOWw2M0RiMXdxSE9oYjgzVm10Mzk0a3ZOVDgrNERpUFQKZU4zamhER2RMTm5vWWJPVk5FUU10M1Q2K3FoN1hGND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUlNMVoyaENuMWRhaG5nZ2pwSSt6SEl3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05EQTJNRGd6TTFvWERUSTJNRFl3TXpBMgpNRGd6TTFvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQTFqSjk2R3VoWms2RUVGNkhnVGorZU4vTkRDeHUKUit6ME14Y0szNitjSUNrcnhBUTlBblMrM3BkZE9ZYitsNU5lYys5bWc3TmQveXNYNTAzYzhMVVFScUIzTTdOMQpGVW42Zms0WVA2K1Q3aG1qQkkxQm5zTk1QTWIzbHA4ZmsrY0NpRnVnem0vRGtkK2FjTkEwbXY5NzdpUUJhZ0hqCmNvdGNUSklHcXg1b3k1Q0NZUEZNYitMWitiSlBadUUwaWRndHdkVVpEZWRjTk05UUc4Nkp5Mkk4VHl5dWJNWE0KUkNlcjdlUWpWNEY3UjFRSEVmVG1TWmF4Slo0WXVXQ2xaTEkyUjgyWDRYRjdBT1FSQUVKWWV3VWFVRElvQXBuRgpWWi80VkdFeWtqMG01ZWlqM0JITWxvUzBBZlljOUdXeFU3NVFkRlUrcGcyYWppanpFSzM0WXFnYjl3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUSs0Q0w0N2VUMTdIamQzVm5lK3hYcgpUdzlLQmpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBRTJ5MVJ3a1BaUnNxRFNXd2pzQjFnR0NJa2NnU2xuNDdFTVUzRkgzYVh2eVRMVHoKNFNsN29FckZkNU1wUEdLZVlhaWRSdFpaV292MnZMZDRvTjg3ZnM0WEcxZHpDQVpnN2M3RHZZNmZ5Q3BzQ0lLcwpIaGVLL3JrUFduc3VwdmVBT0x4b081RHE3bkJWNVh3NU15N3ozVnMwcWVma2Z5VUEzb2lSWGFvdC80aEMrTCtLCnlPTDdUNzBiL1h3WVhTZWZiQlRPbVNKV0hKRlRNa1F3czAxME10WWFTN0tJcFZlUDRUK1FCcnBpaHRGWTg4dmgKc3ZhelRpbGFRWk1ZWE1JVS9RRmxVclNWTlRPSjBpZW5NSnBGNVhld3VGRzJ5c05RdUkveUgrY0VzWDE4aks2QQpXUkdETVoxb1lSakFKdytnRnh5ZU5ZRWQvWlhSZ05ZM2NIa29YeVk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb2dJQkFBS0NBUUVBMWpKOTZHdWhaazZFRUY2SGdUaitlTi9OREN4dVIrejBNeGNLMzYrY0lDa3J4QVE5CkFuUyszcGRkT1liK2w1TmVjKzltZzdOZC95c1g1MDNjOExVUVJxQjNNN04xRlVuNmZrNFlQNitUN2htakJJMUIKbnNOTVBNYjNscDhmaytjQ2lGdWd6bS9Ea2QrYWNOQTBtdjk3N2lRQmFnSGpjb3RjVEpJR3F4NW95NUNDWVBGTQpiK0xaK2JKUFp1RTBpZGd0d2RVWkRlZGNOTTlRRzg2SnkySThUeXl1Yk1YTVJDZXI3ZVFqVjRGN1IxUUhFZlRtClNaYXhKWjRZdVdDbFpMSTJSODJYNFhGN0FPUVJBRUpZZXdVYVVESW9BcG5GVlovNFZHRXlrajBtNWVpajNCSE0KbG9TMEFmWWM5R1d4VTc1UWRGVStwZzJhamlqekVLMzRZcWdiOXdJREFRQUJBb0lCQUg2cFNPOEJobVdiRkZraApyUHRyR24rYnlBTGsyeW5KSXZaN0w4RHFkV1pITWt3dFBXNlFYclg5eC9EV3RRSW84UGVabjROTnM4M0tTODVKCnF0YmtHd1hJcWZSMnNFdXdmV0huQ0V2UXBhZHNuWXQ1aEU0L3FudGVKTlo2cmcrbDBVZVU5MWhibXNoTjgyTzIKbXdUMUF2SGxkTGljK1VTb3lDRzNVQjRzVTBmYnpWeVVMbkZZa0w1bEplSlRNdkZDSDQ1dEhzZlZldE04QlNucwpSTnJKQmJZY2xZRW1XVTUwRnF4aTFmWXA5T2QyQURaTzdBb0pnS1o5a2hiTGJWcDQ5R0tVL0hMbmtBeXVKQmx3ClZubDRxZmVVN2dMbFpILzVpY2I4eVczb2VJayt4SlkxMnRYRTAveTZOVjFVK3hCMnA5aGNGV3pSTGppTEJsNzQKdllIR0loRUNnWUVBN3dBYXJJa0xEU2lpSTVPYmtJanUxK0gxUU55KzY4eCt3c0xYY094YXMvektZeTlmZG03SwpCNTE0YTRxMUdYZlppTkF5QWdRV0ZDWVpWTy8rTHhjdlBsejA4TmZOYTRMM004RmF5RWNUWTZpK0VNTlZTVkRkCng5QlBWUHhvYTl6dDBkNkFIMDZQUDhpVE95TEcxT0E2ZEVBVmFaSVl6S211Vm0yakpJbzgwTlVDZ1lFQTVXN0EKemp6YlRPK1J2NFZEa2o2RjVtZTJBa0JTdGkrbEVGQmE1Rmt2SXk0VG9vc2Z5NzI3L2NETkpwazcrUTlkRDE3Ugp0blh6djA3OERFYWxlN2hkVDFQMklrTXRVblduVUVTbUQ2RWtySkowVk5CbWRJN3BUMzVWRG9Rbms4V3lyN2FiCllXV0FoVERTNmxTQlJ5TlpiRFFERXVwTDJTYUtxR2lNSnZGTWY1c0NnWUFTbkJCM3BNZ2VneTUwMUxhRlA1UlIKYlArNnlEVjVpTmZKOUgvd0JBZGdBbXdENHhsczBGMmMwQzhqT0k2M1ovU2hTWXpMU1dRcXQzaTdlMkJ3YkQ2NgpmV1I1S0dTUFhZaEFHR3NvTXhpWVp2Zzl0K2Y1S0huTWFEVDFLaDQ3WDkySXZPbC9Cby95Nkh4R1c0UGQ2WVBECnI0VzdUYXZ1cTd1dWNTVUY0Rm14N1FLQmdFNTVZMWtuVjVzcEZpRDc0L0RSa2RzTS9pUW0vQ04waUhEY0N6cXYKaG4veDhxVldFTG9QVzQyZnRJdlBQY1FpalNJRXZKWThJZkw5Z1JoeDBZaFB0eHE3RFNVSzlTV1BPSHNyLytDNApyV0taZFZETk56NEc0NlpjLzVySGVRSUNUT3ZzK1ppR3J6N2ZSRVVDUW5XaWthT0E1c3hCZDAvKzdzNUxkQ1NkCnhCeWhBb0dBSnY3c1hhQnFXdno4YWFvVkI5MTZBY2NtdWpFMzRXUlVuN2JFd1RsSHc0K0VFallER3dQaW0vbm8KcWFMcVo2Y0lLbnFhbmI4VS9qOVV5c0ltL3lyR3ozbFhjV1FMd052Sk9DTGh2eTA5OTBsVEFYamRkLzBmNW1BcQowMUFqcDdUTDkrdE83V3Y0ZGl1ZlNZWHdEY0VKUTh5cm4zNXZZb3AwOTZhMUwxZjUvQzg9Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRY0RVbVJwQ3lsbjdGWnpTUXI5Y25tekFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TmpBME1EWXdPRE15V2hjTk1qWXdOakF6TURZdwpPRE15V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRRENkUmRpRWZCQzJyeitrV0MwRlNGZThzTC94RVV3OHQ5Z2JRTDNOQ0NZZDZsc01wRFkKSUJHaWloaFZ6aTI0Z3lzZkRtajNwb2RLalZsUTZneEdFWXcxY2hSbnRWZmRFRXp4LzFRUEFtbHpwWFFYc3d1aApyQnRWRU9oQ1o4bElRY2JCN2ZzQkNBUUJOdHc0WkJxTkppRW5GaW5yOFNJTzlXeEx4TVM0RHEzZDBvYkpJZjdFCkJNczV1c1N1aldrSGhVcU5OTGtOL0VLUTRna0RvMWcrUWFmMjRvYS83WGtLaCtXMzRUMzUyN09MNTZ4ckk0OWEKbWhZYjJ1ZUllYldQcGc5Y1M4MzRNeGJjcmxJczFyTnNHbTc3SjMvaWFlMVhhRTRaVHBYWWt3QmhWYXREZGVPWgpoSDdEdlY2N1NwR2YyVXA2Sk1XckMvUVkxbmkwYmptUlpsU1JBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVQdUFpK08zazlleDQzZDFaM3ZzVjYwOFBTZ1l3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFDblUyQ2c2dGFna2hQdGZ4Wk1WQzdvcGwyUHNrbnlya2VnMDRaWEpXbno5MU5HRUNrVTd2U002CkozV2pzTnJURFM0V3F5UkUyY05rL3g4WWpRYUVicjdkdmJmNExhc3grTTNKN2kxSjBtTTZKZGRHaHJwaU05cVcKejNnY3h0VngzQm01YVF4Z0FNOFVXdXF2T08yR2RUVE0wY1ZGUzZLanNLL1VTMENTSjFMeFRKeXQ3aGVBUnA5KwpvY2dUc2ZudjFNQ2d5WHpyb1pPakVrT2ZobW5lSTlPRUVZVm5QWVlzcTEvc3JLZjJsN2laL3VoVW5JYWVLRnZvCkw0MERxN2NXYnd3eFZlSlBNbXVyRU41LzFNRkdmaEVhOWw2M0RiMXdxSE9oYjgzVm10Mzk0a3ZOVDgrNERpUFQKZU4zamhER2RMTm5vWWJPVk5FUU10M1Q2K3FoN1hGND0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lSQUttMlpQWUttSzhic0tudG9JOTBtYzR3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURZd05EQTJNRGd6TWxvWERUSTJNRFl3TXpBMgpNRGd6TWxvd0xERXFNQ2dHQTFVRUF3d2hLaTVqYkhWemRHVnlMVEF1YUhWaVlteGxMV2R5Y0dNdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXVGbHpZNjd1TXRmb3VHQjMKWmdNSVNlQ1pyMVdOWUtoRUx3ajJFaTByUitHT2xDWUFQUENub2k1OCtGU09rcUg4YnJTZmwybmg1bTZQbHpvcQpFaGVPZ0h2bUhITlN4ZCsvY2w4QVdHU2xBTzl5Zy9UVXdtZkFWYzJVSlV4L1NRNE5HUUUySzQrV0VLSHcvZEc5Ck9FNjU5Uk1nck1QbFNMblpQTzZFcEZxaERGdGw0b0RFOWJBekpYV2hFMC9td1g5Um42eStSOUVOVEVSL0JLOW8KNThjZkZmQndDcGQ5eGFiYVNtMDAyMi9NL2NqTm9zNi9pNkRJbEtoRmhXU1lLd3o2QUFuOW5VTXR1d3pIQVlZNgpXeWxVQ1NMTjNKVVlBNEtCR0tWUjRXS0RlMWtSbmFRdTdNMXVFKy8wanJpMlBsMEx4aHJwZ2dYekFzUnMvbkhRCnpYc0Jjd0lEQVFBQm80R1BNSUdNTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUSs0Q0w0N2VUMQo3SGpkM1ZuZSt4WHJUdzlLQmpBc0JnTlZIUkVFSlRBamdpRXFMbU5zZFhOMFpYSXRNQzVvZFdKaWJHVXRaM0p3Cll5NWphV3hwZFcwdWFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBSWJqY2tmckUwYkRVZEZWSTlNNCs5NUoKZDEzRXE0NTVGSHhLVVlpOTllNFg1bHdzdXg0aWZ6UHhrbmsrcFlnTVRZKzFYdlNqYWJTN2NER0EvMlJWT2xETgp3aHBlZElkVjVmdVpGbm5rRG1pcmt3R0xUazBydjFmSmRLalN0bmJBcnpIandBZm4wcHhJQWJyMXg4OHcvSk5xCjVsKzJTL0k2cDRmU2ZpbnhoZXBpUjdnOUVGNEs2UXlja3RpeCt4SXJNYlBPY1JtWDhPWFh6TmZ3eGdnTS9YNTQKKzhJTEJiL3loVzlyK0d1MjBmOElvdDBwS0lYdlN1L1U1ajltRCtDdk51VUVWaGdRWEllc2p1SmhYUFZ6blNFdApUWERHNU4wYjlQMmJHVVJNV0x6RUxwaThiTmQvNlZkaWNTZGpXQzlqSkZWSFNTR2hiYkZ4Y0lidDdKM2dVSWM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBdUZselk2N3VNdGZvdUdCM1pnTUlTZUNacjFXTllLaEVMd2oyRWkwclIrR09sQ1lBClBQQ25vaTU4K0ZTT2txSDhiclNmbDJuaDVtNlBsem9xRWhlT2dIdm1ISE5TeGQrL2NsOEFXR1NsQU85eWcvVFUKd21mQVZjMlVKVXgvU1E0TkdRRTJLNCtXRUtIdy9kRzlPRTY1OVJNZ3JNUGxTTG5aUE82RXBGcWhERnRsNG9ERQo5YkF6SlhXaEUwL213WDlSbjZ5K1I5RU5URVIvQks5bzU4Y2ZGZkJ3Q3BkOXhhYmFTbTAwMjIvTS9jak5vczYvCmk2RElsS2hGaFdTWUt3ejZBQW45blVNdHV3ekhBWVk2V3lsVUNTTE4zSlVZQTRLQkdLVlI0V0tEZTFrUm5hUXUKN00xdUUrLzBqcmkyUGwwTHhocnBnZ1h6QXNScy9uSFF6WHNCY3dJREFRQUJBb0lCQURQZ0tCSmpCWENWUlUydApCNnhUS2gvdjdnOWkyYmZiWWVTQ2R3eENYYTJLa1Y2ckd1SUxMb0Q2NS92UmY1VlB0QU5MSEtXMUMvYVdJaDRDCkpoaVZQR3AzY3hlS2RENXVhaWM3Q0pQWExuK0c0Z2l6K3JNQ0V5T1NDQ0ErMklxc1E0OUh3Z0NjRlRSMC9hWFAKUVpuNHZXZHpqSHhSVzlJTlNrNVZLRW8vbnBZbEh5RnRNd0RWM00rS1VKT2hqTVVJalZ4Qk1MU3lIeXNKTFRWdgo1djFITnhUUzl5NEhGdzFkR0RsOXFHUXNqajNkK0JQOU84RWVSaHhOMWd1R1JBRHJIcUd2RGdtRThMUzlsay9WCkt0cnZEL3hNSnFma1lJRXhuV3g2eEJCUlNSaWs1N1d3SUFqVlN0QnF4bm9RdXJLMFZZTk9STVJsZjZmK1FQcG0KZ28rRFRiRUNnWUVBdzJ0eEw1Q3J4UzRvdTQ4eGI0QVJiZmVJVlRDSUhlWVk0Kys5Rkc1QjgvRlJvb0RiTXMwUgpRbmVFZEk1dk9DVGMrcmtUcjJDWHBVTGNrSTVhL0hITnlLUWVEL21meXVMUjZoVUJSaCtyOVVUUnpMdDhDSnd0CkVWd0UvTW1WMUtkWjBxekMxOS8zQnN5Wmh1SnphekpsaElpN1RReVVLODY5TC8vWHlYOTRVWlVDZ1lFQThYOTMKNk82Z0JFZ2FIZTVCRFhpMjJCL0RuY2xDbTIyM2plTFJ5VUdNTnh1MU5SUkVpWXE1cVp5VVJWZVJGS0lkV25OLwp0Y1NRS0tSVnhCckRpckJLcWtFcHBnOFlHUEhaMFZPL2xFK1FOVk4xaHVPelA3QmdNeWhDZktQSnhxWkZsM2ZQCkwrUXp4anN1Nk45SUpHR1Nvck82bmNnNnF4MUt0MGU4VzVCeTFPY0NnWUVBb0VteGRoMUk5eHdNWndObHZob2kKc2JzMlJRSGdzLzEyN3dkR1pNcW5LQ3NKRmF4eG52S2JOSlNKdlh6Uzl3OHRmaTF1V3d4MGRpWW9laDE1dmRTdQp3T0wwa1kvanBHdDFXSFpRTEM5d1FXWm9XM0J3cFROTXVBOXRPOWN4SVZML0Z4R0RZOFFkZjZNMFRuSFJ6OXh2CmJrMGtyR2NqNWViV1FOZXVMR1YwMEIwQ2dZQjZpYmxvWWh5ano0b2hBZEhVYWhvdEZBRUlRU1VoQk0wTW03amoKSy9WZnlSbHJjM3RMWnk3S0YzOU1xQ0FmbmhyUzJLUkdzUlNNNnNYeUdicDYxdlVyNnFDZGVDODhDUXdESVVHbQptYkNNdm1wMkpYZkFxMWhFM1ByUGo3UkVyZjNGMjY4dmw5V0ZrbVk5RjM3ZHB2em12ZGZGVStJaERWM3FIZVkvCmQ4NHNwUUtCZ0JIdk8xQmFqd3o5cFFvVnE2cCtZaHdmRlJTeUZhcHdkZEtUemY1a1pZa0gyVWVxcXVnVkhidzIKL0h2VStKSll2L1FXM3d5Umd1VjZuNUZ1dWdrM1RzUjBIVkRuRlNkZUFqckNvVDRzSnhVVHFiSHhMWGE3NjVlZgo4YTl0Sm16QVlwRU1saXZsWWxMVnBKOFRUL0NYR0ZNbzRXQk1aMEg1dFA2akFTaHV4cGFBCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: a5c21ec6fb86efcc5b013c71c5ff1afe28335a058efe2244778e83dd7fb28dd4
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.3@sha256:fa7003cbfdf8358cb71786afebc711b26e5e44a2ed99bd4944930bba915b8910
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 5d81f166d35c295bfcc150b5cb4e6c391c44f887cfe07c06a8ec28d81a7f9c25
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.3@sha256:19e4aae5ff72cd9fbcb7d2d16a1570533320a478acc015fc91a4d41a177cadf6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=false --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
