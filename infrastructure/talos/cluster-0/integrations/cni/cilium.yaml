# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: random
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: snat
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: cluster-0
  cni-uninstall: "true"
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  set-cilium-is-up-condition: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-min-ttl: "3600"
  tofqdns-proxy-response-max-delay: 100ms
  tunnel: disabled
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: cluster-0\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max: \nsort-buffer-drain-timeout:
    \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUt0ZURqRmNHbk9MZG00TW8xU3BNbVV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVek1EQTROVEV4TVZvWERUSTJNRFV5T1RBNApOVEV4TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwMFR3SmJxNXgycDlFWm5rMWlsZFFLWGFqZWEweXlBbjZ2YlpKeTBJL21UcTFSbkwKT2RGYmpMOTk5YUczMGxLQjRJZ3pYaSs4OVd5UzdJbFlKakhGeFlZSHVadlQ0RUw1d1diUkkyUXBOYVRxNVR4MApudWZWQTZaY1RETVIxRmh3MjA5WXBydHdvV2ZRTjhuT0xoYjJsSW56akdmbmd6by8xYWNhMmN6VTVSUjQ5djNKCkovWVN3Z2w5UENqZnFMa3BJbEFKcGU2dzhHeXZ1Z2hoaGRlRWtVc3MzYytGbktWdUpWdUZuSGdGVjcxdWJwT0sKdGFVZmZYYnJTdGlBNjVWSWM4M2daNlVoazVmZmUwclpNWEYyTnJvcExqZEFIUUUrQ2lBOUJqdVdiVndad1NMUwp4ckJOZXFWdUQrMmdqZEIvalhrZFhsLzdOREVybWgraFJJUWhUd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRHZScUErQkNqWk85ZHZQZkFDanB1eXlnakNLTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1I0SzVnK2k1VDRyNHdrOWtyYVBNRTlmaFlka0lUMW5CVHc4SC9hWHJ6WVJmcG1FL09oTHFWCldoUWpJaGk2VldHanlJUTJuNHJ0V2pSYmhWVGlXZ0o1YXNkTzUxRDdjcDJGbjV0bmNBZU9PRE5MOGZ5cmxtUk0KeW1SdmloZWJsYllUVjdDUDhsM0ljcHZwR0JtK09hSStVVm5rR0syR2Z1VmZuaXFXQ2dla3FCUVdhQUNEbmxzNQpoTmxlR0dsWG83ZWE1OUM1bFgzTTVjVVduRmNKYjNtY1pYdVA1VlJxRjNLNmdFbUpIZGVuaENhdDZueUpGSCtVClJnWXg4ZEg4YjQ0NmRJSm5uMzRKSDc3Q0RET0RUcnJ0dHNERFRoekc2ZCszdmF3Q1daTFZUMENSdXBPQldsTXIKbDlWNWdvZnNIRkNOQnpsRGdzc3pxalN0ZHpPdnhNbjQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMDBUd0picTV4MnA5RVpuazFpbGRRS1hhamVhMHl5QW42dmJaSnkwSS9tVHExUm5MCk9kRmJqTDk5OWFHMzBsS0I0SWd6WGkrODlXeVM3SWxZSmpIRnhZWUh1WnZUNEVMNXdXYlJJMlFwTmFUcTVUeDAKbnVmVkE2WmNURE1SMUZodzIwOVlwcnR3b1dmUU44bk9MaGIybEluempHZm5nem8vMWFjYTJjelU1UlI0OXYzSgpKL1lTd2dsOVBDamZxTGtwSWxBSnBlNnc4R3l2dWdoaGhkZUVrVXNzM2MrRm5LVnVKVnVGbkhnRlY3MXVicE9LCnRhVWZmWGJyU3RpQTY1VkljODNnWjZVaGs1ZmZlMHJaTVhGMk5yb3BMamRBSFFFK0NpQTlCanVXYlZ3WndTTFMKeHJCTmVxVnVEKzJnamRCL2pYa2RYbC83TkRFcm1oK2hSSVFoVHdJREFRQUJBb0lCQVFDd2QzT3p3QTB2Y1ZZNApYbmdUSG9maTJPWCtBd2RlWjJTUVVWRys5RkgvMDZHSEVEMTg5TTlvZUFhcEprUlpyRXNKbGhwNkFKdnZ6NW5GCmMwOHEwQVltMzdZU0pnUEszWWFxTWN4Y3FHdjNmK0lvU2VBTFh3L0JOYk1BZnVQVW4yN2M4S0RXMjlmUEtkeDAKek42b0Jzdzk5Q0IzVmM2K0FPaVMrRHBvVkR3N2Z1SThmeWtkRFZVRnViZUNXZnFhTktKVy9xRHhRaG1zR3dCRApxUmFYK1FsMGN4U2JRM0ZJaFA4NnM5aWpMclhMcjlkZXE0R000d1BIaUVUNjNQSTZSVDlmOVBpbmE5dk1iSmM3Cms3LzJ0TnROUjF0SDlyeU1KYTJmMlFkRklFVWNtMm1sWUVobzE3SXFUSmR2eEVUM3RFb1RqSitXSnVGZXA5Z0wKeC9QbDRyZ1pBb0dCQVBQamxDQmRyNFRUSkRrclZtb3g3aUZqMUVGMmo1ckM1ZDJ0d2Y2ZVFBbkxLa1hLRXlTQQpSTnM4Njh6cW5XRWpqVHZ5N21qQklXSHVwdGtvSzJjVHhWWlVrWGx1R0FlZDNoM3pCK3FhWjFmam1EUll1UVh1ClpLUlA5UDViZ3VpZXlUbDhrSXBRNFc0cXBwd01JZnYyb3V0QUZvQ2xpQjlQVkd1VUFmSFZIT0Z0QW9HQkFOM0MKcnhnYkFVN2lLR2JPdjlCSEJvaElBZXVXVWpuMUVXWkYranRmazFIekxPY0hXaUdtWm5CL3lkc2xtaWdGT2xYeQptN0NLdHNjRUdLQVo5WnNrK1RNUFZFNVdPVzFlcTYrUWFhekJmVlNSVHloUDV2T3lpQzhFL3VIZnFyOFBNbCsyCjlMZHBRcWVkVlRzRlUzclJ6cFhRUmo1Vi8wQithcG5rbGNERWJOUXJBb0dCQUk4bmtoYTladjBNQWtNY1VRamMKYmU1amJuOU9YRlIyK2YzNHM5b0VnWW8rR240RWN1QUYrbVRGaVpNcVUxNWxRODFnZHRnK0pKNGJPd3hVSzhYQgpNUi9QVytSdTN1UDVvaHJxUUVkUWdrQndjekttc1ZQdDdsMFVJYlg3ZVFlWnpIdFZ4bkdwcitpK1dEVllXY3BQCnBxbDNZTDM2YThBVkRIUm8yQXRmRUNpeEFvR0FJd0U5TkZmbTcvWEJIT0ZiNDl1aVMxYmFmcjZld2lsT0VzL08KL1JwTUhlNTkwd1lWRXlTNkhOMy9GZ21zZU03Q2M1aTFQTHZZdURlTVQ1RnBkSkQwaVR2Tk9nUmdVa1JVWTRVdgpPU2JkeXNDWk55ck5zUUFvZ1F1UDFFWERKUitYK3dYZFFTcHJiQnZvdlVWTTlTRXpNL0RKZGNPTFpEblFSL1NPCk12eU9sVHNDZ1lFQW9jTFgycCtocVVpQkdOZHozYjFrOEdpc2orNkdQbWxJZ3pCUE5BamNYWDdhVGFWeG9laEYKYUJSckJpRGxZZS90R2RZZ1hzbGZHQlZqWnlLZkYvWDZ2cHRyRXZBQ29wVFlzNVVTWDBUWEYvdGdOZkZLZkdjawpQenAvMXRoSjlKM2p0bGpZemRlZ2FHNDV5Qk14ZnNvQTlVUzY2b1VQRlc0Um1ueGk3NXFMdmYwPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUt0ZURqRmNHbk9MZG00TW8xU3BNbVV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVek1EQTROVEV4TVZvWERUSTJNRFV5T1RBNApOVEV4TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwMFR3SmJxNXgycDlFWm5rMWlsZFFLWGFqZWEweXlBbjZ2YlpKeTBJL21UcTFSbkwKT2RGYmpMOTk5YUczMGxLQjRJZ3pYaSs4OVd5UzdJbFlKakhGeFlZSHVadlQ0RUw1d1diUkkyUXBOYVRxNVR4MApudWZWQTZaY1RETVIxRmh3MjA5WXBydHdvV2ZRTjhuT0xoYjJsSW56akdmbmd6by8xYWNhMmN6VTVSUjQ5djNKCkovWVN3Z2w5UENqZnFMa3BJbEFKcGU2dzhHeXZ1Z2hoaGRlRWtVc3MzYytGbktWdUpWdUZuSGdGVjcxdWJwT0sKdGFVZmZYYnJTdGlBNjVWSWM4M2daNlVoazVmZmUwclpNWEYyTnJvcExqZEFIUUUrQ2lBOUJqdVdiVndad1NMUwp4ckJOZXFWdUQrMmdqZEIvalhrZFhsLzdOREVybWgraFJJUWhUd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRHZScUErQkNqWk85ZHZQZkFDanB1eXlnakNLTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1I0SzVnK2k1VDRyNHdrOWtyYVBNRTlmaFlka0lUMW5CVHc4SC9hWHJ6WVJmcG1FL09oTHFWCldoUWpJaGk2VldHanlJUTJuNHJ0V2pSYmhWVGlXZ0o1YXNkTzUxRDdjcDJGbjV0bmNBZU9PRE5MOGZ5cmxtUk0KeW1SdmloZWJsYllUVjdDUDhsM0ljcHZwR0JtK09hSStVVm5rR0syR2Z1VmZuaXFXQ2dla3FCUVdhQUNEbmxzNQpoTmxlR0dsWG83ZWE1OUM1bFgzTTVjVVduRmNKYjNtY1pYdVA1VlJxRjNLNmdFbUpIZGVuaENhdDZueUpGSCtVClJnWXg4ZEg4YjQ0NmRJSm5uMzRKSDc3Q0RET0RUcnJ0dHNERFRoekc2ZCszdmF3Q1daTFZUMENSdXBPQldsTXIKbDlWNWdvZnNIRkNOQnpsRGdzc3pxalN0ZHpPdnhNbjQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcFFJQkFBS0NBUUVBMDBUd0picTV4MnA5RVpuazFpbGRRS1hhamVhMHl5QW42dmJaSnkwSS9tVHExUm5MCk9kRmJqTDk5OWFHMzBsS0I0SWd6WGkrODlXeVM3SWxZSmpIRnhZWUh1WnZUNEVMNXdXYlJJMlFwTmFUcTVUeDAKbnVmVkE2WmNURE1SMUZodzIwOVlwcnR3b1dmUU44bk9MaGIybEluempHZm5nem8vMWFjYTJjelU1UlI0OXYzSgpKL1lTd2dsOVBDamZxTGtwSWxBSnBlNnc4R3l2dWdoaGhkZUVrVXNzM2MrRm5LVnVKVnVGbkhnRlY3MXVicE9LCnRhVWZmWGJyU3RpQTY1VkljODNnWjZVaGs1ZmZlMHJaTVhGMk5yb3BMamRBSFFFK0NpQTlCanVXYlZ3WndTTFMKeHJCTmVxVnVEKzJnamRCL2pYa2RYbC83TkRFcm1oK2hSSVFoVHdJREFRQUJBb0lCQVFDd2QzT3p3QTB2Y1ZZNApYbmdUSG9maTJPWCtBd2RlWjJTUVVWRys5RkgvMDZHSEVEMTg5TTlvZUFhcEprUlpyRXNKbGhwNkFKdnZ6NW5GCmMwOHEwQVltMzdZU0pnUEszWWFxTWN4Y3FHdjNmK0lvU2VBTFh3L0JOYk1BZnVQVW4yN2M4S0RXMjlmUEtkeDAKek42b0Jzdzk5Q0IzVmM2K0FPaVMrRHBvVkR3N2Z1SThmeWtkRFZVRnViZUNXZnFhTktKVy9xRHhRaG1zR3dCRApxUmFYK1FsMGN4U2JRM0ZJaFA4NnM5aWpMclhMcjlkZXE0R000d1BIaUVUNjNQSTZSVDlmOVBpbmE5dk1iSmM3Cms3LzJ0TnROUjF0SDlyeU1KYTJmMlFkRklFVWNtMm1sWUVobzE3SXFUSmR2eEVUM3RFb1RqSitXSnVGZXA5Z0wKeC9QbDRyZ1pBb0dCQVBQamxDQmRyNFRUSkRrclZtb3g3aUZqMUVGMmo1ckM1ZDJ0d2Y2ZVFBbkxLa1hLRXlTQQpSTnM4Njh6cW5XRWpqVHZ5N21qQklXSHVwdGtvSzJjVHhWWlVrWGx1R0FlZDNoM3pCK3FhWjFmam1EUll1UVh1ClpLUlA5UDViZ3VpZXlUbDhrSXBRNFc0cXBwd01JZnYyb3V0QUZvQ2xpQjlQVkd1VUFmSFZIT0Z0QW9HQkFOM0MKcnhnYkFVN2lLR2JPdjlCSEJvaElBZXVXVWpuMUVXWkYranRmazFIekxPY0hXaUdtWm5CL3lkc2xtaWdGT2xYeQptN0NLdHNjRUdLQVo5WnNrK1RNUFZFNVdPVzFlcTYrUWFhekJmVlNSVHloUDV2T3lpQzhFL3VIZnFyOFBNbCsyCjlMZHBRcWVkVlRzRlUzclJ6cFhRUmo1Vi8wQithcG5rbGNERWJOUXJBb0dCQUk4bmtoYTladjBNQWtNY1VRamMKYmU1amJuOU9YRlIyK2YzNHM5b0VnWW8rR240RWN1QUYrbVRGaVpNcVUxNWxRODFnZHRnK0pKNGJPd3hVSzhYQgpNUi9QVytSdTN1UDVvaHJxUUVkUWdrQndjekttc1ZQdDdsMFVJYlg3ZVFlWnpIdFZ4bkdwcitpK1dEVllXY3BQCnBxbDNZTDM2YThBVkRIUm8yQXRmRUNpeEFvR0FJd0U5TkZmbTcvWEJIT0ZiNDl1aVMxYmFmcjZld2lsT0VzL08KL1JwTUhlNTkwd1lWRXlTNkhOMy9GZ21zZU03Q2M1aTFQTHZZdURlTVQ1RnBkSkQwaVR2Tk9nUmdVa1JVWTRVdgpPU2JkeXNDWk55ck5zUUFvZ1F1UDFFWERKUitYK3dYZFFTcHJiQnZvdlVWTTlTRXpNL0RKZGNPTFpEblFSL1NPCk12eU9sVHNDZ1lFQW9jTFgycCtocVVpQkdOZHozYjFrOEdpc2orNkdQbWxJZ3pCUE5BamNYWDdhVGFWeG9laEYKYUJSckJpRGxZZS90R2RZZ1hzbGZHQlZqWnlLZkYvWDZ2cHRyRXZBQ29wVFlzNVVTWDBUWEYvdGdOZkZLZkdjawpQenAvMXRoSjlKM2p0bGpZemRlZ2FHNDV5Qk14ZnNvQTlVUzY2b1VQRlc0Um1ueGk3NXFMdmYwPQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUt0ZURqRmNHbk9MZG00TW8xU3BNbVV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVek1EQTROVEV4TVZvWERUSTJNRFV5T1RBNApOVEV4TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwMFR3SmJxNXgycDlFWm5rMWlsZFFLWGFqZWEweXlBbjZ2YlpKeTBJL21UcTFSbkwKT2RGYmpMOTk5YUczMGxLQjRJZ3pYaSs4OVd5UzdJbFlKakhGeFlZSHVadlQ0RUw1d1diUkkyUXBOYVRxNVR4MApudWZWQTZaY1RETVIxRmh3MjA5WXBydHdvV2ZRTjhuT0xoYjJsSW56akdmbmd6by8xYWNhMmN6VTVSUjQ5djNKCkovWVN3Z2w5UENqZnFMa3BJbEFKcGU2dzhHeXZ1Z2hoaGRlRWtVc3MzYytGbktWdUpWdUZuSGdGVjcxdWJwT0sKdGFVZmZYYnJTdGlBNjVWSWM4M2daNlVoazVmZmUwclpNWEYyTnJvcExqZEFIUUUrQ2lBOUJqdVdiVndad1NMUwp4ckJOZXFWdUQrMmdqZEIvalhrZFhsLzdOREVybWgraFJJUWhUd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRHZScUErQkNqWk85ZHZQZkFDanB1eXlnakNLTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1I0SzVnK2k1VDRyNHdrOWtyYVBNRTlmaFlka0lUMW5CVHc4SC9hWHJ6WVJmcG1FL09oTHFWCldoUWpJaGk2VldHanlJUTJuNHJ0V2pSYmhWVGlXZ0o1YXNkTzUxRDdjcDJGbjV0bmNBZU9PRE5MOGZ5cmxtUk0KeW1SdmloZWJsYllUVjdDUDhsM0ljcHZwR0JtK09hSStVVm5rR0syR2Z1VmZuaXFXQ2dla3FCUVdhQUNEbmxzNQpoTmxlR0dsWG83ZWE1OUM1bFgzTTVjVVduRmNKYjNtY1pYdVA1VlJxRjNLNmdFbUpIZGVuaENhdDZueUpGSCtVClJnWXg4ZEg4YjQ0NmRJSm5uMzRKSDc3Q0RET0RUcnJ0dHNERFRoekc2ZCszdmF3Q1daTFZUMENSdXBPQldsTXIKbDlWNWdvZnNIRkNOQnpsRGdzc3pxalN0ZHpPdnhNbjQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQUp2ZnlnWm52YmFsMnlXcmZkS09hQVV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVek1EQTROVEV4TVZvWERUSTJNRFV5T1RBNApOVEV4TVZvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXdlbThwRXdoSU11eExqZTNvRXYrTnE5UVl5VUkKUFVHVVUrckRIRXZWaFM1S3dwakVEZ3FwdGRONzJJV0V2RStRNmpRQm5zTk53Yy94UnhDN1JLajFKYUcwOWI1NwplWVczWG1uVGpkamZXTXhobTh3LzNIVm1tUE5rTVhjVVNNTEZPc1BkMGQ2bS9DeGM3ZDJUQ25sM0NTSmROWEo4Clk0NFdya3ZEMEkwRnI2aXhMbUMvVkpyNitEMisxM08rTzBnOGhiMi9zRm92azgzSkJpYzNsaWxmdmRESWNIS3QKdkxOVDFlMmlXd21xS293SzdvSmFEbEhnQTZOYk50OUl3L1U1b2JwdEFLSTNNRmJKQUQveVBZZ25aSWpYRXl5bwpGTEhjWUhsRVVoN1NwTkpTYWhwVEtnNzIra3cxTHJCQXllaXRkSXhmc1NSTWdwYm5mNHR6MUdoOGhRSURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUTcwYWdQZ1FvMlR2WGJ6M3dBbzZicwpzb0l3aWpBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBSHBPZUxGWDJWTnhsTnpVK3UxSWpCMFAzdm9EdDJCM0R5T0VLT2t5N2ZqN0xnVkoKajE4dGp2MHlTRFNyR214N1c3TDJWVjFERnl2cmpHMGwxcjQxQXN6RzQ2Ui9kdW5yTGJUanVIdnVISVdhNEQ2SgpwU2NUZXNEZWJWVWU4SCszNlJJMVlYUUdtT2ozbElvK2dkOTl3VGlEVGJta1FORGN3S1hkNnhmY0liWmRMR29lCmF4eEIrMk9yZTFWRDdobkVmSmtGZDVFQmUwS2dTQTJsaTFUTzhRMnlWcDVBT1M5MnpRcS96UGoyRHpmWitWQmsKM2lyWHhuM0tuT1NtcjMrcjJNMmUyU1c5anZ0WmN5Z2NNQVhKZ0JmdjdBVllvSjAzRVN1cWN3K0ROZWNpa0s0VAo5R2pIUVBFYmZlVmxWb2VtaFFKSzhPamVvUnFVZ1VKZGJVU0RPZHM9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBd2VtOHBFd2hJTXV4TGplM29FditOcTlRWXlVSVBVR1VVK3JESEV2VmhTNUt3cGpFCkRncXB0ZE43MklXRXZFK1E2alFCbnNOTndjL3hSeEM3UktqMUphRzA5YjU3ZVlXM1htblRqZGpmV014aG04dy8KM0hWbW1QTmtNWGNVU01MRk9zUGQwZDZtL0N4YzdkMlRDbmwzQ1NKZE5YSjhZNDRXcmt2RDBJMEZyNml4TG1DLwpWSnI2K0QyKzEzTytPMGc4aGIyL3NGb3ZrODNKQmljM2xpbGZ2ZERJY0hLdHZMTlQxZTJpV3dtcUtvd0s3b0phCkRsSGdBNk5iTnQ5SXcvVTVvYnB0QUtJM01GYkpBRC95UFlnblpJalhFeXlvRkxIY1lIbEVVaDdTcE5KU2FocFQKS2c3MitrdzFMckJBeWVpdGRJeGZzU1JNZ3BibmY0dHoxR2g4aFFJREFRQUJBb0lCQVFDOG5lR2JJbDM2NjRiTgpnTzdCSWdvRklTUWRQQkUybkVwdUVlVjA2YUtvWiszYU9RUkM4RVpCa1pOZWVna3hybWMwR0NBWFVMdWFzT3h0CkJxNVJTOU1ncHBsQmkrWEl2N01zUjkyNmxPQXpIS0k1REVSMTZWQkJxRVdtQThFY1FTL2RTRlhFWlVHaCtuanQKK2wramlhQ3FwdDFwTnBJZHVFRUJpcnJPYWMzRkhLamVsK2NDYzdiYjZ4Vm9BYUNhTW5jd1pXNGpWYVE4enFyOQpka1BhVFhOVGc1NWJGK1FKamVFVG16N3JycXNWVWNERnk3RENjVTdBV0dDMFpTYlZVNlJVckNiWEE4am45L21PCmdYMzRrUUFYa2xMYlhveVd5NzdnTi81VFFXV3JVbEEvUDFLRWl2NmxuSzBuRlFCaEQ4VU9PZXVjT05ONnJmaUIKM0ltOGlvd2xBb0dCQU1MbE1KMlF2RnNrbzBxNzlnTEZZTi9UZElJYlFIYXh1L1huOHpQRjNqWDBOQU5MUjRpagp2RlQvN25haFBLTVdRR1ZRYUlSdjEybnR6dlhFTGt2U1JpL1pLNjBNYlRiSEFwNE1lalFYWU8xK21UWjJ1dDB0CmdOUDB5VDV4bWF0Wk9PZ3dUZzZpa2NoYVdNZ3cvdGk0Vk1Kd1psdjE0dzB3OXdTTVlSeXhYQjIvQW9HQkFQNjEKdGIzZFlqTC9jZU5NYjc0V2NDYys1VDAxdTN1K1hHQk92djIwQms3N2svLzhxTThrMmlhaG5NV081WjBnNU5vcQp5SCtxcjdUOHdRZ1NZUk5ETEFhU3o2d2prVmpUY05PMGxpSDFtTzdhOFdOOW9BTHZhaW4vWGk5dHBLTmxIODdWClQzYVlnSkFQUHR4amFSVXdVNmJKV0JqaTh6WkkvUllSa0wwZ3RiNjdBb0dBUVR2VmVlZm9JOW12am1RN2c5SHQKQ3Y0TUVVQnQ0MHk2VFNUR0VwNDRNbmI2c2QrUW9mdXNIZ2RNR2dqOTh0aVAxVm1Fb2srTkdyZXVmalNjQ21UbgplVHlIa2ZTRzJiN2k4V1BidzNQUHphNkNPZWlqdzBSbnlvbzBrZUlVUFhZdnhnZmxHS0R4aXM0eXlVOGMvZzAwCjBhQXRvcm82dFQrZWJyZE9DZnlUaUtFQ2dZQWJWWEs0ZWw2RWJJZFRSaXVqc1pLOWszRlVYVVRPWmNKU0Q0Rk4KaHBrNnRxTE9VTlhvek9LZ1RLMmZRZE9BUmp4bzhUaHRBdXN5T0FHYkZTWFh4RmlnSi9jaldQbkxGMzIvS2wwRwpMZTRJaS9SbG9lQ2ZFQVJMbDMwTEIvQW9ITDBLSERnWDJRdks2ZWZzRExzRkxCZCtDWk5yc0VjN1p4L0owMzY5CjNSbkQ2d0tCZ1FDRFNudUc1OVlXWmVDUUpmNzg1dkFnRUpSU0l5RVF1TFYxWHMxbEhJNFErY3lGV0JwYWFGWFEKckljdGxZQWg3YlZBTWpvYTBhSHlSeTVvdmpMTHNkL29EdE5lK0QwYTZldU5tMXN1NHY3Y0txOWl5eVNyU3BqcwpLdVhRbkdET2dQazVMUE42YzJpd2dOaVNwQU9UTktOdnZFdXI2KzlXN0RaQmo4V2ZXTTVGWXc9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURGRENDQWZ5Z0F3SUJBZ0lSQUt0ZURqRmNHbk9MZG00TW8xU3BNbVV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVek1EQTROVEV4TVZvWERUSTJNRFV5T1RBNApOVEV4TVZvd0ZERVNNQkFHQTFVRUF4TUpRMmxzYVhWdElFTkJNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DCkFROEFNSUlCQ2dLQ0FRRUEwMFR3SmJxNXgycDlFWm5rMWlsZFFLWGFqZWEweXlBbjZ2YlpKeTBJL21UcTFSbkwKT2RGYmpMOTk5YUczMGxLQjRJZ3pYaSs4OVd5UzdJbFlKakhGeFlZSHVadlQ0RUw1d1diUkkyUXBOYVRxNVR4MApudWZWQTZaY1RETVIxRmh3MjA5WXBydHdvV2ZRTjhuT0xoYjJsSW56akdmbmd6by8xYWNhMmN6VTVSUjQ5djNKCkovWVN3Z2w5UENqZnFMa3BJbEFKcGU2dzhHeXZ1Z2hoaGRlRWtVc3MzYytGbktWdUpWdUZuSGdGVjcxdWJwT0sKdGFVZmZYYnJTdGlBNjVWSWM4M2daNlVoazVmZmUwclpNWEYyTnJvcExqZEFIUUUrQ2lBOUJqdVdiVndad1NMUwp4ckJOZXFWdUQrMmdqZEIvalhrZFhsLzdOREVybWgraFJJUWhUd0lEQVFBQm8yRXdYekFPQmdOVkhROEJBZjhFCkJBTUNBcVF3SFFZRFZSMGxCQll3RkFZSUt3WUJCUVVIQXdFR0NDc0dBUVVGQndNQ01BOEdBMVVkRXdFQi93UUYKTUFNQkFmOHdIUVlEVlIwT0JCWUVGRHZScUErQkNqWk85ZHZQZkFDanB1eXlnakNLTUEwR0NTcUdTSWIzRFFFQgpDd1VBQTRJQkFRQ1I0SzVnK2k1VDRyNHdrOWtyYVBNRTlmaFlka0lUMW5CVHc4SC9hWHJ6WVJmcG1FL09oTHFWCldoUWpJaGk2VldHanlJUTJuNHJ0V2pSYmhWVGlXZ0o1YXNkTzUxRDdjcDJGbjV0bmNBZU9PRE5MOGZ5cmxtUk0KeW1SdmloZWJsYllUVjdDUDhsM0ljcHZwR0JtK09hSStVVm5rR0syR2Z1VmZuaXFXQ2dla3FCUVdhQUNEbmxzNQpoTmxlR0dsWG83ZWE1OUM1bFgzTTVjVVduRmNKYjNtY1pYdVA1VlJxRjNLNmdFbUpIZGVuaENhdDZueUpGSCtVClJnWXg4ZEg4YjQ0NmRJSm5uMzRKSDc3Q0RET0RUcnJ0dHNERFRoekc2ZCszdmF3Q1daTFZUMENSdXBPQldsTXIKbDlWNWdvZnNIRkNOQnpsRGdzc3pxalN0ZHpPdnhNbjQKLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lSQUxLZUNMUCtRc1dqZ3ljS3NWZjVEc3N3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVek1EQTROVEV4TVZvWERUSTJNRFV5T1RBNApOVEV4TVZvd0xERXFNQ2dHQTFVRUF3d2hLaTVqYkhWemRHVnlMVEF1YUhWaVlteGxMV2R5Y0dNdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXBZdDVuRFpwQkJIeEFhRnkKSWdMaU9HUDhsQTljM09veWg1eWdhbm1VRXNhWTNIdFZvUnd5T1N2Uzh5L3Bud2FvcVVCMUQ0M3RPdk5HTTFReQpGSDVrb1FFRDVYaDJkQTdZZmF2TDdTQ1JWUzRYVnRwZVdsUWwxU1M3M1NPRytXbE5lbEFOdjlTNk1WcUZ6Qnl0CkQzYzJPYXhhUktqL01HUlUwWit4OHpCenNjaW81K3ZOamlvbUJMZVUxaVdhOXNWTEc4QkxGb0YzdEw2c3BwOVoKY254emFVWERGQ2hXaHlWNTk5Qy9UWTlWd1dUeTJTRVhPQ2YvRXdpdHFqc2tPM01BcHlPbW1Fdy9paUFXYUxacQp2LzUxL2NZdGR2OVR6QUU0ZENaTEZSRWliUGUyM1h0NVVsKzlUSit1VkYwQmRzaEd0bm5IZkRMZ1dGemJwaWpwCjdHd3FFd0lEQVFBQm80R1BNSUdNTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUTcwYWdQZ1FvMgpUdlhiejN3QW82YnNzb0l3aWpBc0JnTlZIUkVFSlRBamdpRXFMbU5zZFhOMFpYSXRNQzVvZFdKaWJHVXRaM0p3Cll5NWphV3hwZFcwdWFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQWJ1aVZldFRWZVZpVHRQUXFlMGFQaWsKalNGY09LZElHMHlpTmQ0VzBFc3kreW1VSkhpZWd0aFl3MnoxUW1MU0VwM1hLU041Ylpocy84T3FCV2hrWHJ5NwpSeXI4QnFNdnVSTmZMNG41N3RJMTQ0N3ZzYmNvRG9EQnJ3dzEweHpjWEd3dFN1SlU3ZjZSMXJ3ZWlOMUxxcmZvCnlSeURQUDhrc0VMc2h4cmswa0tYQ2RCcVNDay9hK2hFYWRFZTVhRDN2WUFVTzJKZkx1NlYvaEVvbUhQYmFxcmgKM3ZuY3kzdkczQllQVUNuamRhaS9RVEozMXdZelBJRkY5K21RWGRZRVErY3VSdTJjMnJoenI1Zzl3YXlPVlhqNQoyZ0hVd1lqMVMxanNsZm5uVlg2dzFRTVJBemgybmF0KzZHVEplSFJ6Vmp0NHZ2TEhrbXNHZG94VE0rQXNhdFE9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBcFl0NW5EWnBCQkh4QWFGeUlnTGlPR1A4bEE5YzNPb3loNXlnYW5tVUVzYVkzSHRWCm9Sd3lPU3ZTOHkvcG53YW9xVUIxRDQzdE92TkdNMVF5Rkg1a29RRUQ1WGgyZEE3WWZhdkw3U0NSVlM0WFZ0cGUKV2xRbDFTUzczU09HK1dsTmVsQU52OVM2TVZxRnpCeXREM2MyT2F4YVJLai9NR1JVMForeDh6QnpzY2lvNSt2TgpqaW9tQkxlVTFpV2E5c1ZMRzhCTEZvRjN0TDZzcHA5WmNueHphVVhERkNoV2h5VjU5OUMvVFk5VndXVHkyU0VYCk9DZi9Fd2l0cWpza08zTUFweU9tbUV3L2lpQVdhTFpxdi81MS9jWXRkdjlUekFFNGRDWkxGUkVpYlBlMjNYdDUKVWwrOVRKK3VWRjBCZHNoR3RubkhmRExnV0Z6YnBpanA3R3dxRXdJREFRQUJBb0lCQUhPRDd0a2Rjb3cvaE1BUgppeFhHazFxc0VweXlWNmRqMk55ZVk2WElycFduZFJVdER1UjhTMk52ZkNUc0F3WlAzRE0yWWpqM1hWbXNWZ2tOCk1HRHlqWDkzdU9OUCtzQWpkOWZCb0d3WU5MR09sd1NwSGZ2RUNoNUFJc005dmpxZHkwMlZQUExtR3dMRFd1ZkIKL3RUeTU2aTQ1c2hRY0xtdzJTcnBWNEFPQ0QwK1c0MVhBUUpQWXZ3UXBNNTBNYmI0MVZUNzYvZDlmR05UOE1JaQpJUWgzS1V6cGhiN3VGdWhITVB6WHZPWjJwdGpxbkd1MWl1MzBCWUgzbkltcUo5b3I1TUllR3E5bUZkZG9ncHBDCjI4YU82ZVZTV2d1RHZ1Um9QZUNSRzV4bDZYSjUwM1RRV0NIOTZMMjV5NUUwdE5WcGZhbkNxRDZ3MEpHeXIweW0Kdzdsck9nRUNnWUVBMDVveTJPSW5CaHVSUk52cEs0REp1UDRQcVg1V0NHZGZYZXpGWW1rZEFLMkJZZTd0djRYWgpqeVBMamM3Z05Pem8vaE1OUVUveGpWWGpoN2FHOWl0d0pDczZvQ3Y4VGZkL3pnTWpaR01xSDJuZFdLeUI5SEc4CjhWYzlWWFpWUUVRVE5kQWhtTi9UNHJCQjdMTjRrRGdHTnM4ZWIyelB5dWdpOU5ZRUxRT3Fod0VDZ1lFQXlFZGoKV1pMQjg1NEJPM2RPT0JvT1Btd0lLcXkreGdtNEhPdXJFZXVWeGFPRWpFVC9pRWsyZ081NDN2SkJuL3Y5OHk2ZwpCQlR5T1owa0ZQR2ZnOWFRLzlGNFd5ODZqQU1OclkyVi9kY1hLZjBmSS9nYnp4N1grOWw2SmFBUm82eFhtcUFvCmxOczlMb3IvbGdEdDV4WkZsMW0wVkRxcUcrOUs3anZycUxwQkpSTUNnWUVBbUM4SWJzK0h2VzdLTmJucm9xd0gKYUpMZ2RNZzEyK2xzdjBKd1cyeTV2U2tNS29FS1lIcEZsQnJzWk5ycWlXWHgwL21qeU50VUlKQXJDZ29PV3JHMgovMnhQeDY2YTBRQTEzTmFJOThRU0lYR2tEZ2hUbHBqT2lNeHpnaW1PK3A5N0tYSzlGeE96Y2cvTitnekJvd2VJCkFKZEpqbDIxdkhyajJTNnE1aTBDMGdFQ2dZQTB1WDV4SlU2RCtQT3dHUDl4aTRKMmNuQlA4N3doWEl1b3FXNFcKd0tOa0xXRUdvRjk1SEhVSnlqM3R5MjcxVkJ5TnVaZU1tNHNOR2M1VzZTa3FSd0ZUSjJ6ODdGa0laUUZqMENOTgplU055L1YwR1ZoblVFL1dlS3FtYVlDSmtxVWxDdnFrUVR3c3pSb3AwamZnVFh1eWhKSTl4b1NRSlNKeThUUEFFCk1reFdHd0tCZ0R0Q0NEeFZ1TmpGUmJsNm9vSmswZXhYNXYvek9ZZDUyNDhuVjFvM3VQWFIwK1NZRlZ3YmZFNVAKYktVUEFiN2JjWnFxQ0lOdm42Vjl3SWxKbVMxanBYR3B0WlBPaW5iK284a1ZoT2l5MG1yUTkyTlIvekxVVWc4dwp6SjJxekNJSDhXcG9ncnhJbldXcGRkYzhRL0toVUhvM3lkc0xldkU5bUxGaVozclVkRWhqCi0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: a5c21ec6fb86efcc5b013c71c5ff1afe28335a058efe2244778e83dd7fb28dd4
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.13.3@sha256:fa7003cbfdf8358cb71786afebc711b26e5e44a2ed99bd4944930bba915b8910
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 5d81f166d35c295bfcc150b5cb4e6c391c44f887cfe07c06a8ec28d81a7f9c25
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.13.3@sha256:19e4aae5ff72cd9fbcb7d2d16a1570533320a478acc015fc91a4d41a177cadf6
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: hubble-server-ca.crt
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      securityContext:
        fsGroup: 1001
        runAsGroup: 1001
        runAsUser: 1001
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: CILIUM_CNI_CHAINING_MODE
          valueFrom:
            configMapKeyRef:
              key: cni-chaining-mode
              name: cilium-config
              optional: true
        - name: CILIUM_CUSTOM_CNI_CONF
          valueFrom:
            configMapKeyRef:
              key: custom-cni-conf
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        lifecycle:
          postStart:
            exec:
              command:
              - bash
              - -c
              - |
                /cni-install.sh --enable-debug=false --cni-exclusive=true --log-file=/var/run/cilium/cilium-cni.log
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.13.3@sha256:77176464a1e11ea7e89e984ac7db365e7af39851507e94f137dcf56c87746314
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        secret:
          defaultMode: 256
          optional: true
          secretName: cilium-clustermesh
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: ca.crt
                path: client-ca.crt
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
