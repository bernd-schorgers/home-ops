# This manifest was generated by automation. DO NOT EDIT.
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-operator
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay
  namespace: kube-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - namespaces
  - services
  - pods
  - endpoints
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  - ciliumbgppeeringpolicies
  - ciliumclusterwideenvoyconfigs
  - ciliumclusterwidenetworkpolicies
  - ciliumegressgatewaypolicies
  - ciliumendpoints
  - ciliumendpointslices
  - ciliumenvoyconfigs
  - ciliumidentities
  - ciliumlocalredirectpolicies
  - ciliumnetworkpolicies
  - ciliumnodes
  - ciliumnodeconfigs
  - ciliumcidrgroups
  verbs:
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  - ciliumendpoints
  - ciliumnodes
  verbs:
  - create
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  verbs:
  - delete
  - get
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  - ciliumnodes/status
  verbs:
  - get
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  - ciliumendpoints/status
  - ciliumendpoints
  verbs:
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
rules:
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
  - delete
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/status
  verbs:
  - patch
- apiGroups:
  - discovery.k8s.io
  resources:
  - endpointslices
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services/status
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - services
  - endpoints
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies
  - ciliumclusterwidenetworkpolicies
  verbs:
  - create
  - update
  - deletecollection
  - patch
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumnetworkpolicies/status
  - ciliumclusterwidenetworkpolicies/status
  verbs:
  - patch
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpoints
  - ciliumidentities
  verbs:
  - delete
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumidentities
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
- apiGroups:
  - cilium.io
  resources:
  - ciliumnodes/status
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumendpointslices
  - ciliumenvoyconfigs
  verbs:
  - create
  - update
  - get
  - list
  - watch
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resourceNames:
  - ciliumloadbalancerippools.cilium.io
  - ciliumbgppeeringpolicies.cilium.io
  - ciliumclusterwideenvoyconfigs.cilium.io
  - ciliumclusterwidenetworkpolicies.cilium.io
  - ciliumegressgatewaypolicies.cilium.io
  - ciliumendpoints.cilium.io
  - ciliumendpointslices.cilium.io
  - ciliumenvoyconfigs.cilium.io
  - ciliumexternalworkloads.cilium.io
  - ciliumidentities.cilium.io
  - ciliumlocalredirectpolicies.cilium.io
  - ciliumnetworkpolicies.cilium.io
  - ciliumnodes.cilium.io
  - ciliumnodeconfigs.cilium.io
  - ciliumcidrgroups.cilium.io
  resources:
  - customresourcedefinitions
  verbs:
  - update
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - ciliumloadbalancerippools/status
  verbs:
  - patch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
rules:
- apiGroups:
  - networking.k8s.io
  resources:
  - networkpolicies
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - componentstatuses
  - endpoints
  - namespaces
  - nodes
  - pods
  - services
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - cilium.io
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-config-agent
  namespace: kube-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cilium-config-agent
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium
subjects:
- kind: ServiceAccount
  name: cilium
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: cilium-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cilium-operator
subjects:
- kind: ServiceAccount
  name: cilium-operator
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/part-of: cilium
  name: hubble-ui
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: hubble-ui
subjects:
- kind: ServiceAccount
  name: hubble-ui
  namespace: kube-system
---
apiVersion: v1
data:
  agent-not-ready-taint-key: node.cilium.io/agent-not-ready
  arping-refresh-period: 30s
  auto-direct-node-routes: "true"
  bpf-lb-algorithm: maglev
  bpf-lb-external-clusterip: "false"
  bpf-lb-map-max: "65536"
  bpf-lb-mode: hybrid
  bpf-lb-sock: "false"
  bpf-map-dynamic-size-ratio: "0.0025"
  bpf-policy-map-max: "16384"
  bpf-root: /sys/fs/bpf
  cgroup-root: /sys/fs/cgroup
  cilium-endpoint-gc-interval: 5m0s
  cluster-id: "1"
  cluster-name: cluster-0
  cni-exclusive: "true"
  cni-log-file: /var/run/cilium/cilium-cni.log
  cnp-node-status-gc-interval: 0s
  custom-cni-conf: "false"
  debug: "false"
  debug-verbose: ""
  disable-cnp-status-updates: "true"
  disable-endpoint-crd: "false"
  enable-auto-protect-node-port-range: "true"
  enable-bgp-control-plane: "false"
  enable-bpf-clock-probe: "true"
  enable-endpoint-health-checking: "true"
  enable-endpoint-routes: "true"
  enable-health-check-nodeport: "true"
  enable-health-checking: "true"
  enable-hubble: "true"
  enable-hubble-open-metrics: "false"
  enable-ipv4: "true"
  enable-ipv4-masquerade: "true"
  enable-ipv6: "false"
  enable-ipv6-big-tcp: "false"
  enable-ipv6-masquerade: "true"
  enable-k8s-networkpolicy: "true"
  enable-k8s-terminating-endpoint: "true"
  enable-l2-neigh-discovery: "true"
  enable-l7-proxy: "true"
  enable-local-redirect-policy: "false"
  enable-policy: default
  enable-remote-node-identity: "true"
  enable-sctp: "false"
  enable-svc-source-range-check: "true"
  enable-vtep: "false"
  enable-well-known-identities: "false"
  enable-xt-socket-fallback: "true"
  hubble-disable-tls: "false"
  hubble-listen-address: :4244
  hubble-metrics: dns:query;ignoreAAAA, drop tcp flow http icmp port-distribution
  hubble-metrics-server: :9965
  hubble-socket-path: /var/run/cilium/hubble.sock
  hubble-tls-cert-file: /var/lib/cilium/tls/hubble/server.crt
  hubble-tls-client-ca-files: /var/lib/cilium/tls/hubble/client-ca.crt
  hubble-tls-key-file: /var/lib/cilium/tls/hubble/server.key
  identity-allocation-mode: crd
  identity-gc-interval: 15m0s
  identity-heartbeat-timeout: 30m0s
  install-no-conntrack-iptables-rules: "false"
  ipam: kubernetes
  ipam-cilium-node-update-rate: 15s
  ipv4-native-routing-cidr: 10.244.0.0/16
  kube-proxy-replacement: strict
  kube-proxy-replacement-healthz-bind-address: 0.0.0.0:10256
  monitor-aggregation: medium
  monitor-aggregation-flags: all
  monitor-aggregation-interval: 5s
  node-port-bind-protection: "true"
  nodes-gc-interval: 5m0s
  operator-api-serve-addr: 127.0.0.1:9234
  preallocate-bpf-maps: "false"
  procfs: /host/proc
  remove-cilium-node-taints: "true"
  routing-mode: native
  set-cilium-is-up-condition: "true"
  set-cilium-node-taints: "true"
  sidecar-istio-proxy-image: cilium/istio_proxy
  skip-cnp-status-startup-clean: "false"
  synchronize-k8s-nodes: "true"
  tofqdns-dns-reject-response-code: refused
  tofqdns-enable-dns-compression: "true"
  tofqdns-endpoint-max-ip-per-hostname: "50"
  tofqdns-idle-connection-grace-period: 0s
  tofqdns-max-deferred-connection-deletes: "10000"
  tofqdns-proxy-response-max-delay: 100ms
  unmanaged-pod-watcher-interval: "15"
  vtep-cidr: ""
  vtep-endpoint: ""
  vtep-mac: ""
  vtep-mask: ""
  write-cni-conf-when-ready: /host/etc/cni/net.d/05-cilium.conflist
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-config
  namespace: kube-system
---
apiVersion: v1
data:
  config.yaml: "cluster-name: cluster-0\npeer-service: \"hubble-peer.kube-system.svc.cluster.local:443\"\nlisten-address:
    :4245\ngops: true\ngops-port: \"9893\"\ndial-timeout: \nretry-timeout: \nsort-buffer-len-max:
    \nsort-buffer-drain-timeout: \ntls-client-cert-file: /var/lib/hubble-relay/tls/client.crt\ntls-client-key-file:
    /var/lib/hubble-relay/tls/client.key\ntls-hubble-server-ca-files: /var/lib/hubble-relay/tls/hubble-server-ca.crt\ndisable-server-tls:
    true\n"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-config
  namespace: kube-system
---
apiVersion: v1
data:
  nginx.conf: "server {\n    listen       8081;\n    listen       [::]:8081;\n    server_name
    \ localhost;\n    root /app;\n    index index.html;\n    client_max_body_size
    1G;\n\n    location / {\n        proxy_set_header Host $host;\n        proxy_set_header
    X-Real-IP $remote_addr;\n\n        # CORS\n        add_header Access-Control-Allow-Methods
    \"GET, POST, PUT, HEAD, DELETE, OPTIONS\";\n        add_header Access-Control-Allow-Origin
    *;\n        add_header Access-Control-Max-Age 1728000;\n        add_header Access-Control-Expose-Headers
    content-length,grpc-status,grpc-message;\n        add_header Access-Control-Allow-Headers
    range,keep-alive,user-agent,cache-control,content-type,content-transfer-encoding,x-accept-content-transfer-encoding,x-accept-response-streaming,x-user-agent,x-grpc-web,grpc-timeout;\n
    \       if ($request_method = OPTIONS) {\n            return 204;\n        }\n
    \       # /CORS\n\n        location /api {\n            proxy_http_version 1.1;\n
    \           proxy_pass_request_headers on;\n            proxy_hide_header Access-Control-Allow-Origin;\n
    \           proxy_pass http://127.0.0.1:8090;\n        }\n        location / {\n
    \           # double `/index.html` is required here \n            try_files $uri
    $uri/ /index.html /index.html;\n        }\n    }\n}"
kind: ConfigMap
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ui-nginx
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZmM2RVhXVTZoSFJyQ0hJQ2RlMEF3REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFMU1EZ3pORFE1V2hjTk1qWXdOVEUwTURnegpORFE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ1Rkbng3bjJzcVp1SkxWS2d5ajdGS1UxNEJMOFZFdDlyeGZ0SDlPMDVnQldEZEhYZDgKV2tuck5hOXJlcElZUjR4YVZOYlo5M3VqMmVPeEJnZHIxL0hBMUJXUHFwMmpzaUxKR0dNUmprV2pONFgrTE5seApFcEF2bkp4Qlc4TWtFUjg4MUlzMHJwMFBYalZCYXdWS2xRbXBZaW1vMjgycm5xd2E5bXpCMzQ2Sit1TlNPb3ZkCnBiQ0NKWWFMc2RKYnJwSy9Va0dYd0JPZ252eFd4WWNRVUJtdGZ6WkNrRTFZczkvdDhEMFpRSTVtaXphMGN0R08KMGo2RkZ5VzlqbXNmeDAxNXlocmtNbE1QM1NEb3BUalFmdjg3VURtZWVzUUZBUnFPSDMxTWRjd1llYTRGRHZnawpVY29VOVJpUEl2enZHcXlHc1plTmkydDFqbEZDcUZCZDB6YXBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVVRExZZkV2T1kvK3RhYWJkSlhTSG1iSDBvVHd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCUzFuMG9hSlJiRDM4Y3B6cWhvbndLdHh5aE1ZWnorbmdpbTliUzlGREhkVGROZlM4WUN1anVuCmlVcTkxQlBPZDNQYUY4R0pNYXpjRmZDeGhGNlZGM295MGhWZDJVSVl6YUpDVE5STVZMWUQvL1ZDaXlSUkF1MEUKSkIrTjBvMmlKQUNLYnNzbFByL0ppNjJrbVZyYnU4MU9QcFZIelorSDRUOUR5TFJmYStSQWVXUjhlRVNZNjVnegpIeklaWXU5TnJzZ0diNGNQRHhvalhjNnE5QW4wVENSQzU3MjBiSytIM3BIT0l4Z09WckNwUDFRTDJlKzJPRGorCkJhYlRKSUNWSEVWTlFMY1hYZEtmTGlTbmlRVlNiVVVkZzdjUzREVjNXZUQ0YzlJVkNUN3V6RmtWNzNxMnJ1NGIKaWRjbUIzWjdDRVNYZG8xVnc5QUVJU2svNGtkRG9TOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBazNaOGU1OXJLbWJpUzFTb01vK3hTbE5lQVMvRlJMZmE4WDdSL1R0T1lBVmczUjEzCmZGcEo2eld2YTNxU0dFZU1XbFRXMmZkN285bmpzUVlIYTlmeHdOUVZqNnFkbzdJaXlSaGpFWTVGb3plRi9peloKY1JLUUw1eWNRVnZESkJFZlBOU0xOSzZkRDE0MVFXc0ZTcFVKcVdJcHFOdk5xNTZzR3Zac3dkK09pZnJqVWpxTAozYVd3Z2lXR2k3SFNXNjZTdjFKQmw4QVRvSjc4VnNXSEVGQVpyWDgyUXBCTldMUGY3ZkE5R1VDT1pvczJ0SExSCmp0SStoUmNsdlk1ckg4ZE5lY29hNURKVEQ5MGc2S1U0MEg3L08xQTVubnJFQlFFYWpoOTlUSFhNR0htdUJRNzQKSkZIS0ZQVVlqeUw4N3hxc2hyR1hqWXRyZFk1UlFxaFFYZE0ycVFJREFRQUJBb0lCQVFDT1FydWJJOVBtSnpWZgpTVCt1NzVNeFNqWWhYTzJwK3RrOUs0VDRFVlB1TEtJakR6OXJkMHRpbi9zbzdDbXZSSzh4b2pGWVBIcEtPM1YvCkhYcmhYb1g2Nm1BV3BwbklCNTJwZFY1MTNGUndQcXVFNTgycVdTZEMxNHFqUHh5R1dnSlIxQmFyNzF6VUs2V2oKQTlVcCs1aERrZER3OTRSMmNmQkZYc0RUVkpJVnA3N3I2ZnZWSTNPSWlDVDZGZU1PdDZVajZHMjJxd2JaUkhlbApTWndpSmdMYmxiQklIZDZQMGpicUV4OE1uRC9CeEcxcFlCUmF0aXRCUjhEeWZCSlZIeVA2Ni9VbVZVb0VNNnEzCkJPdXRBUVhkSWtLeFIraGVnbXlNRHYwSWhGeHBlME1aODJid1BreFE2QmRqc0pvVHdia3Z5U3h0MzQyVk03NjAKeUpaejZBYzFBb0dCQU1FOE9MNGpxcEFRelVmbXpzNVk3dUdSU2tyVi9ISnlkYVBsYWwxL2p4RHBubDIxdERKYwpoOHNoZHFZYUxrTnMzWHpnTnJjZVZOSUZVYWZTNEVETGg5VnJvQTYyTFVYOFIwUThURXRqTlNHWHBKd0JTQ1lHClRQMnIzSFFSSDNOcEdodEhodDdlTGtJeEZqWDdvTG0wN2VNYURnZVQ2WlFYVHpNb2c3Lytsd1VuQW9HQkFNTmMKT2NsYmFpa2NucnBwK0Vub0hwa1IwOG9qNWNYalBLaml5ZWJUaEpjY1NGc2FtNCtrbDdHRDY1UGhOR0JLRWtaVwozZDhMaG5VVXk4ZHlONi80ZTVuSWsrM3d2MzNKa3c1dDB0NkxBR1dLVnRGSkhQVE44aXNGWnJjN21WQkt3NnE4CjlHTHZkZEVvRVJ1cEM3RVVmdGMxa2hUMUQ1ZXNnRGZoVWxNODNHZXZBb0dBRW1QRnpxcWNSOXVoZmE5RWpUUy8KZnk0UmtPK3VkOEhXMmtNeURUWGZpcStCQjlBTUZ5TGhOWDY0eVBRQzVSM09NbDB3TjlzbUhWcXVPN2VBNmdtMApvcVg4ZEluMzR3b3dTaGttOWFHNlk3a0h6R1QrMWNlUnVpNko2MjNadldVS1BBQmhvSUlxaXRnYkVnWWhkS3I0ClhMMlZDam1VYUNpVHUvMm1GRGFKYnM4Q2dZQTQ2aVIzc2ljeWhRRUZSQnd1dys0dUlCQjRvbzZ0WVM5cDhIQnIKekJHanlIeVg5aDk5OExDMDZiNzNIVFFhSFZwSG5jVVQxeEs4QjJ2NjFoNjlLSUl4NGtxZWxuWGpXcGQ2SzZxMApaUUNmbEhjSWorbGN0S2NwdTNBYVQ4V3hxNlpubHBjSVA4VXVReU1BMFBYMENBbVAveTVvNXFBOVN1Y3I0SHdRCmZmbWtSd0tCZ0JDYWxJbkJVRHVOWGdvRWJ3TFJMSEdFQ2dITm8zMzdYWUt2L05wTHZ1U1BwT2x4a2kwUmhPZHYKK1FvZUc1UlpJcEt0aVgyTmpXM0srN2ZWQ09icFlacW15UGsxeGRPK0VvTUJhcklaN0pFRW15NjNDTElOSC9ZRgo0REEwVXpCYXJXNnpvOG43N2dGYStUWjV5K3MxR1U2N2JWTnA1cG5rVk8zRFFFYXAwWUh6Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: cilium-ca
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZmM2RVhXVTZoSFJyQ0hJQ2RlMEF3REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFMU1EZ3pORFE1V2hjTk1qWXdOVEUwTURnegpORFE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ1Rkbng3bjJzcVp1SkxWS2d5ajdGS1UxNEJMOFZFdDlyeGZ0SDlPMDVnQldEZEhYZDgKV2tuck5hOXJlcElZUjR4YVZOYlo5M3VqMmVPeEJnZHIxL0hBMUJXUHFwMmpzaUxKR0dNUmprV2pONFgrTE5seApFcEF2bkp4Qlc4TWtFUjg4MUlzMHJwMFBYalZCYXdWS2xRbXBZaW1vMjgycm5xd2E5bXpCMzQ2Sit1TlNPb3ZkCnBiQ0NKWWFMc2RKYnJwSy9Va0dYd0JPZ252eFd4WWNRVUJtdGZ6WkNrRTFZczkvdDhEMFpRSTVtaXphMGN0R08KMGo2RkZ5VzlqbXNmeDAxNXlocmtNbE1QM1NEb3BUalFmdjg3VURtZWVzUUZBUnFPSDMxTWRjd1llYTRGRHZnawpVY29VOVJpUEl2enZHcXlHc1plTmkydDFqbEZDcUZCZDB6YXBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVVRExZZkV2T1kvK3RhYWJkSlhTSG1iSDBvVHd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCUzFuMG9hSlJiRDM4Y3B6cWhvbndLdHh5aE1ZWnorbmdpbTliUzlGREhkVGROZlM4WUN1anVuCmlVcTkxQlBPZDNQYUY4R0pNYXpjRmZDeGhGNlZGM295MGhWZDJVSVl6YUpDVE5STVZMWUQvL1ZDaXlSUkF1MEUKSkIrTjBvMmlKQUNLYnNzbFByL0ppNjJrbVZyYnU4MU9QcFZIelorSDRUOUR5TFJmYStSQWVXUjhlRVNZNjVnegpIeklaWXU5TnJzZ0diNGNQRHhvalhjNnE5QW4wVENSQzU3MjBiSytIM3BIT0l4Z09WckNwUDFRTDJlKzJPRGorCkJhYlRKSUNWSEVWTlFMY1hYZEtmTGlTbmlRVlNiVVVkZzdjUzREVjNXZUQ0YzlJVkNUN3V6RmtWNzNxMnJ1NGIKaWRjbUIzWjdDRVNYZG8xVnc5QUVJU2svNGtkRG9TOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  ca.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFb3dJQkFBS0NBUUVBazNaOGU1OXJLbWJpUzFTb01vK3hTbE5lQVMvRlJMZmE4WDdSL1R0T1lBVmczUjEzCmZGcEo2eld2YTNxU0dFZU1XbFRXMmZkN285bmpzUVlIYTlmeHdOUVZqNnFkbzdJaXlSaGpFWTVGb3plRi9peloKY1JLUUw1eWNRVnZESkJFZlBOU0xOSzZkRDE0MVFXc0ZTcFVKcVdJcHFOdk5xNTZzR3Zac3dkK09pZnJqVWpxTAozYVd3Z2lXR2k3SFNXNjZTdjFKQmw4QVRvSjc4VnNXSEVGQVpyWDgyUXBCTldMUGY3ZkE5R1VDT1pvczJ0SExSCmp0SStoUmNsdlk1ckg4ZE5lY29hNURKVEQ5MGc2S1U0MEg3L08xQTVubnJFQlFFYWpoOTlUSFhNR0htdUJRNzQKSkZIS0ZQVVlqeUw4N3hxc2hyR1hqWXRyZFk1UlFxaFFYZE0ycVFJREFRQUJBb0lCQVFDT1FydWJJOVBtSnpWZgpTVCt1NzVNeFNqWWhYTzJwK3RrOUs0VDRFVlB1TEtJakR6OXJkMHRpbi9zbzdDbXZSSzh4b2pGWVBIcEtPM1YvCkhYcmhYb1g2Nm1BV3BwbklCNTJwZFY1MTNGUndQcXVFNTgycVdTZEMxNHFqUHh5R1dnSlIxQmFyNzF6VUs2V2oKQTlVcCs1aERrZER3OTRSMmNmQkZYc0RUVkpJVnA3N3I2ZnZWSTNPSWlDVDZGZU1PdDZVajZHMjJxd2JaUkhlbApTWndpSmdMYmxiQklIZDZQMGpicUV4OE1uRC9CeEcxcFlCUmF0aXRCUjhEeWZCSlZIeVA2Ni9VbVZVb0VNNnEzCkJPdXRBUVhkSWtLeFIraGVnbXlNRHYwSWhGeHBlME1aODJid1BreFE2QmRqc0pvVHdia3Z5U3h0MzQyVk03NjAKeUpaejZBYzFBb0dCQU1FOE9MNGpxcEFRelVmbXpzNVk3dUdSU2tyVi9ISnlkYVBsYWwxL2p4RHBubDIxdERKYwpoOHNoZHFZYUxrTnMzWHpnTnJjZVZOSUZVYWZTNEVETGg5VnJvQTYyTFVYOFIwUThURXRqTlNHWHBKd0JTQ1lHClRQMnIzSFFSSDNOcEdodEhodDdlTGtJeEZqWDdvTG0wN2VNYURnZVQ2WlFYVHpNb2c3Lytsd1VuQW9HQkFNTmMKT2NsYmFpa2NucnBwK0Vub0hwa1IwOG9qNWNYalBLaml5ZWJUaEpjY1NGc2FtNCtrbDdHRDY1UGhOR0JLRWtaVwozZDhMaG5VVXk4ZHlONi80ZTVuSWsrM3d2MzNKa3c1dDB0NkxBR1dLVnRGSkhQVE44aXNGWnJjN21WQkt3NnE4CjlHTHZkZEVvRVJ1cEM3RVVmdGMxa2hUMUQ1ZXNnRGZoVWxNODNHZXZBb0dBRW1QRnpxcWNSOXVoZmE5RWpUUy8KZnk0UmtPK3VkOEhXMmtNeURUWGZpcStCQjlBTUZ5TGhOWDY0eVBRQzVSM09NbDB3TjlzbUhWcXVPN2VBNmdtMApvcVg4ZEluMzR3b3dTaGttOWFHNlk3a0h6R1QrMWNlUnVpNko2MjNadldVS1BBQmhvSUlxaXRnYkVnWWhkS3I0ClhMMlZDam1VYUNpVHUvMm1GRGFKYnM4Q2dZQTQ2aVIzc2ljeWhRRUZSQnd1dys0dUlCQjRvbzZ0WVM5cDhIQnIKekJHanlIeVg5aDk5OExDMDZiNzNIVFFhSFZwSG5jVVQxeEs4QjJ2NjFoNjlLSUl4NGtxZWxuWGpXcGQ2SzZxMApaUUNmbEhjSWorbGN0S2NwdTNBYVQ4V3hxNlpubHBjSVA4VXVReU1BMFBYMENBbVAveTVvNXFBOVN1Y3I0SHdRCmZmbWtSd0tCZ0JDYWxJbkJVRHVOWGdvRWJ3TFJMSEdFQ2dITm8zMzdYWUt2L05wTHZ1U1BwT2x4a2kwUmhPZHYKK1FvZUc1UlpJcEt0aVgyTmpXM0srN2ZWQ09icFlacW15UGsxeGRPK0VvTUJhcklaN0pFRW15NjNDTElOSC9ZRgo0REEwVXpCYXJXNnpvOG43N2dGYStUWjV5K3MxR1U2N2JWTnA1cG5rVk8zRFFFYXAwWUh6Ci0tLS0tRU5EIFJTQSBQUklWQVRFIEtFWS0tLS0tCg==
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-ca-secret
  namespace: kube-system
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZmM2RVhXVTZoSFJyQ0hJQ2RlMEF3REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFMU1EZ3pORFE1V2hjTk1qWXdOVEUwTURnegpORFE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ1Rkbng3bjJzcVp1SkxWS2d5ajdGS1UxNEJMOFZFdDlyeGZ0SDlPMDVnQldEZEhYZDgKV2tuck5hOXJlcElZUjR4YVZOYlo5M3VqMmVPeEJnZHIxL0hBMUJXUHFwMmpzaUxKR0dNUmprV2pONFgrTE5seApFcEF2bkp4Qlc4TWtFUjg4MUlzMHJwMFBYalZCYXdWS2xRbXBZaW1vMjgycm5xd2E5bXpCMzQ2Sit1TlNPb3ZkCnBiQ0NKWWFMc2RKYnJwSy9Va0dYd0JPZ252eFd4WWNRVUJtdGZ6WkNrRTFZczkvdDhEMFpRSTVtaXphMGN0R08KMGo2RkZ5VzlqbXNmeDAxNXlocmtNbE1QM1NEb3BUalFmdjg3VURtZWVzUUZBUnFPSDMxTWRjd1llYTRGRHZnawpVY29VOVJpUEl2enZHcXlHc1plTmkydDFqbEZDcUZCZDB6YXBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVVRExZZkV2T1kvK3RhYWJkSlhTSG1iSDBvVHd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCUzFuMG9hSlJiRDM4Y3B6cWhvbndLdHh5aE1ZWnorbmdpbTliUzlGREhkVGROZlM4WUN1anVuCmlVcTkxQlBPZDNQYUY4R0pNYXpjRmZDeGhGNlZGM295MGhWZDJVSVl6YUpDVE5STVZMWUQvL1ZDaXlSUkF1MEUKSkIrTjBvMmlKQUNLYnNzbFByL0ppNjJrbVZyYnU4MU9QcFZIelorSDRUOUR5TFJmYStSQWVXUjhlRVNZNjVnegpIeklaWXU5TnJzZ0diNGNQRHhvalhjNnE5QW4wVENSQzU3MjBiSytIM3BIT0l4Z09WckNwUDFRTDJlKzJPRGorCkJhYlRKSUNWSEVWTlFMY1hYZEtmTGlTbmlRVlNiVVVkZzdjUzREVjNXZUQ0YzlJVkNUN3V6RmtWNzNxMnJ1NGIKaWRjbUIzWjdDRVNYZG8xVnc5QUVJU2svNGtkRG9TOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURTVENDQWpHZ0F3SUJBZ0lSQVBuSlRUam5ud1Q5ZjVOaDcrWE4zSkV3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeE5UQTRNelEwT1ZvWERUSTJNRFV4TkRBNApNelEwT1Zvd0l6RWhNQjhHQTFVRUF3d1lLaTVvZFdKaWJHVXRjbVZzWVhrdVkybHNhWFZ0TG1sdk1JSUJJakFOCkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXhDeW54OGk3VjFOa1Y0bFdGVjBjUTlaaDVWMncKUmtoVHd5VVZWWDBLeFNQMGZCVWs1MFp4S3NaMEdoN0thaWhGZmE0SU5mNUYzK1VWdzVZMGM3c1ZLdUQxdUZGWQpldVNuYXpPSjUrakY1THRzSEFyUVJjNnRzd01JNjF4aXBnOW44T3JBdXY1UHlwd1lqWENOVm9udE1qNXpIL1VGCktpOWtyQzFobVVoYktBeVQyalh1bVdoSmQ1OGN2OU43ajM5YTNhMnB5RkVaY0RwZW4zMUR6THFoLzNFM0VocjUKeU8raCttZjlGTHdRQXI2RkxZQVhxdGs1OXFob1ozOVZSLzJ4V1VBK3NwWXh6TytmaDAzT0ZIdmdadHRod1JJQQphNG1HYlRKSEVCM3p5RFJ5Tk1Qb2JTQlpZcG43RW04eEcvWWNwL3NJTGRnMTcvZDczK3kwaDMwZjJ3SURBUUFCCm80R0dNSUdETUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUIKQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUlFNdGg4Uzg1ai82MXBwdDBsZEllWgpzZlNoUERBakJnTlZIUkVFSERBYWdoZ3FMbWgxWW1Kc1pTMXlaV3hoZVM1amFXeHBkVzB1YVc4d0RRWUpLb1pJCmh2Y05BUUVMQlFBRGdnRUJBQk5LNFNIRGI3dGh6eCtGKytCTjV1S0lsUkpYWEMzNW9OdTB0K1lZWVlpYjcwYVAKNjBxcTJqbUF6OFRpZzRaVkJxUHhrNXJDaThhRUJOZFFob3hnSGZtdTBmZk8rQis0dXRKUGhxOERhcGRyWDJjcworQ0Y4MUFhYUNFa2ZIbmErRlA4amh6cTU4WTFzZWVEYjI3Zm8wdzU1dCtmb01Nclh1ekxldlNaR0lDZEg3Njl1Cjcwem02TlpkWDVpd2ZiV3JSWU5tNmZuL214SkZEaFUrNDcydFIrOWZDcjhDWGhPWmZGRFM1R3EvRTQ0a1Blc0UKTGd6WWZ4SGh6T3gxYzNLdnhDL2w2dUtxOS9vS0psNGc1WjdydnZDNnNrVzNnWlFNdmtSamltMmpXbFB5U2l3Nwo4bWozdmhnd2ozdmMyVzQ5Tnp1Q0cwWHE3L0cyeER5VHdtVEtPQTQ9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcEFJQkFBS0NBUUVBeEN5bng4aTdWMU5rVjRsV0ZWMGNROVpoNVYyd1JraFR3eVVWVlgwS3hTUDBmQlVrCjUwWnhLc1owR2g3S2FpaEZmYTRJTmY1RjMrVVZ3NVkwYzdzVkt1RDF1RkZZZXVTbmF6T0o1K2pGNUx0c0hBclEKUmM2dHN3TUk2MXhpcGc5bjhPckF1djVQeXB3WWpYQ05Wb250TWo1ekgvVUZLaTlrckMxaG1VaGJLQXlUMmpYdQptV2hKZDU4Y3Y5TjdqMzlhM2EycHlGRVpjRHBlbjMxRHpMcWgvM0UzRWhyNXlPK2grbWY5Rkx3UUFyNkZMWUFYCnF0azU5cWhvWjM5VlIvMnhXVUErc3BZeHpPK2ZoMDNPRkh2Z1p0dGh3UklBYTRtR2JUSkhFQjN6eURSeU5NUG8KYlNCWllwbjdFbTh4Ry9ZY3Avc0lMZGcxNy9kNzMreTBoMzBmMndJREFRQUJBb0lCQVFDSzlPNnJyMTQwVHhlbQpnZHQrS29RWThVUkt5Z0JRNkc2Y3JpbmNja1FzdkhrelkyN09lN0V4a1gwdisxdDVzcWoyaTAyNW9URXhsUDNECm15UHdUamFDTnZNVzZsZjRSUHJxRG9uQ3dibGJlZjdzSmlTOUxkY1FGRGcvTHlPWmFSUkJMS2YwVEt1TVl1RnAKWHE1ZS9EZ04vUHBqU3BXcitnSWZpODIwVy9KbC9MUzNCK0ttUnlJMDE2Q3ljVG5ucW0zcHQ3YWMrRU04cE5ibQpuN0FpKzFQeUVhSTBhSXdCcUFiVkxjUHYxSnRrTE5DYlU0ZjRid2w3TEM3ME1peVdHYTFvZFd2U0wwVzgwOHBKCm1nQnNpUkdEMVhhNzNPcHJpQit0MlIrR1lIb2RobUNTVW1uL2tJY2o2b1FzaFc0NmpBM2xvekNxN0M4aStxUFQKK21KWkp6R1JBb0dCQU5Mejc0VTN5bXFXaGJyWVJCZ01DUURBdXZkSWwvdDNjYmpSZ1FwM3paOGRVSVpOYjRUVgpFQ1RNd2p1eUwxK1JhanVmZVVIK0Q5S1NoRGtrQ0ZWMnBmdVppQmJROFVxL0VUWEdEUG1lNUc2K250TnFWMTVzCkVEcXp4eTBvZnVUcDdDTGtzY0tiTC9lT2dLTnFrUXFaZUVjRFdDWFo3aXZIY2Jxam5oT0x5YlVQQW9HQkFPNFEKMVdoZG9CTGt0T1cvY25mVjVLTEY0cHFQeWJRMUVicmliaVFUSGdKVnpna29ETnFZM0FNV3Yxa2dyZ3ZGaVZWdQp1WlFnMTQ0TUxJTFJya3V2dkNySGtVOG9wUHJ0cDZzMHNlRXZJN2EzcG1saUt4WGtFQ2lFNGJEeEx3VXNidHRGCktGTm5jdHEwNlFBdFVCbTg3RWR2QVl2bTVYa21lT2E3Uy9yaW5LQjFBb0dBWDBmZ3Vwb2RhaEU4cTh6OHpLTzYKK1VVVDdaY3pWbGgzM0JOOHBsN0FXQXJra1JTdXR4K0pJQ1gvNFBpMVh3UU9LSW42T2UxbjlpTkpaNG0zM2VvdQpSRHJ2ZGVhLzVaUHhVUWw0V05NRXVHU08xa3prMDNnWnlIbmxENmVIMFJzN0ZmT1h1cDlmaGdBdWFDRTlDNzJQCnp2dGF1Qlg3OW5ncURUUFR0VjVoSjg4Q2dZRUFyTmZ2K1l3d1VrZFd4NC9PTGc5UHBwYUJ4Yklyd2ZqZDNJL1YKWTcrMWhBQ0VUTVdWUDRqSUJENFp3ejRrMzBzV1FMN1pZaURPSDhYYTgwZ0ZnZElmamZmREduUHFCSDFUeE12SApjalRsZXgydlpzZnRmRUZQTWZ2NFdKMWpoQ0FVaElLYm1xSjdFeXRTRjl6T1VVR0hVdjNYWTVuS2RjRm0raTUyCkpic3QrSmtDZ1lCeVhPcUV4d280cFE4bjErRDd1WWlxd2lQemJ3WGJ3TW0rUWw5dHg5eVp2VUJuZTZFL1hicGoKMm9xSjJIdXF1MEtuU0pmSWlyWm9JUjExOW1DbkZoaVBESUVuUUFvZzZBR2hoWC9hV3lVRTlqYk1ORFFtRm5KbQpsRVBuWUYxbGNKaFVWa05IdXVzRWZ6bCtqZk1UT0kvWDJKbkxyNy8xclUrWDM1TE5QOU5kWFE9PQotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-relay-client-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURFekNDQWZ1Z0F3SUJBZ0lRZmM2RVhXVTZoSFJyQ0hJQ2RlMEF3REFOQmdrcWhraUc5dzBCQVFzRkFEQVUKTVJJd0VBWURWUVFERXdsRGFXeHBkVzBnUTBFd0hoY05Nak13TlRFMU1EZ3pORFE1V2hjTk1qWXdOVEUwTURnegpORFE1V2pBVU1SSXdFQVlEVlFRREV3bERhV3hwZFcwZ1EwRXdnZ0VpTUEwR0NTcUdTSWIzRFFFQkFRVUFBNElCCkR3QXdnZ0VLQW9JQkFRQ1Rkbng3bjJzcVp1SkxWS2d5ajdGS1UxNEJMOFZFdDlyeGZ0SDlPMDVnQldEZEhYZDgKV2tuck5hOXJlcElZUjR4YVZOYlo5M3VqMmVPeEJnZHIxL0hBMUJXUHFwMmpzaUxKR0dNUmprV2pONFgrTE5seApFcEF2bkp4Qlc4TWtFUjg4MUlzMHJwMFBYalZCYXdWS2xRbXBZaW1vMjgycm5xd2E5bXpCMzQ2Sit1TlNPb3ZkCnBiQ0NKWWFMc2RKYnJwSy9Va0dYd0JPZ252eFd4WWNRVUJtdGZ6WkNrRTFZczkvdDhEMFpRSTVtaXphMGN0R08KMGo2RkZ5VzlqbXNmeDAxNXlocmtNbE1QM1NEb3BUalFmdjg3VURtZWVzUUZBUnFPSDMxTWRjd1llYTRGRHZnawpVY29VOVJpUEl2enZHcXlHc1plTmkydDFqbEZDcUZCZDB6YXBBZ01CQUFHallUQmZNQTRHQTFVZER3RUIvd1FFCkF3SUNwREFkQmdOVkhTVUVGakFVQmdnckJnRUZCUWNEQVFZSUt3WUJCUVVIQXdJd0R3WURWUjBUQVFIL0JBVXcKQXdFQi96QWRCZ05WSFE0RUZnUVVVRExZZkV2T1kvK3RhYWJkSlhTSG1iSDBvVHd3RFFZSktvWklodmNOQVFFTApCUUFEZ2dFQkFCUzFuMG9hSlJiRDM4Y3B6cWhvbndLdHh5aE1ZWnorbmdpbTliUzlGREhkVGROZlM4WUN1anVuCmlVcTkxQlBPZDNQYUY4R0pNYXpjRmZDeGhGNlZGM295MGhWZDJVSVl6YUpDVE5STVZMWUQvL1ZDaXlSUkF1MEUKSkIrTjBvMmlKQUNLYnNzbFByL0ppNjJrbVZyYnU4MU9QcFZIelorSDRUOUR5TFJmYStSQWVXUjhlRVNZNjVnegpIeklaWXU5TnJzZ0diNGNQRHhvalhjNnE5QW4wVENSQzU3MjBiSytIM3BIT0l4Z09WckNwUDFRTDJlKzJPRGorCkJhYlRKSUNWSEVWTlFMY1hYZEtmTGlTbmlRVlNiVVVkZzdjUzREVjNXZUQ0YzlJVkNUN3V6RmtWNzNxMnJ1NGIKaWRjbUIzWjdDRVNYZG8xVnc5QUVJU2svNGtkRG9TOD0KLS0tLS1FTkQgQ0VSVElGSUNBVEUtLS0tLQo=
  tls.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSURXekNDQWtPZ0F3SUJBZ0lSQUpjb1VZZTQwRlhyUEFrM3RZVEtDbGN3RFFZSktvWklodmNOQVFFTEJRQXcKRkRFU01CQUdBMVVFQXhNSlEybHNhWFZ0SUVOQk1CNFhEVEl6TURVeE5UQTRNelEwT1ZvWERUSTJNRFV4TkRBNApNelEwT1Zvd0xERXFNQ2dHQTFVRUF3d2hLaTVqYkhWemRHVnlMVEF1YUhWaVlteGxMV2R5Y0dNdVkybHNhWFZ0CkxtbHZNSUlCSWpBTkJna3Foa2lHOXcwQkFRRUZBQU9DQVE4QU1JSUJDZ0tDQVFFQXo2dmJGblEwOXEvOUVlSkkKKzZUNjRSQ1Nsd05tY1pWY0I5V3UycVhjMnpJNkEvNndTWTFURlVJdTVNWTgyKzdPOWRjVXRmc1I3NkdQSklOSgoyWTVFK2lIazA0MEI3UEMzWDVabDl1YVZKdXhkNTVKeXdicVh0enN2YnB5bjA5ZFJZNlVCQVI4NUdOeitJd0VHCnN0Ui9tS2lJbkZnWndFdnNjaGp6bXZHaTZMaGFiR3lIeCsxTnkrMXQvckVJeGdsMnRvakVvR091a2xGMDVwZkgKMjlWR3RYUW16Mkora1BFWUNyUndoVlJ0cEJVMFBDQmpwZlVzdDBlU0ZndU1PWktGL09yQUp3b2dmWFVuK2k3cQozVitDNjlqQlBjNU5zZWI1SVExTzJoM0tHbHAydGRGdkE0YzFQY2ZvcDVyR2J4S2hNRGlmQmZqMmhPNWkxUUFjCmZpaTBsUUlEQVFBQm80R1BNSUdNTUE0R0ExVWREd0VCL3dRRUF3SUZvREFkQmdOVkhTVUVGakFVQmdnckJnRUYKQlFjREFRWUlLd1lCQlFVSEF3SXdEQVlEVlIwVEFRSC9CQUl3QURBZkJnTlZIU01FR0RBV2dCUlFNdGg4Uzg1agovNjFwcHQwbGRJZVpzZlNoUERBc0JnTlZIUkVFSlRBamdpRXFMbU5zZFhOMFpYSXRNQzVvZFdKaWJHVXRaM0p3Cll5NWphV3hwZFcwdWFXOHdEUVlKS29aSWh2Y05BUUVMQlFBRGdnRUJBQmU3aFowZStMM1dva3FRbVNTLzBkSEoKZTZ1VWUvWkZQV2xudUdPektJcVNGS3MySEIrZUk5anpJcHZZZ01lUndFSFVERHBndEF1RWJpMHhqYThaQmltawpTMUY2VlBtV2xoQk9XOC9ad1IyOXU4RncxaHkwbzNUWUx0NXZJdXJkQzFjek9sV29CY2cxMG5uT3BTWTBHaUN1CndJYlN5NERlMUNMNnJxUjdRalpSS3VycWgwSEZ5QjVveFUvQ1hRTERiN1MwVytEWGk0clZVZ2RSY1BUdklyVXAKenprdHdBMFhlT2RldEcyNm9hajlsWFJucTRVUzVBNjVrZ1NqbEZITGFFWitobm53NzhHTmFQQ3Q2U0V0RHV6TQorc1Y3Qy9yL3o2NW9xV3NSaTN6ZGVxcGhxcUdlOUQ2dUFNbE9SUTB3YThrZXRvY0ZQS3EvU0NtS01iMWczNkk9Ci0tLS0tRU5EIENFUlRJRklDQVRFLS0tLS0K
  tls.key: LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLQpNSUlFcGdJQkFBS0NBUUVBejZ2YkZuUTA5cS85RWVKSSs2VDY0UkNTbHdObWNaVmNCOVd1MnFYYzJ6STZBLzZ3ClNZMVRGVUl1NU1ZODIrN085ZGNVdGZzUjc2R1BKSU5KMlk1RStpSGswNDBCN1BDM1g1Wmw5dWFWSnV4ZDU1SnkKd2JxWHR6c3ZicHluMDlkUlk2VUJBUjg1R056K0l3RUdzdFIvbUtpSW5GZ1p3RXZzY2hqem12R2k2TGhhYkd5SAp4KzFOeSsxdC9yRUl4Z2wydG9qRW9HT3VrbEYwNXBmSDI5Vkd0WFFtejJKK2tQRVlDclJ3aFZSdHBCVTBQQ0JqCnBmVXN0MGVTRmd1TU9aS0YvT3JBSndvZ2ZYVW4raTdxM1YrQzY5akJQYzVOc2ViNUlRMU8yaDNLR2xwMnRkRnYKQTRjMVBjZm9wNXJHYnhLaE1EaWZCZmoyaE81aTFRQWNmaWkwbFFJREFRQUJBb0lCQVFDaC9sck9ieU9KY3NxawpFckgvcWpnUkxFNU5BbGY5TGhjMS9WZUNNM1BPZ0tXRXpEMVRncXhXbnVQWmpWR1g5ZmIzQ2ltYnN4ZlFwMlB6CmhYNHIrTENSdGJLNzJ2aXZqUzVkb0FJMTBMUjBRbGtWOU1VVG5hd1BRRm5Gbk9uRmMrYUhKZ1ZjakxDTFZvZmYKWWtPSlovMklaWjc2NWpaZ0xGbHF2MC8zZzVvaWtaUXVwUkJTUTdMcWFlS1BXd1o2RWd1ODhCYzBrUitIaTVEZgp3cFZVdWkrcEFQTmlXU3FzeU4zVEZvUDZhaGF1SnQ1RjlyY3ZHNnFyMDVZMm1SbENISnhNeWozcStKNDl5aVpSCnlkWlh2RXpZd3pBY0ZrWXMyeERwREk4YVBScmlHT1p4SVlycWRhdlI3d0RlWVRwUGpWeGk3bmxRTTB2Q0w5VW0KWEV2dHVoUUJBb0dCQU9ZQW5MZ1lkbVJ6MWovQmtFTTV2djBDUjFCaW14dldQRmo0eWZKVnVVTFZtdnAvWUpjdQpteEZWZHRvamM2M2duZTdSUExTSDFPemNBSHIzNEhHRlF5MmQyRzVnMjJzNHZNMnhvbUtnU29acCtqbWgzMXh6Ckk4dlpid0FSeHBMbkxsaEdIbGR5S3M5WWZQTU5KVWdzNnBTZWFQNi9FLyt3L2diS3djSGZhVlNCQW9HQkFPY2wKRVZpbHZWVTN4djVjRVRWeitLUkdLS2ZUbnIrOWEwU3NvekdUMmxBbm1EWlNQNE00eG1lRUE0MittVTRFNExnOQpBU25KRW5nMGRsZVRPdXRMeXBkRksxMHlDMG0rR21RNEJlTHJPK3c2S09zdk4wQlBXZnBQd09FeER5WjFXQitNClFNN0c0N2tJeUdMdTJOZFIrT0NtdFdVWDZPWiszeEVHVnlQcXFjWVZBb0dCQU5Ld2lOOVMrVkQzazdGL25La1kKUXMzOXdsbnVtZXVjQ2xmdVB2L1FhdzdBSVdHS1FXNzc4R3ltZjJNL3luM2pIb2xmL2wzWmQ4RXBudjhHQmdHMwpjMXhjRmFDMjlRaDVSdXFkNkFTMGxOQWdVR2x1ME84ZFFoTkFNS0E5cUV0MW5reWFucnk0Qm1NOXllZlRpTzFlCng5d3dhRG5EeTR3VUUvOGd5UERSdU9rQkFvR0JBT1FSdmlqaStJc1NTeVlGZi9Gbkthb2xrODNzejlIUE8vMTUKL2xoWDAreU05UEo4ZXpDbUg1WmFPd3RzU21ZaUIvMmlLL2luN3JKdXlXb2wydGY2WTc2WXdHM25pQjNPRnNwVwpRUENqUFBBY2Z1MTRIQ00zYU1mRVU4T2ZIWnpMNGhUVzFjZHhsWmFvcE5pQlpiSW5ydE16aXY1aDlpc2dla2VaCkl2aE1maEgxQW9HQkFOWEIydUNZUGp2Yko3QnBFeEgrOHdEaG1ST0ZNaEdiemY4bkNMUkpJM2p3ajhOQUVONWQKdTVUV0RkSEFPUzVCRjdrRDFobG51L3BzMC8yT1VzVUZPM2RjZ21JV0k0YXBidk5iSkVJOHI2TVhsNWh4MVRRdgpzV1ViSUtsYkRSd1QwaDNWU2t4NW9sZWNydXp2ZWVuTjFaM1lmZVYwMndqMG9aN0dSTWNIOVl3WAotLS0tLUVORCBSU0EgUFJJVkFURSBLRVktLS0tLQo=
kind: Secret
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
  name: hubble-server-certs
  namespace: kube-system
type: kubernetes.io/tls
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
    prometheus.io/port: "9965"
    prometheus.io/scrape: "true"
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble
  name: hubble-metrics
  namespace: kube-system
spec:
  clusterIP: None
  ports:
  - name: hubble-metrics
    port: 9965
    protocol: TCP
    targetPort: hubble-metrics
  selector:
    k8s-app: cilium
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-peer
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: hubble-peer
  namespace: kube-system
spec:
  internalTrafficPolicy: Local
  ports:
  - name: peer-service
    port: 443
    protocol: TCP
    targetPort: 4244
  selector:
    k8s-app: cilium
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 4245
  selector:
    k8s-app: hubble-relay
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8081
  selector:
    k8s-app: hubble-ui
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-operator
    app.kubernetes.io/part-of: cilium
    io.cilium/app: operator
    name: cilium-operator
  name: cilium-operator
  namespace: kube-system
spec:
  replicas: 2
  selector:
    matchLabels:
      io.cilium/app: operator
      name: cilium-operator
  strategy:
    rollingUpdate:
      maxSurge: 25%
      maxUnavailable: 50%
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/cilium-configmap-checksum: 6b3235d1cca394f374a6bc69ed4d7d59e9c47ce47dd6779d7ebf0439c89adcfb
      labels:
        app.kubernetes.io/name: cilium-operator
        app.kubernetes.io/part-of: cilium
        io.cilium/app: operator
        name: cilium-operator
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                io.cilium/app: operator
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        - --debug=$(CILIUM_DEBUG)
        command:
        - cilium-operator-generic
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_DEBUG
          valueFrom:
            configMapKeyRef:
              key: debug
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/operator-generic:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 60
          periodSeconds: 10
          timeoutSeconds: 3
        name: cilium-operator
        readinessProbe:
          failureThreshold: 5
          httpGet:
            host: 127.0.0.1
            path: /healthz
            port: 9234
            scheme: HTTP
          initialDelaySeconds: 0
          periodSeconds: 5
          timeoutSeconds: 3
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp/cilium/config-map
          name: cilium-config-path
          readOnly: true
      hostNetwork: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-cluster-critical
      restartPolicy: Always
      serviceAccount: cilium-operator
      serviceAccountName: cilium-operator
      tolerations:
      - operator: Exists
      volumes:
      - configMap:
          name: cilium-config
        name: cilium-config-path
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-relay
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-relay
  name: hubble-relay
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-relay
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-relay-configmap-checksum: 2b2e9759f6b7b7c4ec466b4ce0a8881cc8c204694d803033b246fd49aabe6b03
      labels:
        app.kubernetes.io/name: hubble-relay
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-relay
    spec:
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: false
      containers:
      - args:
        - serve
        command:
        - hubble-relay
        image: quay.io/cilium/hubble-relay:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        livenessProbe:
          tcpSocket:
            port: grpc
        name: hubble-relay
        ports:
        - containerPort: 4245
          name: grpc
        readinessProbe:
          tcpSocket:
            port: grpc
        securityContext:
          capabilities:
            drop:
            - ALL
          runAsGroup: 65532
          runAsNonRoot: true
          runAsUser: 65532
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/hubble-relay
          name: config
          readOnly: true
        - mountPath: /var/lib/hubble-relay/tls
          name: tls
          readOnly: true
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      restartPolicy: Always
      securityContext:
        fsGroup: 65532
      serviceAccount: hubble-relay
      serviceAccountName: hubble-relay
      terminationGracePeriodSeconds: 1
      volumes:
      - configMap:
          items:
          - key: config.yaml
            path: config.yaml
          name: hubble-relay-config
        name: config
      - name: tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: client.crt
              - key: tls.key
                path: client.key
              - key: ca.crt
                path: hubble-server-ca.crt
              name: hubble-relay-client-certs
---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: hubble-ui
    app.kubernetes.io/part-of: cilium
    k8s-app: hubble-ui
  name: hubble-ui
  namespace: kube-system
spec:
  replicas: 1
  selector:
    matchLabels:
      k8s-app: hubble-ui
  strategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cilium.io/hubble-ui-nginx-configmap-checksum: 02d6b04b131029fae39270192dcff10fa3a64af9d1d4d0049f1efbc3f5526a34
      labels:
        app.kubernetes.io/name: hubble-ui
        app.kubernetes.io/part-of: cilium
        k8s-app: hubble-ui
    spec:
      automountServiceAccountToken: true
      containers:
      - image: quay.io/cilium/hubble-ui:v0.11.0@sha256:bcb369c47cada2d4257d63d3749f7f87c91dde32e010b223597306de95d1ecc8
        imagePullPolicy: IfNotPresent
        name: frontend
        ports:
        - containerPort: 8081
          name: http
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /etc/nginx/conf.d/default.conf
          name: hubble-ui-nginx-conf
          subPath: nginx.conf
        - mountPath: /tmp
          name: tmp-dir
      - env:
        - name: EVENTS_SERVER_PORT
          value: "8090"
        - name: FLOWS_API_ADDR
          value: hubble-relay:80
        image: quay.io/cilium/hubble-ui-backend:v0.11.0@sha256:14c04d11f78da5c363f88592abae8d2ecee3cbe009f443ef11df6ac5f692d839
        imagePullPolicy: IfNotPresent
        name: backend
        ports:
        - containerPort: 8090
          name: grpc
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts: null
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: null
      serviceAccount: hubble-ui
      serviceAccountName: hubble-ui
      volumes:
      - configMap:
          defaultMode: 420
          name: hubble-ui-nginx
        name: hubble-ui-nginx-conf
      - emptyDir: {}
        name: tmp-dir
---
apiVersion: apps/v1
kind: DaemonSet
metadata:
  annotations:
    meta.helm.sh/release-name: cilium
    meta.helm.sh/release-namespace: kube-system
  labels:
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: cilium-agent
    app.kubernetes.io/part-of: cilium
    k8s-app: cilium
  name: cilium
  namespace: kube-system
spec:
  selector:
    matchLabels:
      k8s-app: cilium
  template:
    metadata:
      annotations:
        container.apparmor.security.beta.kubernetes.io/cilium-agent: unconfined
        container.apparmor.security.beta.kubernetes.io/clean-cilium-state: unconfined
      labels:
        app.kubernetes.io/name: cilium-agent
        app.kubernetes.io/part-of: cilium
        k8s-app: cilium
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchLabels:
                k8s-app: cilium
            topologyKey: kubernetes.io/hostname
      automountServiceAccountToken: true
      containers:
      - args:
        - --config-dir=/tmp/cilium/config-map
        command:
        - cilium-agent
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: CILIUM_CLUSTERMESH_CONFIG
          value: /var/lib/cilium/clustermesh/
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        lifecycle:
          preStop:
            exec:
              command:
              - /cni-uninstall.sh
        livenessProbe:
          failureThreshold: 10
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        name: cilium-agent
        ports:
        - containerPort: 4244
          hostPort: 4244
          name: peer-service
          protocol: TCP
        - containerPort: 9965
          hostPort: 9965
          name: hubble-metrics
          protocol: TCP
        readinessProbe:
          failureThreshold: 3
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 30
          successThreshold: 1
          timeoutSeconds: 5
        securityContext:
          capabilities:
            add:
            - CHOWN
            - KILL
            - NET_ADMIN
            - NET_RAW
            - IPC_LOCK
            - SYS_ADMIN
            - SYS_RESOURCE
            - DAC_OVERRIDE
            - FOWNER
            - SETGID
            - SETUID
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        startupProbe:
          failureThreshold: 105
          httpGet:
            host: 127.0.0.1
            httpHeaders:
            - name: brief
              value: "true"
            path: /healthz
            port: 9879
            scheme: HTTP
          periodSeconds: 2
          successThreshold: 1
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/proc/sys/net
          name: host-proc-sys-net
        - mountPath: /host/proc/sys/kernel
          name: host-proc-sys-kernel
        - mountPath: /sys/fs/bpf
          mountPropagation: HostToContainer
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
        - mountPath: /host/etc/cni/net.d
          name: etc-cni-netd
        - mountPath: /var/lib/cilium/clustermesh
          name: clustermesh-secrets
          readOnly: true
        - mountPath: /lib/modules
          name: lib-modules
          readOnly: true
        - mountPath: /run/xtables.lock
          name: xtables-lock
        - mountPath: /var/lib/cilium/tls/hubble
          name: hubble-tls
          readOnly: true
        - mountPath: /tmp
          name: tmp
      hostNetwork: true
      initContainers:
      - command:
        - cilium
        - build-config
        env:
        - name: K8S_NODE_NAME
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: spec.nodeName
        - name: CILIUM_K8S_NAMESPACE
          valueFrom:
            fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: config
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /tmp
          name: tmp
      - args:
        - mount | grep "/sys/fs/bpf type bpf" || mount -t bpf bpf /sys/fs/bpf
        command:
        - /bin/bash
        - -c
        - --
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: mount-bpf-fs
        securityContext:
          privileged: true
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          mountPropagation: Bidirectional
          name: bpf-maps
      - command:
        - /init-container.sh
        env:
        - name: CILIUM_ALL_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-state
              name: cilium-config
              optional: true
        - name: CILIUM_BPF_STATE
          valueFrom:
            configMapKeyRef:
              key: clean-cilium-bpf-state
              name: cilium-config
              optional: true
        - name: KUBERNETES_SERVICE_HOST
          value: cluster-0.bjw-s.tech
        - name: KUBERNETES_SERVICE_PORT
          value: "6443"
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: clean-cilium-state
        resources:
          requests:
            cpu: 100m
            memory: 100Mi
        securityContext:
          capabilities:
            add:
            - NET_ADMIN
            - SYS_ADMIN
            - SYS_RESOURCE
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /sys/fs/bpf
          name: bpf-maps
        - mountPath: /sys/fs/cgroup
          mountPropagation: HostToContainer
          name: cilium-cgroup
        - mountPath: /var/run/cilium
          name: cilium-run
      - command:
        - /install-plugin.sh
        image: quay.io/cilium/cilium:v1.14.0-snapshot.2
        imagePullPolicy: IfNotPresent
        name: install-cni-binaries
        resources:
          requests:
            cpu: 100m
            memory: 10Mi
        securityContext:
          capabilities:
            drop:
            - ALL
          seLinuxOptions:
            level: s0
            type: spc_t
        terminationMessagePolicy: FallbackToLogsOnError
        volumeMounts:
        - mountPath: /host/opt/cni/bin
          name: cni-path
      nodeSelector:
        kubernetes.io/os: linux
      priorityClassName: system-node-critical
      restartPolicy: Always
      serviceAccount: cilium
      serviceAccountName: cilium
      terminationGracePeriodSeconds: 1
      tolerations:
      - operator: Exists
      volumes:
      - emptyDir: {}
        name: tmp
      - hostPath:
          path: /var/run/cilium
          type: DirectoryOrCreate
        name: cilium-run
      - hostPath:
          path: /sys/fs/bpf
          type: DirectoryOrCreate
        name: bpf-maps
      - hostPath:
          path: /sys/fs/cgroup
          type: DirectoryOrCreate
        name: cilium-cgroup
      - hostPath:
          path: /opt/cni/bin
          type: DirectoryOrCreate
        name: cni-path
      - hostPath:
          path: /etc/cni/net.d
          type: DirectoryOrCreate
        name: etc-cni-netd
      - hostPath:
          path: /lib/modules
        name: lib-modules
      - hostPath:
          path: /run/xtables.lock
          type: FileOrCreate
        name: xtables-lock
      - name: clustermesh-secrets
        projected:
          defaultMode: 256
          sources:
          - secret:
              name: cilium-clustermesh
              optional: true
          - secret:
              items:
              - key: tls.key
                path: common-etcd-client.key
              - key: tls.crt
                path: common-etcd-client.crt
              - key: ca.crt
                path: common-etcd-client-ca.crt
              name: clustermesh-apiserver-remote-cert
              optional: true
      - hostPath:
          path: /proc/sys/net
          type: Directory
        name: host-proc-sys-net
      - hostPath:
          path: /proc/sys/kernel
          type: Directory
        name: host-proc-sys-kernel
      - name: hubble-tls
        projected:
          defaultMode: 256
          sources:
          - secret:
              items:
              - key: tls.crt
                path: server.crt
              - key: tls.key
                path: server.key
              - key: ca.crt
                path: client-ca.crt
              name: hubble-server-certs
              optional: true
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 2
    type: RollingUpdate
