---
clustername: cluster-test

talosVersion: v1.0.6
kubernetesVersion: 1.23.7
endpoint: https://10.1.1.24:6443

cniConfig:
  name: custom
  urls:
    - https://raw.githubusercontent.com/bjw-s/home-ops/main/infrastructure/talos/cluster-test/cni/install.yaml

nodes:
  - controlPlane: true
    hostname: goblin.${domainName}
    installDisk: /dev/sda
    ipAddress: 10.1.1.24
    inlinePatch:
      machine:
        network:
          interfaces:
            - interface: eth0
              dhcp: true
            - interface: eth1
              dhcp: true
              addresses: []
              vlans:
                - vlanId: 40
                  dhcp: false
                  addresses:
                    - 10.1.3.140/24

controlPlane:
  inlinePatch:
    cluster:
      aescbcEncryptionSecret: ${aescbcEncryptionKey}
      aggregatorCA:
        crt: ${k8sAggregatorCert}
        key: ${k8sAggregatorCertKey}
      allowSchedulingOnMasters: true
      apiServer:
        certSANs:
          - cluster-test.${domainName}
        extraArgs:
          feature-gates: MixedProtocolLBService=true,EphemeralContainers=True
      ca:
        crt: ${clusterCert}
        key: ${clusterCertKey}
      controllerManager:
        extraArgs:
          feature-gates: MixedProtocolLBService=true,EphemeralContainers=True
      discovery:
        registries:
          service:
            disabled: true
      etcd:
        ca:
          crt: ${etcdCert}
          key: ${etcdCertKey}
      extraManifests:
        - https://raw.githubusercontent.com/alex1989hu/kubelet-serving-cert-approver/v0.5.0/deploy/ha-install.yaml
      proxy:
        disabled: true
        extraArgs:
          feature-gates: MixedProtocolLBService=true,EphemeralContainers=True
      scheduler:
        extraArgs:
          feature-gates: MixedProtocolLBService=true,EphemeralContainers=True
      secret: ${clusterSecret}
      serviceAccount:
        key: ${k8sServiceAccountKey}
      token: ${clusterToken}
    machine:
      ca:
        crt: ${machineCert}
        key: ${machineCertKey}
      certSANs:
        - cluster-test.${domainName}
      kubelet:
        extraArgs:
          feature-gates: GracefulNodeShutdown=true,MixedProtocolLBService=true
          rotate-server-certificates: "true"
      time:
        disabled: false
        servers:
          - 10.1.1.1
      token: ${machineToken}

worker:
  inlinePatch:
    cluster:
      aescbcEncryptionSecret: ${aescbcEncryptionKey}
      ca:
        crt: ${clusterCert}
        key: ${clusterCertKey}
      discovery:
        registries:
          service:
            disabled: true
      secret: ${clusterSecret}
      token: ${clusterToken}
    machine:
      ca:
        crt: ${machineCert}
        key: ${machineCertKey}
      token: ${machineToken}
