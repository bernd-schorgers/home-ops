---
clustername: cluster-test
controlPlane:
  inlinePatch:
    cluster:
      aescbcEncryptionSecret: ${aescbcEncryptionKey}
      aggregatorCA:
        crt: ${k8sAggregatorCert}
        key: ${k8sAggregatorCertKey}
      allowSchedulingOnMasters: true
      apiServer:
        extraArgs:
          feature-gates: MixedProtocolLBService=true,EphemeralContainers=True
      ca:
        crt: ${clusterCert}
        key: ${clusterCertKey}
      controllerManager:
        extraArgs:
          feature-gates: MixedProtocolLBService=true,EphemeralContainers=True
      etcd:
        ca:
          crt: ${etcdCert}
          key: ${etcdCertKey}
      extraManifests:
        - https://raw.githubusercontent.com/alex1989hu/kubelet-serving-cert-approver/v0.5.0/deploy/ha-install.yaml
      network:
        cni:
          name: custom
          urls:
            - https://raw.githubusercontent.com/bjw-s/home-ops/main/infrastructure/talos/cluster-test/cni/install.yaml
      proxy:
        disabled: true
        extraArgs:
          feature-gates: MixedProtocolLBService=true,EphemeralContainers=True
      scheduler:
        extraArgs:
          feature-gates: MixedProtocolLBService=true,EphemeralContainers=True
      secret: ${clusterSecret}
      serviceAccount:
        key: ${k8sServiceAccountKey}
      token: ${clusterToken}
    machine:
      ca:
        crt: ${machineCert}
        key: ${machineCertKey}
      kubelet:
        extraArgs:
          feature-gates: GracefulNodeShutdown=true,MixedProtocolLBService=true
          rotate-server-certificates: "true"
      network:
        interfaces:
          - dhcp: true
            interface: eth0
      time:
        disabled: false
        servers:
          - 10.1.1.1
      token: ${machineToken}
endpoint: https://10.1.1.24:6443
nodes:
  - controlPlane: true
    hostname: goblin
    installDisk: /dev/sda
    ipAddress: 10.1.1.24
talosVersion: v1.0.5
worker:
  inlinePatch:
    cluster:
      aescbcEncryptionSecret: ${aescbcEncryptionKey}
      ca:
        crt: ${clusterCert}
        key: ${clusterCertKey}
      secret: ${clusterSecret}
      token: ${clusterToken}
    machine:
      ca:
        crt: ${machineCert}
        key: ${machineCertKey}
      token: ${machineToken}
