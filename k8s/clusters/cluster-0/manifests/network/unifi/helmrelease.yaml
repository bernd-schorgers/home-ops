---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: unifi
  namespace: network
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: unifi
      version: 4.3.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: jacobalberty/unifi
      tag: v6.4.54

    # podAnnotations:
    #   backup.velero.io/backup-volumes: data
    #   pre.hook.backup.velero.io/container: fsfreeze
    #   pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/data"]'
    #   post.hook.backup.velero.io/container: fsfreeze
    #   post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/data"]'

    env:
      TZ: Europe/Amsterdam

    # TODO - This needs to be 1 service
    service:
      main:
        type: LoadBalancer
        annotations:
          coredns.io/hostname: unifi
          metallb.universe.tf/allow-shared-ip: unifi
        loadBalancerIP: ${LB_UNIFI}
        externalTrafficPolicy: Local
        ports:
          stun:
            enabled: false
          syslog:
            enabled: false
          discovery:
            enabled: false

      udp:
        enabled: true
        type: LoadBalancer
        annotations:
          coredns.io/hostname: unifi
          metallb.universe.tf/allow-shared-ip: unifi
        loadBalancerIP: ${LB_UNIFI}
        externalTrafficPolicy: Local
        ports:
          stun:
            enabled: true
            port: 3478
            protocol: UDP
          syslog:
            enabled: true
            port: 5514
            protocol: UDP
          discovery:
            enabled: true
            port: 10001
            protocol: UDP

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns.alpha.kubernetes.io/target: ingress.${INGRESS_DOMAIN}
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          traefik.ingress.kubernetes.io/router.middlewares: network-rfc1918-ips@kubernetescrd

        hosts:
          - host: unifi.${INGRESS_DOMAIN}
            paths:
              - path: /

        tls:
          - secretName: tls.unifi-controller
            hosts:
              - unifi.${INGRESS_DOMAIN}

    persistence:
      data:
        enabled: true
        type: custom
        volumeSpec:
          nfs:
            server: "${NAS_ADDRESS}"
            path: /volume1/Backup/Kubernetes/Data/Unifi
        # existingClaim: unifi-data

    resources:
      requests:
        cpu: "0.02"
        memory: "1024M"
      limits:
        memory: "1536M"

    # additionalContainers:
    #   fsfreeze:
    #     name: fsfreeze
    #     image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
    #     volumeMounts:
    #       - name: data
    #         mountPath: /data
    #     securityContext:
    #       privileged: true
