---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: rook-ceph-cluster
  namespace: rook-ceph
spec:
  interval: 5m
  chart:
    spec:
      chart: rook-ceph-cluster
      version: v1.9.0
      sourceRef:
        kind: HelmRepository
        name: rook-ceph-charts
        namespace: flux-system
  values:
    toolbox:
      enabled: false

    monitoring:
      enabled: true
      createPrometheusRules: true

    configOverride: |
      [global]
      bdev_enable_discard = true
      bdev_async_discard = true

    cephClusterSpec:
      healthCheck:
        livenessProbe:
          mon:
            probe:
              timeoutSeconds: 5
          mgr:
            probe:
              timeoutSeconds: 5
          osd:
            probe:
              timeoutSeconds: 5

        startupProbe:
          mon:
            probe:
              timeoutSeconds: 5
          mgr:
            probe:
              timeoutSeconds: 5
          osd:
            probe:
              timeoutSeconds: 5

      resources:
        mgr:
          limits:
            cpu: "500m"
            memory: "1Gi"
          requests:
            cpu: "250m"
            memory: "512Mi"
        mon:
          limits:
            cpu: "1000m"
            memory: "2Gi"
          requests:
            cpu: "500m"
            memory: "1Gi"
        osd:
          limits:
            cpu: "1000m"
            memory: "4Gi"
          requests:
            cpu: "500m"
            memory: "4Gi"
        prepareosd:
          limits:
            cpu: "250m"
            memory: "200Mi"
          requests:
            cpu: "250m"
            memory: "50Mi"
        mgr-sidecar:
          limits:
            cpu: "250m"
            memory: "100Mi"
          requests:
            cpu: "100m"
            memory: "40Mi"
        crashcollector:
          limits:
            cpu: "250m"
            memory: "60Mi"
          requests:
            cpu: "100m"
            memory: "60Mi"
        logcollector:
          limits:
            cpu: "250m"
            memory: "1Gi"
          requests:
            cpu: "100m"
            memory: "100Mi"
        cleanup:
          limits:
            cpu: "250m"
            memory: "1Gi"
          requests:
            cpu: "250m"
            memory: "100Mi"

      dashboard:
        enabled: true
        urlPrefix: /

      storage:
        useAllNodes: false
        useAllDevices: false
        config:
          osdsPerDevice: "1"
        nodes:
          - name: "delta"
            devices:
              - name: "/dev/disk/by-id/nvme-Samsung_SSD_980_1TB_S649NX0RB57009Y"
          - name: "enigma"
            devices:
              - name: "/dev/disk/by-id/nvme-Samsung_SSD_980_1TB_S649NX0RB57050E"
          - name: "felix"
            devices:
              - name: "/dev/disk/by-id/nvme-CT1000P1SSD8_202228759489"

    ingress:
      dashboard:
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns.alpha.kubernetes.io/target: ingress.${INGRESS_DOMAIN}
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
        host:
          name: "rook.${CLUSTER_NAME}.${INGRESS_DOMAIN}"
          path: "/"
        tls:
          - secretName: tls.rook-ceph
            hosts:
              - "rook.${CLUSTER_NAME}.${INGRESS_DOMAIN}"

    cephBlockPoolsVolumeSnapshotClass:
      enabled: true
      name: csi-rbdplugin-snapclass
      annotations:
        k10.kasten.io/is-snapshot-class: "true"

    cephBlockPools:
      - name: ceph-blockpool
        spec:
          failureDomain: host
          replicated:
            size: 3
        storageClass:
          enabled: true
          name: ceph-block
          isDefault: true
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          parameters:
            imageFormat: "2"
            imageFeatures: layering
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-rbd-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-rbd-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephFileSystems:
      - name: ceph-filesystem
        spec:
          metadataPool:
            replicated:
              size: 3
          dataPools:
            - failureDomain: host
              replicated:
                size: 3
          metadataServer:
            activeCount: 1
            activeStandby: true
            resources:
              limits:
                cpu: "500m"
                memory: "4Gi"
              requests:
                cpu: "250m"
                memory: "4Gi"
        storageClass:
          enabled: true
          isDefault: false
          name: ceph-filesystem
          reclaimPolicy: Delete
          allowVolumeExpansion: true
          mountOptions: []
          parameters:
            csi.storage.k8s.io/provisioner-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/provisioner-secret-namespace: rook-ceph
            csi.storage.k8s.io/controller-expand-secret-name: rook-csi-cephfs-provisioner
            csi.storage.k8s.io/controller-expand-secret-namespace: rook-ceph
            csi.storage.k8s.io/node-stage-secret-name: rook-csi-cephfs-node
            csi.storage.k8s.io/node-stage-secret-namespace: rook-ceph
            csi.storage.k8s.io/fstype: ext4

    cephObjectStores: []
