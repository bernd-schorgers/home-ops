---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vaultwarden
  namespace: selfhosted
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: vaultwarden
      version: 3.2.1
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: vaultwarden/server
      tag: 1.23.0

    podAnnotations:
      backup.velero.io/backup-volumes: config
      pre.hook.backup.velero.io/container: fsfreeze
      pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/data"]'
      post.hook.backup.velero.io/container: fsfreeze
      post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/data"]'

    env:
      TZ: "Europe/Amsterdam"
      # DATABASE_URL: set by valuesFrom
      DOMAIN: https://vaultwarden.${FAMILY_DOMAIN}
      SIGNUPS_ALLOWED: "false"
      # ADMIN_TOKEN: set by valuesFrom

    persistence:
      config:
        enabled: true
        existingClaim: vaultwarden-config

    ingress:
      main:
        enabled: true
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: ingress.${FAMILY_DOMAIN}
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
        hosts:
          - host: vaultwarden.${FAMILY_DOMAIN}
            paths:
              - path: /
        tls:
          - secretName: tls.vaultwarden
            hosts:
              - vaultwarden.${FAMILY_DOMAIN}

    resources:
      requests:
        memory: "256M"
      limits:
        memory: "384M"

    additionalContainers:
      fsfreeze:
        name: fsfreeze
        image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
        volumeMounts:
          - name: config
            mountPath: /data
        securityContext:
          privileged: true

    postgresql:
      enabled: true

      image:
        repository: bitnami/postgresql
        tag: 13.4.0
        pullPolicy: IfNotPresent

      postgresqlUsername: vaultwarden
      # postgresqlPassword: set by valuesFrom
      postgresqlDatabase: vaultwarden

      primary:
        podAnnotations:
          backup.velero.io/backup-volumes: data
          pre.hook.backup.velero.io/container: fsfreeze
          pre.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--freeze", "/data"]'
          post.hook.backup.velero.io/container: fsfreeze
          post.hook.backup.velero.io/command: '["/sbin/fsfreeze", "--unfreeze", "/data"]'

        sidecars:
          - name: fsfreeze
            image: ghcr.io/k8s-at-home/fsfreeze:v2.37-r0
            volumeMounts:
              - name: data
                mountPath: /data
            securityContext:
              privileged: true

      persistence:
        enabled: true
        existingClaim: vaultwarden-postgresql

      resources:
        requests:
          memory: 128Mi
        limits:
          memory: 256Mi

  valuesFrom:
    - kind: Secret
      name: vaultwarden
      valuesKey: postgresql_password
      targetPath: postgresql.postgresqlPassword
      optional: false
    - kind: Secret
      name: vaultwarden
      valuesKey: vaultwarden_admin_token
      targetPath: env.ADMIN_TOKEN
      optional: false
    - kind: Secret
      name: vaultwarden
      valuesKey: vaultwarden_database_url
      targetPath: env.DATABASE_URL
      optional: false
