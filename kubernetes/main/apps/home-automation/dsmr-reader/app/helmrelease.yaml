---
# yaml-language-server: $schema=https://raw.githubusercontent.com/fluxcd-community/flux2-schemas/main/helmrelease-helm-v2beta2.json
apiVersion: helm.toolkit.fluxcd.io/v2beta2
kind: HelmRelease
metadata:
  name: dsmr-reader
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 2.6.0
      interval: 30m
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system

  values:
    controllers:
      main:
        annotations:
          reloader.stakater.com/auto: "true"

        pod:
          labels:
            ingress.home.arpa/nginx-internal: allow
            egress.home.arpa/lan: allow
            db.home.arpa/pg: postgres
            egress.home.arpa/kubedns: allow # FIXME: Remove when clusterNetworkPolicy is in place
          enableServiceLinks: false

        containers:
          main:
            image:
              repository: ghcr.io/xirixiz/dsmr-reader-docker
              tag: 5.10.4-2023.11.01
            # command:
            #   - /bin/sh
            #   - -c
            # args:
            #   - "while true; do echo hello; sleep 10;done"
            env:
              DJANGO_TIME_ZONE: "Europe/Amsterdam"
              DSMRREADER_REMOTE_DATALOGGER_INPUT_METHOD: ipv4
              DSMRREADER_REMOTE_DATALOGGER_NETWORK_HOST: "10.1.3.45"
              DSMRREADER_REMOTE_DATALOGGER_NETWORK_PORT: "8088"
            envFrom:
              - secretRef:
                  name: dsmr-reader-secret
              - secretRef:
                  name: dsmr-reader-db-secret
            resources:
              requests:
                cpu: 47m
                memory: 662M
              limits:
                memory: 662M

    service:
      main:
        ports:
          http:
            port: 80

    ingress:
      main:
        enabled: true
        className: "internal-nginx"
        hosts:
          - host: "${HOSTNAME}"
            paths:
              - path: /
                service:
                  name: main
                  port: http
        tls:
          - hosts:
              - "${HOSTNAME}"
